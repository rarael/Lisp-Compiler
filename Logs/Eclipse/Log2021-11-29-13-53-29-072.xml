<Events startTimestamp="1638212009072" logVersion="1.0.0.202108012048">
  <Command __id="2" _type="EclipseCommand" commandID="" date="Mon Nov 29 13:53:30 EST 2021" starttimestamp="1638212009072" timestamp="1023" />
  <Command __id="3" _type="EclipseCommand" commandID="" date="Mon Nov 29 13:53:30 EST 2021" starttimestamp="1638212009072" timestamp="1157" />
  <Command __id="4" _type="EclipseCommand" commandID="" date="Mon Nov 29 13:53:30 EST 2021" starttimestamp="1638212009072" timestamp="1342" />
  <Command __id="5" _type="EclipseCommand" commandID="" date="Mon Nov 29 13:53:30 EST 2021" starttimestamp="1638212009072" timestamp="1354" />
  <Command __id="6" _type="EclipseCommand" commandID="" date="Mon Nov 29 13:53:30 EST 2021" starttimestamp="1638212009072" timestamp="1684" />
  <Command __id="7" _type="EclipseCommand" commandID="" date="Mon Nov 29 13:53:30 EST 2021" starttimestamp="1638212009072" timestamp="1691" />
  <Command __id="8" _type="EclipseCommand" commandID="" date="Mon Nov 29 13:53:30 EST 2021" starttimestamp="1638212009072" timestamp="1755" />
  <Command __id="9" _type="EclipseCommand" commandID="" date="Mon Nov 29 13:53:30 EST 2021" starttimestamp="1638212009072" timestamp="1758" />
  <Command __id="10" _type="EclipseCommand" commandID="" date="Mon Nov 29 13:53:31 EST 2021" starttimestamp="1638212009072" timestamp="2090" />
  <Command __id="12" _type="PauseCommand" date="Mon Nov 29 13:53:49 EST 2021" range="10s-20s" starttimestamp="1638212009072" timestamp="19938">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[17597]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="11" _type="ShellCommand" date="Mon Nov 29 13:53:48 EST 2021" starttimestamp="1638212009072" timestamp="19687" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="13" _type="ShellCommand" date="Mon Nov 29 13:53:49 EST 2021" starttimestamp="1638212009072" timestamp="19987" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="15" _type="PauseCommand" date="Mon Nov 29 13:53:51 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="22647">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2660]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="14" _type="ShellCommand" date="Mon Nov 29 13:53:51 EST 2021" starttimestamp="1638212009072" timestamp="22647" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="52" _type="PauseCommand" date="Mon Nov 29 13:59:22 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="353221">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2599]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ProgramExecutionEvent]]></next>
  </Command>
  <Command __id="51" _type="ProgramExecutionEvent" className="/a5/src/a5/RunLisp.java" date="Mon Nov 29 13:59:22 EST 2021" kind="HitBreakPoint" projectName="a5" starttimestamp="1638212009072" timestamp="353221" type="Run" />
  <Command __id="53" _type="RunCommand" className="/a5/src/a5/RunLisp.java" date="Mon Nov 29 13:59:22 EST 2021" kind="HitBreakPoint" projectName="a5" starttimestamp="1638212009072" timestamp="353222" type="Run" />
  <Command __id="55" _type="PauseCommand" date="Mon Nov 29 13:59:30 EST 2021" range="5s-10s" starttimestamp="1638212009072" timestamp="361135">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[7913]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="54" _type="ConsoleInput" date="Mon Nov 29 13:59:30 EST 2021" starttimestamp="1638212009072" timestamp="361135" type="Exception">
    <outputString><![CDATA[(load "test2.lisp")
]]></outputString>
  </Command>
  <Command __id="56" _type="ProgramExecutionEvent" className="/a5/src/a5/RunLisp.java" date="Mon Nov 29 13:59:30 EST 2021" kind="HitBreakPoint" projectName="a5" starttimestamp="1638212009072" timestamp="361201" type="Run" />
  <Command __id="57" _type="ProgramExecutionEvent" className="/a5/src/a5/RunLisp.java" date="Mon Nov 29 13:59:30 EST 2021" kind="HitBreakPoint" projectName="a5" starttimestamp="1638212009072" timestamp="361202" type="Run" />
  <Command __id="58" _type="ExceptionCommand" date="Mon Nov 29 13:59:30 EST 2021" starttimestamp="1638212009072" timestamp="361219" type="Exception">
    <exceptionString><![CDATA[29
42
42
29
42
42
42
42
LAMBDA (X Y Z) (OR (AND (>= X 13) (<= Y 30) (<= Z 30)) (AND (>= X 6) (<= Y 30) (<= Z 10)) (AND (>= X 27) (<= Y 30) (<= Z 50)) (AND (>= X 13) (<= Y 15) (<= Z 50)) (AND (>= X 13) (<= Y 120) (<= Z 10)) (AND (>= X 27) (<= Y 120) (<= Z 30)) (AND (>= X 6) (<= Y 15) (<= Z 30)))
5
LAMBDA (X) (FUNCTION (LAMBDA (Y) (* X Y)))
#<FUNCTION :LAMBDA (Y) (* X Y)>
LAMBDA (X) (COND (AND (NOT (ATOM X)) (ATOM (CAR X)) (AND (COND (CAR X)) (COND (CDR X)))) (AND (ATOM (CDR X)) (NOT (COND (CDR X)))) (T (FUNCALL ISLIST (CDR X))))
Exception in thread "main" java.util.NoSuchElementException: No value present
	at java.base/java.util.Optional.get(Optional.java:148)
	at a5.VariableEval.eval(VariableEval.java:23)
	at expression.CondEvaluator.eval(CondEvaluator.java:17)
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:50)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:25)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.evaluator.function.BasicLambda.doEval(BasicLambda.java:75)
	at main.lisp.parser.terms.AbstractAtom.eval(AbstractAtom.java:22)
	at functional.FuncallEvaluator.evaluateLambda(FuncallEvaluator.java:65)
	at functional.FuncallEvaluator.eval(FuncallEvaluator.java:32)
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:50)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:25)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at expression.LoadEvaluator.eval(LoadEvaluator.java:31)
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:50)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:25)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
	at a5.RunLisp.main(RunLisp.java:21)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="60" _type="PauseCommand" date="Mon Nov 29 13:59:44 EST 2021" range="10s-20s" starttimestamp="1638212009072" timestamp="375846">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[14627]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="61" _type="SelectTextCommand" caretOffset="413" date="Mon Nov 29 13:59:45 EST 2021" end="413" start="323" starttimestamp="1638212009072" timestamp="376118" />
  <Command __id="63" _type="PauseCommand" date="Mon Nov 29 14:00:09 EST 2021" range="20s-30s" starttimestamp="1638212009072" timestamp="400043">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[23925]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="62" _type="MoveCaretCommand" caretOffset="462" date="Mon Nov 29 14:00:09 EST 2021" docOffset="661" starttimestamp="1638212009072" timestamp="400043" />
  <Command __id="65" _type="PauseCommand" date="Mon Nov 29 14:00:11 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="402597">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2554]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="64" _type="SelectTextCommand" caretOffset="389" date="Mon Nov 29 14:00:11 EST 2021" end="402" start="389" starttimestamp="1638212009072" timestamp="402597" />
  <Command __id="67" _type="PauseCommand" date="Mon Nov 29 14:00:13 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="404462">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1865]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="66" _type="MoveCaretCommand" caretOffset="462" date="Mon Nov 29 14:00:13 EST 2021" docOffset="661" starttimestamp="1638212009072" timestamp="404462" />
  <Command __id="96" _type="PauseCommand" date="Mon Nov 29 14:00:24 EST 2021" range="5s-10s" starttimestamp="1638212009072" timestamp="415460">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5766]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ProgramExecutionEvent]]></next>
  </Command>
  <Command __id="95" _type="ProgramExecutionEvent" className="/a5/src/a5/LocalChecks.java" date="Mon Nov 29 14:00:24 EST 2021" kind="HitBreakPoint" projectName="a5" starttimestamp="1638212009072" timestamp="415459" type="Run" />
  <Command __id="97" _type="RunCommand" className="/a5/src/a5/LocalChecks.java" date="Mon Nov 29 14:00:24 EST 2021" kind="HitBreakPoint" projectName="a5" starttimestamp="1638212009072" timestamp="415461" type="Run" />
  <Command __id="99" _type="PauseCommand" date="Mon Nov 29 14:00:26 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="417927">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[2466]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="98" _type="ShellCommand" date="Mon Nov 29 14:00:26 EST 2021" starttimestamp="1638212009072" timestamp="417927" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="101" _type="PauseCommand" date="Mon Nov 29 14:00:28 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="419520">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1593]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="100" _type="ExceptionCommand" date="Mon Nov 29 14:00:28 EST 2021" starttimestamp="1638212009072" timestamp="419520" type="Exception">
    <exceptionString><![CDATA[Test execution time (ms):1
Test execution time (ms):9
Test execution time (ms):12
Test execution time (ms):68
Test execution time (ms):70
Test execution time (ms):1
Test execution time (ms):0
Test execution time (ms):0
Test execution time (ms):1
java.lang.IllegalStateException: Expression does not start with an operator
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:52)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:25)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at expression.CondEvaluator.eval(CondEvaluator.java:21)
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:50)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:25)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at expression.EvalEvaluator.eval(EvalEvaluator.java:10)
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:50)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:25)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at expression.EvalEvaluator.eval(EvalEvaluator.java:10)
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:50)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:25)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="102" _type="ConsoleOutput" date="Mon Nov 29 14:00:28 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="419677" type="ConsoleOutput">
    <outputString><![CDATA[	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:226)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:106)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:301)
	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)
	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)
	at grader.basics.testcase.PassFailJUnitTestCase.possiblyRunAndCheckPrecedingTests(PassFailJUnitTestCase.java:166)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:221)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:106)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:301)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"val curryableMatchingSafe = fn¶  : ('a * (int * int * int) -> bool) -> 'a -> bool¶val curriedMatchingDerivedSafe = fn : int * int * int -> bool¶val curriedMatchingGivenSafe = fn : int * int * int -> bool¶val it = () : unit¶- "), Diff(INSERT,"	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:226)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:106)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:301)¶	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)¶	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)¶	at grader.basics.testcase.PassFailJUnitTestCase.possiblyRunAndCheckPrecedingTests(PassFailJUnitTestCase.java:166)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:221)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:106)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:301)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="103" _type="ConsoleOutput" date="Mon Nov 29 14:00:28 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="419749" type="ConsoleOutput">
    <outputString><![CDATA[Building symbol table and running first pass checks:Mon Nov 29 14:00:28 EST 2021
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)¶	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:226)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:106)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:301)¶	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)¶	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)¶	at grader.basics.testcase.PassFailJUnitTestCase.possiblyRunAndCheckPrecedingTests(PassFailJUnitTestCase.java:166)¶	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:221)¶	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:106)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)¶	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)¶	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)¶	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)¶	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)¶	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)¶	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)¶	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)¶	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)¶	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)¶	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)¶	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:301)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)"), Diff(INSERT,"Building symbol table and running first pass checks:Mon Nov 29 14:00:28 EST 2021"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="105" _type="PauseCommand" date="Mon Nov 29 14:00:30 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="421354">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1605]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="104" _type="ConsoleOutput" date="Mon Nov 29 14:00:30 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="421354" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:39
Running second pass checks Mon Nov 29 14:00:30 EST 2021
Start O(n2) inter- and intra class method calls:Mon Nov 29 14:00:30 EST 2021
End O(n2) inter- and intra class method calls:Mon Nov 29 14:00:30 EST 2021
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Building s"), Diff(INSERT,"S"), Diff(EQUAL,"ymbol table "), Diff(DELETE,"and r"), Diff(INSERT,"size:39¶R"), Diff(EQUAL,"unning "), Diff(DELETE,"first"), Diff(INSERT,"second"), Diff(EQUAL," pass checks"), Diff(DELETE,":Mon Nov 29 14:00:28"), Diff(INSERT," Mon Nov 29 14:00:30 EST 2021¶Start O(n2) inter- and intra class method calls:Mon Nov 29 14:00:30 EST 2021¶End O(n2) inter- and intra class method calls:Mon Nov 29 14:00:30"), Diff(EQUAL," EST 2021¶")]]]></diff>
  </Command>
  <Command __id="106" _type="ConsoleOutput" date="Mon Nov 29 14:00:31 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="422146" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Mon Nov 29 14:00:31 EST 2021
Generating checks:Mon Nov 29 14:00:31 EST 2021
Finished Generating checks:Mon Nov 29 14:00:31 EST 2021
Generating externals:Mon Nov 29 14:00:31 EST 2021
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:39¶Running"), Diff(INSERT,"Finished"), Diff(EQUAL," second pass checks"), Diff(DELETE," "), Diff(INSERT,":"), Diff(EQUAL,"Mon Nov 29 14:00:3"), Diff(DELETE,"0"), Diff(INSERT,"1"), Diff(EQUAL," EST 2021¶"), Diff(DELETE,"Start O(n2) inter- and intra class method call"), Diff(INSERT,"Generating checks:Mon Nov 29 14:00:31 EST 2021¶Finished Generating check"), Diff(EQUAL,"s:Mon Nov 29 14:00:3"), Diff(DELETE,"0"), Diff(INSERT,"1"), Diff(EQUAL," EST 2021¶"), Diff(DELETE,"End O(n2) inter- and intra class method cal"), Diff(INSERT,"Generating externa"), Diff(EQUAL,"ls:Mon Nov 29 14:00:3"), Diff(DELETE,"0"), Diff(INSERT,"1"), Diff(EQUAL," EST 2021¶")]]]></diff>
  </Command>
  <Command __id="107" _type="ConsoleOutput" date="Mon Nov 29 14:00:31 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="422330" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Mon Nov 29 14:00:31 EST 2021
A6CommonPropertiesInherited did not pass completely:See console trace about lines failing  this check%0.0

Test execution time (ms):2637
A6CommonSignaturesAreInherited did not pass completely:See console trace about lines failing  this check%0.7251798561151078

Test execution time (ms):18
A6Encapsulation did not pass completely:%0.96

Test execution time (ms):12
A6NoHiddenFields did not pass completely:%0.96

Test execution time (ms):3
A6NonPublicAccessModifiersMatched did not pass completely:%0.96

Test execution time (ms):7
A6PublicMethodsOverride did not pass completely:See console trace about lines failing  this check%0.7418181818181818

Test execution time (ms):7
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass check"), Diff(INSERT,"Generating external"), Diff(EQUAL,"s:Mon Nov 29 14:00:31 EST 2021¶"), Diff(DELETE,"Generating checks:Mon Nov 29 14:00:31 EST 2021¶Finished Generating checks:Mon Nov 29 14:00:31 EST 2021¶Generating externals:Mon Nov 29 14:00:31 EST 2021"), Diff(INSERT,"A6CommonPropertiesInherited did not pass completely:See console trace about lines failing  this check%0.0¶¶Test execution time (ms):2637¶A6CommonSignaturesAreInherited did not pass completely:See console trace about lines failing  this check%0.7251798561151078¶¶Test execution time (ms):18¶A6Encapsulation did not pass completely:%0.96¶¶Test execution time (ms):12¶A6NoHiddenFields did not pass completely:%0.96¶¶Test execution time (ms):3¶A6NonPublicAccessModifiersMatched did not pass completely:%0.96¶¶Test execution time (ms):7¶A6PublicMethodsOverride did not pass completely:See console trace about lines failing  this check%0.7418181818181818¶¶Test execution time (ms):7"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="108" _type="ConsoleOutput" date="Mon Nov 29 14:00:31 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="422393" type="ConsoleOutput">
    <outputString><![CDATA[A6NoStarImports did not pass completely:%0.96

Test execution time (ms):7
A6PackageDeclarations did not pass completely:%0.96

Test execution time (ms):5
F21A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0

Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Mon Nov 29 14:00:31 EST 2021¶A6CommonPropertiesInherited did not pass completely:See console trace about lines failing  this check"), Diff(INSERT,"A6NoStarImports did not pass completely:"), Diff(EQUAL,"%0."), Diff(DELETE,"0"), Diff(INSERT,"96"), Diff(EQUAL,"¶¶Test execution time (ms):"), Diff(DELETE,"263"), Diff(EQUAL,"7¶A6"), Diff(DELETE,"CommonSignaturesAreInherited did not pass completely:See console trace about lines failing  this check%0.7251798561151078¶¶Test execution time (ms):18¶A6Encapsulation"), Diff(INSERT,"PackageDeclarations"), Diff(EQUAL," did not pass completely:%0.96¶¶Test execution time (ms):"), Diff(DELETE,"12¶A6NoHiddenFields did not pass completely:%0.96¶¶Test execution time (ms):3¶A6NonPublicAccessModifiersMatched did not pass completely:%0.96¶¶Test execution time (ms):7¶A6PublicMethodsOverride did not pass completely:See console trace about lines failing  this check%0.7418181818181818"), Diff(INSERT,"5¶F21A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0"), Diff(EQUAL,"¶¶Test execution time (ms):"), Diff(DELETE,"7"), Diff(INSERT,"2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="110" _type="PauseCommand" date="Mon Nov 29 14:00:34 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="425139">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2746]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="109" _type="ConsoleOutput" date="Mon Nov 29 14:00:34 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="425139" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"A6NoStarImports did not pass completely:%0.96¶¶Test execution time (ms):7¶A6PackageDeclarations did not pass completely:%0.96¶¶Test execution time (ms):5¶F21A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0¶¶Test execution time (ms):2"), Diff(INSERT,"Test execution time (ms):0¶Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="112" _type="PauseCommand" date="Mon Nov 29 14:00:35 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="426211">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1072]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="111" _type="ExceptionCommand" date="Mon Nov 29 14:00:35 EST 2021" starttimestamp="1638212009072" timestamp="426211" type="Exception">
    <exceptionString><![CDATA[LispIsListChecker did not pass completely:Expected strings:Tactual string NIL%0.0

Test execution time (ms):1
LispIsListChecker2 did not pass completely:Expected strings:Tactual string NIL%0.0

Test execution time (ms):0
Test execution time (ms):0
Test execution time (ms):0
java.lang.NullPointerException
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.propertyChange(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:48)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.firePropertyChange(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:102)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:93)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:226)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:106)
	at jdk.internal.reflect.GeneratedMethodAccessor17.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:301)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="114" _type="PauseCommand" date="Mon Nov 29 14:00:43 EST 2021" range="5s-10s" starttimestamp="1638212009072" timestamp="434055">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[7844]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="113" _type="ExceptionCommand" date="Mon Nov 29 14:00:43 EST 2021" starttimestamp="1638212009072" timestamp="434055" type="Exception">
    <exceptionString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'CURRY'
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:48)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:25)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at functional.FuncallEvaluator.eval(FuncallEvaluator.java:21)
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:50)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:25)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:226)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:106)
	at jdk.internal.reflect.GeneratedMethodAccessor17.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:301)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="116" _type="PauseCommand" date="Mon Nov 29 14:00:44 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="435280">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[1225]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="115" _type="ExceptionCommand" date="Mon Nov 29 14:00:44 EST 2021" starttimestamp="1638212009072" timestamp="435280" type="Exception">
    <exceptionString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'LET'
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:48)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:25)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:226)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:106)
	at jdk.internal.reflect.GeneratedMethodAccessor17.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:301)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="118" _type="PauseCommand" date="Mon Nov 29 14:00:45 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="436663">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[1383]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="117" _type="ConsoleOutput" date="Mon Nov 29 14:00:45 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="436663" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):0¶"), Diff(EQUAL,"Test execution time (ms):1¶")]]]></diff>
  </Command>
  <Command __id="120" _type="PauseCommand" date="Mon Nov 29 14:00:47 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="438151">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1488]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="119" _type="ConsoleOutput" date="Mon Nov 29 14:00:47 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="438151" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):0¶"), Diff(EQUAL,"Test execution time (ms):1¶")]]]></diff>
  </Command>
  <Command __id="122" _type="PauseCommand" date="Mon Nov 29 14:00:48 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="439573">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1422]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="121" _type="ConsoleOutput" date="Mon Nov 29 14:00:48 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="439573" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):24
Test execution time (ms):11
Test execution time (ms):13
FuncallCallsExpressionFactory did not pass completely:Checkstyle output does not match:.*INFO.*BasicFuncallEvaluator(.*)main.lisp.parser.terms.ExpressionFactory!newInstance:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression->SExpression(.*)\[MissingMethodCall\].*. Is your class named or tagged properly and checkstyle file upto date?%0.0

Test execution time (ms):13
Test execution time (ms):11
Test execution time (ms):7
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(INSERT,"24¶Test execution time (ms):11¶Test execution time (ms):13¶FuncallCallsExpressionFactory did not pass completely:Checkstyle output does not match:.*INFO.*BasicFuncallEvaluator(.*)main.lisp.parser.terms.ExpressionFactory!newInstance:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression->SExpression(.*)\[MissingMethodCall\].*. Is your class named or tagged properly and checkstyle file upto date?%0."), Diff(EQUAL,"0¶"), Diff(INSERT,"¶"), Diff(EQUAL,"Test execution time (ms):1"), Diff(INSERT,"3¶Test execution time (ms):11¶Test execution time (ms):7"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="123" _type="ConsoleOutput" date="Mon Nov 29 14:00:48 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="439684" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):11
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"24¶Test execution time (ms):11¶Test execution time (ms):13¶FuncallCallsExpressionFactory did not pass completely:Checkstyle output does not match:.*INFO.*BasicFuncallEvaluator(.*)main.lisp.parser.terms.ExpressionFactory!newInstance:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression->SExpression(.*)\[MissingMethodCall\].*. Is your class named or tagged properly and checkstyle file upto date?%0.0¶¶Test execution time (ms):13¶Test execution time (ms):11¶Test execution time (ms):7"), Diff(INSERT,"11"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="125" _type="PauseCommand" date="Mon Nov 29 14:00:55 EST 2021" range="5s-10s" starttimestamp="1638212009072" timestamp="445980">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[6296]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="124" _type="ConsoleOutput" date="Mon Nov 29 14:00:55 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="445980" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp524f19.assignment2.testcases.BasicOperationCheckers.CombinationChecker@510e8ac1 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):11"), Diff(INSERT,"Re-running test gradingTools.comp524f19.assignment2.testcases.BasicOperationCheckers.CombinationChecker@510e8ac1 . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="127" _type="PauseCommand" date="Mon Nov 29 14:01:00 EST 2021" range="5s-10s" starttimestamp="1638212009072" timestamp="451911">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5931]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="126" _type="ShellCommand" date="Mon Nov 29 14:01:00 EST 2021" starttimestamp="1638212009072" timestamp="451911" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="128" _type="ProgramExecutionEvent" className="/a5/src/a5/LocalChecks.java" date="Mon Nov 29 14:01:01 EST 2021" kind="HitBreakPoint" projectName="a5" starttimestamp="1638212009072" timestamp="452621" type="Run" />
  <Command __id="129" _type="ProgramExecutionEvent" className="/a5/src/a5/LocalChecks.java" date="Mon Nov 29 14:01:01 EST 2021" kind="HitBreakPoint" projectName="a5" starttimestamp="1638212009072" timestamp="452621" type="Run" />
  <Command __id="130" _type="ProgramExecutionEvent" className="/a5/src/a5/LocalChecks.java" date="Mon Nov 29 14:01:02 EST 2021" kind="HitBreakPoint" projectName="a5" starttimestamp="1638212009072" timestamp="453514" type="Run" />
  <Command __id="131" _type="RunCommand" className="/a5/src/a5/LocalChecks.java" date="Mon Nov 29 14:01:02 EST 2021" kind="HitBreakPoint" projectName="a5" starttimestamp="1638212009072" timestamp="453514" type="Run" />
  <Command __id="133" _type="PauseCommand" date="Mon Nov 29 14:01:05 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="456246">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[2732]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="132" _type="ShellCommand" date="Mon Nov 29 14:01:05 EST 2021" starttimestamp="1638212009072" timestamp="456246" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="135" _type="PauseCommand" date="Mon Nov 29 14:01:09 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="460717">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4471]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="134" _type="ConsoleOutput" date="Mon Nov 29 14:01:09 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="460717" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
Test execution time (ms):20
Test execution time (ms):22
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp524f19.assignment2.testcases.BasicOperationCheckers.CombinationChecker@510e8ac1 . Results may change."), Diff(INSERT,"Test execution time (ms):1¶Test execution time (ms):20¶Test execution time (ms):22"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="136" _type="ConsoleOutput" date="Mon Nov 29 14:01:09 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="460820" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):94
Test execution time (ms):98
Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"1"), Diff(INSERT,"94"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"20"), Diff(INSERT,"98"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"22"), Diff(INSERT,"0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="138" _type="PauseCommand" date="Mon Nov 29 14:01:13 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="464899">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4078]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="137" _type="ConsoleOutput" date="Mon Nov 29 14:01:13 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="464898" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
Test execution time (ms):1
Test execution time (ms):0
Test execution time (ms):2
Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"94"), Diff(INSERT,"1"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"98"), Diff(INSERT,"1¶Test execution time (ms):0¶Test execution time (ms):2"), Diff(EQUAL,"¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="140" _type="PauseCommand" date="Mon Nov 29 14:01:15 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="466611">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1713]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="139" _type="ExceptionCommand" date="Mon Nov 29 14:01:15 EST 2021" starttimestamp="1638212009072" timestamp="466611" type="Exception">
    <exceptionString><![CDATA[LispIsListChecker did not pass completely:Expected strings:Tactual string NIL%0.0

Test execution time (ms):3
LispIsListChecker2 did not pass completely:Expected strings:Tactual string NIL%0.0

Test execution time (ms):1
Test execution time (ms):1
Test execution time (ms):1
java.lang.NullPointerException
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.propertyChange(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:48)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.firePropertyChange(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:102)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:93)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:226)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:106)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:301)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="142" _type="PauseCommand" date="Mon Nov 29 14:01:17 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="468416">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[1805]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="141" _type="ConsoleOutput" date="Mon Nov 29 14:01:17 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="468416" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
Test execution time (ms):0
Test execution time (ms):1
Test execution time (ms):0
Test execution time (ms):0
Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"1"), Diff(INSERT,"0¶Test execution time (ms):0"), Diff(EQUAL,"¶Test execution time (ms):1¶Test execution time (ms):0¶Test execution time (ms):"), Diff(DELETE,"2"), Diff(INSERT,"0"), Diff(EQUAL,"¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="144" _type="PauseCommand" date="Mon Nov 29 14:01:21 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="472320">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3904]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="143" _type="ExceptionCommand" date="Mon Nov 29 14:01:21 EST 2021" starttimestamp="1638212009072" timestamp="472320" type="Exception">
    <exceptionString><![CDATA[Test execution time (ms):1
Test execution time (ms):1
Test execution time (ms):0
Test execution time (ms):1
Test execution time (ms):0
Test execution time (ms):0
java.lang.IllegalStateException: Expression does not start with an operator
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:52)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:25)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at expression.CondEvaluator.eval(CondEvaluator.java:21)
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:50)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:25)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at expression.EvalEvaluator.eval(EvalEvaluator.java:10)
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:50)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:25)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at expression.EvalEvaluator.eval(EvalEvaluator.java:10)
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:50)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:25)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:226)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:106)
	at jdk.internal.reflect.GeneratedMethodAccessor18.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:301)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="146" _type="PauseCommand" date="Mon Nov 29 14:01:34 EST 2021" range="10s-20s" starttimestamp="1638212009072" timestamp="484930">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[12610]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="145" _type="ShellCommand" date="Mon Nov 29 14:01:34 EST 2021" starttimestamp="1638212009072" timestamp="484930" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="148" _type="PauseCommand" date="Mon Nov 29 14:01:35 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="486455">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1525]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="147" _type="MoveCaretCommand" caretOffset="730" date="Mon Nov 29 14:01:35 EST 2021" docOffset="929" starttimestamp="1638212009072" timestamp="486455" />
  <Command __id="150" _type="PauseCommand" date="Mon Nov 29 14:01:38 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="489086">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2631]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="149" _type="SelectTextCommand" caretOffset="570" date="Mon Nov 29 14:01:38 EST 2021" end="581" start="570" starttimestamp="1638212009072" timestamp="489086" />
  <Command __id="152" _type="PauseCommand" date="Mon Nov 29 14:01:40 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="491484">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[2398]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[CopyCommand]]></next>
  </Command>
  <Command __id="151" _type="CopyCommand" date="Mon Nov 29 14:01:40 EST 2021" starttimestamp="1638212009072" timestamp="491484" />
  <Command __id="154" _type="PauseCommand" date="Mon Nov 29 14:01:41 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="492711">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1227]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="155" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 29 14:01:41 EST 2021" starttimestamp="1638212009072" timestamp="492716" />
  <Command __id="157" _type="PauseCommand" date="Mon Nov 29 14:01:44 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="495396">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2680]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="156" _type="ShellCommand" date="Mon Nov 29 14:01:44 EST 2021" starttimestamp="1638212009072" timestamp="495396" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="159" _type="PauseCommand" date="Mon Nov 29 14:01:45 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="496549">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1153]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="158" _type="ShellCommand" date="Mon Nov 29 14:01:45 EST 2021" starttimestamp="1638212009072" timestamp="496549" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="160" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:01:45 EST 2021" starttimestamp="1638212009072" timestamp="496673" />
  <Command __id="161" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:01:45 EST 2021" starttimestamp="1638212009072" timestamp="496692" />
  <Command __id="162" _type="RunCommand" className="/a5/src/a5/LocalChecks.java" date="Mon Nov 29 14:01:46 EST 2021" kind="HitBreakPoint" projectName="a5" starttimestamp="1638212009072" timestamp="497024" type="Run" />
  <Command __id="163" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:01:46 EST 2021" starttimestamp="1638212009072" timestamp="497048" />
  <Command __id="164" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:01:46 EST 2021" starttimestamp="1638212009072" timestamp="497056" />
  <Command __id="165" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:01:46 EST 2021" starttimestamp="1638212009072" timestamp="497057" />
  <Command __id="166" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:01:46 EST 2021" starttimestamp="1638212009072" timestamp="497059" />
  <Command __id="167" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:01:46 EST 2021" starttimestamp="1638212009072" timestamp="497060" />
  <Command __id="168" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:01:46 EST 2021" starttimestamp="1638212009072" timestamp="497062" />
  <Command __id="169" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:01:46 EST 2021" starttimestamp="1638212009072" timestamp="497062" />
  <Command __id="170" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:01:46 EST 2021" starttimestamp="1638212009072" timestamp="497066" />
  <Command __id="172" _type="PauseCommand" date="Mon Nov 29 14:01:48 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="499834">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2768]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="171" _type="ShellCommand" date="Mon Nov 29 14:01:48 EST 2021" starttimestamp="1638212009072" timestamp="499834" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="174" _type="PauseCommand" date="Mon Nov 29 14:01:52 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="502981">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3147]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="173" _type="ConsoleOutput" date="Mon Nov 29 14:01:52 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="502981" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):67
Test execution time (ms):2
Test execution time (ms):8
Test execution time (ms):11
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"0¶Test execution time (ms):0¶Test execution time (ms):1"), Diff(INSERT,"67"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"0"), Diff(INSERT,"2"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"0"), Diff(INSERT,"8"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"0"), Diff(INSERT,"11"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="175" _type="ConsoleOutput" date="Mon Nov 29 14:01:52 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="503084" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):61
Test execution time (ms):63
Test execution time (ms):1
Test execution time (ms):0
Test execution time (ms):1
Test execution time (ms):0
Building symbol table and running first pass checks:Mon Nov 29 14:01:52 EST 2021
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):6"), Diff(DELETE,"7"), Diff(INSERT,"1"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"2"), Diff(INSERT,"63"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"8¶Test execution time (ms):1"), Diff(INSERT,"1¶Test execution time (ms):0¶Test execution time (ms):1¶Test execution time (ms):0¶Building symbol table and running first pass checks:Mon Nov 29 14:01:52 EST 202"), Diff(EQUAL,"1¶")]]]></diff>
  </Command>
  <Command __id="177" _type="PauseCommand" date="Mon Nov 29 14:01:53 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="504547">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1463]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="176" _type="ConsoleOutput" date="Mon Nov 29 14:01:53 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="504547" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:39
Running second pass checks Mon Nov 29 14:01:53 EST 2021
Start O(n2) inter- and intra class method calls:Mon Nov 29 14:01:53 EST 2021
End O(n2) inter- and intra class method calls:Mon Nov 29 14:01:53 EST 2021
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):61¶Test execution time (ms):63¶Test execution time (ms):1¶Test execution time (ms):0¶Test execution time (ms):1¶Test execution time (ms):0¶Building symbol table and running first pass check"), Diff(INSERT,"Symbol table size:39¶Running second pass checks Mon Nov 29 14:01:53 EST 2021¶Start O(n2) inter- and intra class method calls:Mon Nov 29 14:01:53 EST 2021¶End O(n2) inter- and intra class method call"), Diff(EQUAL,"s:Mon Nov 29 14:01:5"), Diff(DELETE,"2"), Diff(INSERT,"3"), Diff(EQUAL," EST 2021¶")]]]></diff>
  </Command>
  <Command __id="178" _type="ConsoleOutput" date="Mon Nov 29 14:01:54 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="505332" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Mon Nov 29 14:01:54 EST 2021
Generating checks:Mon Nov 29 14:01:54 EST 2021
Finished Generating checks:Mon Nov 29 14:01:54 EST 2021
Generating externals:Mon Nov 29 14:01:54 EST 2021
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:39¶Running"), Diff(INSERT,"Finished"), Diff(EQUAL," second pass checks"), Diff(DELETE," "), Diff(INSERT,":"), Diff(EQUAL,"Mon Nov 29 14:01:5"), Diff(DELETE,"3"), Diff(INSERT,"4"), Diff(EQUAL," EST 2021¶"), Diff(DELETE,"Start O(n2) inter- and intra class method call"), Diff(INSERT,"Generating checks:Mon Nov 29 14:01:54 EST 2021¶Finished Generating check"), Diff(EQUAL,"s:Mon Nov 29 14:01:5"), Diff(DELETE,"3"), Diff(INSERT,"4"), Diff(EQUAL," EST 2021¶"), Diff(DELETE,"End O(n2) inter- and intra class method cal"), Diff(INSERT,"Generating externa"), Diff(EQUAL,"ls:Mon Nov 29 14:01:5"), Diff(DELETE,"3"), Diff(INSERT,"4"), Diff(EQUAL," EST 2021¶")]]]></diff>
  </Command>
  <Command __id="179" _type="ConsoleOutput" date="Mon Nov 29 14:01:54 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="505426" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Mon Nov 29 14:01:54 EST 2021
Test execution time (ms):2370
Test execution time (ms):17
Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass check"), Diff(INSERT,"Generating external"), Diff(EQUAL,"s:Mon Nov 29 14:01:54 EST 2021¶"), Diff(DELETE,"Generating checks:Mon Nov 29 14:01:54 EST 2021¶Finished Generating checks:Mon Nov 29 14:01:54 EST 2021¶Generating externals:Mon Nov 29 14:01:54 EST 202"), Diff(INSERT,"Test execution time (ms):2370¶Test execution time (ms):17¶Test execution time (ms):"), Diff(EQUAL,"1¶")]]]></diff>
  </Command>
  <Command __id="180" _type="ConsoleOutput" date="Mon Nov 29 14:01:54 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="505532" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
Test execution time (ms):1
Test execution time (ms):0
Test execution time (ms):0
Test execution time (ms):0
FuncallCallsExpressionFactory did not pass completely:Checkstyle output does not match:.*INFO.*BasicFuncallEvaluator(.*)main.lisp.parser.terms.ExpressionFactory!newInstance:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression->SExpression(.*)\[MissingMethodCall\].*. Is your class named or tagged properly and checkstyle file upto date?%0.0

Test execution time (ms):12
Test execution time (ms):8
Test execution time (ms):6
Test execution time (ms):9
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Mon Nov 29 14:01:54 EST 2021"), Diff(INSERT,"Test execution time (ms):1¶Test execution time (ms):1¶Test execution time (ms):0¶Test execution time (ms):0¶Test execution time (ms):0¶FuncallCallsExpressionFactory did not pass completely:Checkstyle output does not match:.*INFO.*BasicFuncallEvaluator(.*)main.lisp.parser.terms.ExpressionFactory!newInstance:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression->SExpression(.*)\[MissingMethodCall\].*. Is your class named or tagged properly and checkstyle file upto date?%0.0¶¶Test execution time (ms):12"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"2370"), Diff(INSERT,"8"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"17"), Diff(INSERT,"6"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"1"), Diff(INSERT,"9"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="181" _type="ConsoleOutput" date="Mon Nov 29 14:01:55 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="506515" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):1¶Test execution time (ms):"), Diff(DELETE,"1¶Test execution time (ms):0¶Test execution time (ms):0¶Test execution time (ms):0¶FuncallCallsExpressionFactory did not pass completely:Checkstyle output does not match:.*INFO.*BasicFuncallEvaluator(.*)main.lisp.parser.terms.ExpressionFactory!newInstance:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression->SExpression(.*)\[MissingMethodCall\].*. Is your class named or tagged properly and checkstyle file upto date?%0.0¶¶Test execution time (ms):12¶Test execution time (ms):8¶Test execution time (ms):6¶Test execution time (ms):9"), Diff(INSERT,"0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="183" _type="PauseCommand" date="Mon Nov 29 14:01:57 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="508459">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1944]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="182" _type="ExceptionCommand" date="Mon Nov 29 14:01:57 EST 2021" starttimestamp="1638212009072" timestamp="508459" type="Exception">
    <exceptionString><![CDATA[CondChecker did not pass completely:Expected strings:3actual string (+ 2 1)%0.0

Test execution time (ms):2
Test execution time (ms):0
Test execution time (ms):0
Test execution time (ms):1
Test execution time (ms):1
Test execution time (ms):1
java.lang.IllegalStateException: Expression does not start with an operator
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:52)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:25)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at expression.EvalEvaluator.eval(EvalEvaluator.java:10)
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:50)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:25)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:226)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:106)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:301)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="185" _type="PauseCommand" date="Mon Nov 29 14:02:01 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="512351">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[3892]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="184" _type="ConsoleOutput" date="Mon Nov 29 14:02:01 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="512351" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp524f19.assignment2.testcases.BasicOperationCheckers.CondChecker@390c20e0 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):1¶Test execution time (ms):0"), Diff(INSERT,"Re-running test gradingTools.comp524f19.assignment2.testcases.BasicOperationCheckers.CondChecker@390c20e0 . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="187" _type="PauseCommand" date="Mon Nov 29 14:02:04 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="515263">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2912]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="186" _type="ShellCommand" date="Mon Nov 29 14:02:04 EST 2021" starttimestamp="1638212009072" timestamp="515263" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="188" _type="ProgramExecutionEvent" className="/a5/src/a5/LocalChecks.java" date="Mon Nov 29 14:02:05 EST 2021" kind="HitBreakPoint" projectName="a5" starttimestamp="1638212009072" timestamp="515947" type="Run" />
  <Command __id="189" _type="ProgramExecutionEvent" className="/a5/src/a5/LocalChecks.java" date="Mon Nov 29 14:02:05 EST 2021" kind="HitBreakPoint" projectName="a5" starttimestamp="1638212009072" timestamp="515947" type="Run" />
  <Command __id="191" _type="PauseCommand" date="Mon Nov 29 14:02:07 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="518905">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[2958]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="192" _type="UndoCommand" date="Mon Nov 29 14:02:07 EST 2021" starttimestamp="1638212009072" timestamp="518910" />
  <Command __id="207" _type="PauseCommand" date="Mon Nov 29 14:02:22 EST 2021" range="10s-20s" starttimestamp="1638212009072" timestamp="533924">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[12773]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ProgramExecutionEvent]]></next>
  </Command>
  <Command __id="206" _type="ProgramExecutionEvent" className="/a5/src/a5/LocalChecks.java" date="Mon Nov 29 14:02:22 EST 2021" kind="HitBreakPoint" projectName="a5" starttimestamp="1638212009072" timestamp="533924" type="Run" />
  <Command __id="208" _type="RunCommand" className="/a5/src/a5/LocalChecks.java" date="Mon Nov 29 14:02:22 EST 2021" kind="HitBreakPoint" projectName="a5" starttimestamp="1638212009072" timestamp="533925" type="Run" />
  <Command __id="209" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:02:23 EST 2021" starttimestamp="1638212009072" timestamp="534015" />
  <Command __id="210" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:02:23 EST 2021" starttimestamp="1638212009072" timestamp="534020" />
  <Command __id="211" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:02:23 EST 2021" starttimestamp="1638212009072" timestamp="534020" />
  <Command __id="212" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:02:23 EST 2021" starttimestamp="1638212009072" timestamp="534021" />
  <Command __id="213" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:02:23 EST 2021" starttimestamp="1638212009072" timestamp="534021" />
  <Command __id="214" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:02:23 EST 2021" starttimestamp="1638212009072" timestamp="534022" />
  <Command __id="215" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:02:23 EST 2021" starttimestamp="1638212009072" timestamp="534023" />
  <Command __id="216" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:02:23 EST 2021" starttimestamp="1638212009072" timestamp="534026" />
  <Command __id="218" _type="PauseCommand" date="Mon Nov 29 14:02:25 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="536243">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2217]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="217" _type="ShellCommand" date="Mon Nov 29 14:02:25 EST 2021" starttimestamp="1638212009072" timestamp="536243" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="220" _type="PauseCommand" date="Mon Nov 29 14:02:32 EST 2021" range="5s-10s" starttimestamp="1638212009072" timestamp="543402">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[7159]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="219" _type="ConsoleOutput" date="Mon Nov 29 14:02:32 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="543402" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2
Test execution time (ms):10
Test execution time (ms):13
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp524f19.assignment2.testcases.BasicOperationCheckers.CondChecker@390c20e0 . Results may change."), Diff(INSERT,"Test execution time (ms):2¶Test execution time (ms):10¶Test execution time (ms):13"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="221" _type="ExceptionCommand" date="Mon Nov 29 14:02:32 EST 2021" starttimestamp="1638212009072" timestamp="543503" type="Exception">
    <exceptionString><![CDATA[Test execution time (ms):80
Test execution time (ms):82
Test execution time (ms):1
Test execution time (ms):0
Test execution time (ms):0
Test execution time (ms):0
Test execution time (ms):0
java.lang.IllegalStateException: Expression does not start with an operator
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:52)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:25)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at expression.CondEvaluator.eval(CondEvaluator.java:21)
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:50)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:25)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at expression.EvalEvaluator.eval(EvalEvaluator.java:10)
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:50)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:25)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at expression.EvalEvaluator.eval(EvalEvaluator.java:10)
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:50)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:25)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:226)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:106)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:301)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="223" _type="PauseCommand" date="Mon Nov 29 14:02:39 EST 2021" range="5s-10s" starttimestamp="1638212009072" timestamp="550438">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[6935]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="222" _type="ShellCommand" date="Mon Nov 29 14:02:39 EST 2021" starttimestamp="1638212009072" timestamp="550438" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="225" _type="PauseCommand" date="Mon Nov 29 14:02:48 EST 2021" range="5s-10s" starttimestamp="1638212009072" timestamp="559875">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[9437]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="224" _type="ShellCommand" date="Mon Nov 29 14:02:48 EST 2021" starttimestamp="1638212009072" timestamp="559875" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="226" _type="ShellCommand" date="Mon Nov 29 14:02:49 EST 2021" starttimestamp="1638212009072" timestamp="560713" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="227" _type="ShellCommand" date="Mon Nov 29 14:02:50 EST 2021" starttimestamp="1638212009072" timestamp="561544" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="229" _type="PauseCommand" date="Mon Nov 29 14:02:56 EST 2021" range="5s-10s" starttimestamp="1638212009072" timestamp="567705">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[6161]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="228" _type="ConsoleOutput" date="Mon Nov 29 14:02:56 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="567705" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):18
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"2¶Test execution time (ms):10¶Test execution time (ms):13"), Diff(INSERT,"18"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="230" _type="ShellCommand" date="Mon Nov 29 14:02:56 EST 2021" starttimestamp="1638212009072" timestamp="567842" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="232" _type="PauseCommand" date="Mon Nov 29 14:03:01 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="571979">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4137]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="231" _type="ExceptionCommand" date="Mon Nov 29 14:03:01 EST 2021" starttimestamp="1638212009072" timestamp="571979" type="Exception">
    <exceptionString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'LET'
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:48)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:25)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:226)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:106)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:301)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="233" _type="ExceptionCommand" date="Mon Nov 29 14:03:02 EST 2021" starttimestamp="1638212009072" timestamp="572941" type="Exception">
    <exceptionString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'CURRY'
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:48)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:25)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at functional.FuncallEvaluator.eval(FuncallEvaluator.java:21)
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:50)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:25)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:226)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:106)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:301)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="235" _type="PauseCommand" date="Mon Nov 29 14:03:03 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="574074">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[1133]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="234" _type="ConsoleOutput" date="Mon Nov 29 14:03:03 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="574074" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
Test execution time (ms):1
Test execution time (ms):0
Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"18"), Diff(INSERT,"0¶Test execution time (ms):1¶Test execution time (ms):0¶Test execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="237" _type="PauseCommand" date="Mon Nov 29 14:03:04 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="575083">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1009]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="236" _type="ConsoleOutput" date="Mon Nov 29 14:03:04 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="575083" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
Test execution time (ms):1
Test execution time (ms):1
Test execution time (ms):0
Test execution time (ms):0
Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"0"), Diff(INSERT,"1"), Diff(EQUAL,"¶Test execution time (ms):1¶"), Diff(INSERT,"Test execution time (ms):1¶Test execution time (ms):0¶"), Diff(EQUAL,"Test execution time (ms):0¶Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="238" _type="ShellCommand" date="Mon Nov 29 14:03:05 EST 2021" starttimestamp="1638212009072" timestamp="575931" type="ECLIPSE_MINIMIZED" />
  <Command __id="240" _type="PauseCommand" date="Mon Nov 29 14:03:07 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="578127">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2196]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="239" _type="ShellCommand" date="Mon Nov 29 14:03:07 EST 2021" starttimestamp="1638212009072" timestamp="578127" type="ECLIPSE_MAXIMIZED" />
  <Command __id="241" _type="ShellCommand" date="Mon Nov 29 14:03:07 EST 2021" starttimestamp="1638212009072" timestamp="578153" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="243" _type="PauseCommand" date="Mon Nov 29 14:03:08 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="579541">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1388]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="242" _type="ShellCommand" date="Mon Nov 29 14:03:08 EST 2021" starttimestamp="1638212009072" timestamp="579541" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="245" _type="PauseCommand" date="Mon Nov 29 14:03:10 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="581132">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1591]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="244" _type="ExceptionCommand" date="Mon Nov 29 14:03:10 EST 2021" starttimestamp="1638212009072" timestamp="581132" type="Exception">
    <exceptionString><![CDATA[LispIsListChecker did not pass completely:Expected strings:Tactual string NIL%0.0

Test execution time (ms):1
LispIsListChecker2 did not pass completely:Expected strings:Tactual string NIL%0.0

Test execution time (ms):0
Test execution time (ms):1
Test execution time (ms):0
java.lang.NullPointerException
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.propertyChange(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:48)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.firePropertyChange(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:102)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:93)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:226)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:106)
	at jdk.internal.reflect.GeneratedMethodAccessor18.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:301)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="247" _type="PauseCommand" date="Mon Nov 29 14:03:15 EST 2021" range="5s-10s" starttimestamp="1638212009072" timestamp="586285">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[5153]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="246" _type="ConsoleOutput" date="Mon Nov 29 14:03:15 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="586285" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
Test execution time (ms):1
Test execution time (ms):0
Test execution time (ms):1
Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):1¶Test execution time (ms):1¶"), Diff(DELETE,"Test execution time (ms):1¶"), Diff(EQUAL,"Test execution time (ms):0¶Test execution time (ms):"), Diff(DELETE,"0"), Diff(INSERT,"1"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"0"), Diff(INSERT,"1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="248" _type="ConsoleOutput" date="Mon Nov 29 14:03:16 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="587225" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
Test execution time (ms):1
Test execution time (ms):0
Test execution time (ms):0
Test execution time (ms):0
Building symbol table and running first pass checks:Mon Nov 29 14:03:16 EST 2021
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"1"), Diff(INSERT,"0"), Diff(EQUAL,"¶Test execution time (ms):1¶Test execution time (ms):0¶Test execution time (ms):"), Diff(DELETE,"1"), Diff(INSERT,"0"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(INSERT,"0¶Building symbol table and running first pass checks:Mon Nov 29 14:03:16 EST 202"), Diff(EQUAL,"1¶")]]]></diff>
  </Command>
  <Command __id="250" _type="PauseCommand" date="Mon Nov 29 14:03:17 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="588508">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1283]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="249" _type="ConsoleOutput" date="Mon Nov 29 14:03:17 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="588508" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:39
Running second pass checks Mon Nov 29 14:03:17 EST 2021
Start O(n2) inter- and intra class method calls:Mon Nov 29 14:03:17 EST 2021
End O(n2) inter- and intra class method calls:Mon Nov 29 14:03:17 EST 2021
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):0¶Test execution time (ms):1¶Test execution time (ms):0¶Test execution time (ms):0¶Test execution time (ms):0¶Building symbol table and running first pass check"), Diff(INSERT,"Symbol table size:39¶Running second pass checks Mon Nov 29 14:03:17 EST 2021¶Start O(n2) inter- and intra class method calls:Mon Nov 29 14:03:17 EST 2021¶End O(n2) inter- and intra class method call"), Diff(EQUAL,"s:Mon Nov 29 14:03:1"), Diff(DELETE,"6"), Diff(INSERT,"7"), Diff(EQUAL," EST 2021¶")]]]></diff>
  </Command>
  <Command __id="251" _type="ConsoleOutput" date="Mon Nov 29 14:03:18 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="589247" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Mon Nov 29 14:03:18 EST 2021
Generating checks:Mon Nov 29 14:03:18 EST 2021
Finished Generating checks:Mon Nov 29 14:03:18 EST 2021
Generating externals:Mon Nov 29 14:03:18 EST 2021
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:39¶Running"), Diff(INSERT,"Finished"), Diff(EQUAL," second pass checks"), Diff(DELETE," "), Diff(INSERT,":"), Diff(EQUAL,"Mon Nov 29 14:03:1"), Diff(DELETE,"7"), Diff(INSERT,"8"), Diff(EQUAL," EST 2021¶"), Diff(DELETE,"Start O(n2) inter- and intra class method call"), Diff(INSERT,"Generating checks:Mon Nov 29 14:03:18 EST 2021¶Finished Generating check"), Diff(EQUAL,"s:Mon Nov 29 14:03:1"), Diff(DELETE,"7"), Diff(INSERT,"8"), Diff(EQUAL," EST 2021¶"), Diff(DELETE,"End O(n2) inter- and intra class method cal"), Diff(INSERT,"Generating externa"), Diff(EQUAL,"ls:Mon Nov 29 14:03:1"), Diff(DELETE,"7"), Diff(INSERT,"8"), Diff(EQUAL," EST 2021¶")]]]></diff>
  </Command>
  <Command __id="252" _type="ConsoleOutput" date="Mon Nov 29 14:03:18 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="589315" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Mon Nov 29 14:03:18 EST 2021
A6CommonPropertiesInherited did not pass completely:See console trace about lines failing  this check%0.0

Test execution time (ms):2118
A6CommonSignaturesAreInherited did not pass completely:See console trace about lines failing  this check%0.7251798561151078

Test execution time (ms):9
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass check"), Diff(INSERT,"Generating external"), Diff(EQUAL,"s:Mon Nov 29 14:03:18 EST 2021¶"), Diff(DELETE,"Gen"), Diff(INSERT,"A6CommonProp"), Diff(EQUAL,"er"), Diff(DELETE,"a"), Diff(EQUAL,"ti"), Diff(DELETE,"ng checks:Mon Nov 29 14:03:18 EST 2021¶Finished Generating checks:Mon Nov 29 14:03:18 EST 2021¶Generating externals:Mon Nov 29 14:03:18 EST 2021"), Diff(INSERT,"esInherited did not pass completely:See console trace about lines failing  this check%0.0¶¶Test execution time (ms):2118¶A6CommonSignaturesAreInherited did not pass completely:See console trace about lines failing  this check%0.7251798561151078¶¶Test execution time (ms):9"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="253" _type="ConsoleOutput" date="Mon Nov 29 14:03:18 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="589371" type="ConsoleOutput">
    <outputString><![CDATA[A6Encapsulation did not pass completely:%0.96

Test execution time (ms):3
A6NoHiddenFields did not pass completely:%0.96

Test execution time (ms):4
A6NonPublicAccessModifiersMatched did not pass completely:%0.96

Test execution time (ms):5
A6PublicMethodsOverride did not pass completely:See console trace about lines failing  this check%0.7418181818181818

Test execution time (ms):5
A6NoStarImports did not pass completely:%0.96

Test execution time (ms):3
A6PackageDeclarations did not pass completely:%0.96

Test execution time (ms):3
F21A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0

Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Mon Nov 29 14:03:18 EST 2021¶A6CommonPropertiesInherited"), Diff(INSERT,"A6Encapsulation did not pass completely:%0.96¶¶Test execution time (ms):3¶A6NoHiddenFields did not pass completely:%0.96¶¶Test execution time (ms):4¶A6NonPublicAccessModifiersMatched did not pass completely:%0.96¶¶Test execution time (ms):5¶A6PublicMethodsOverride"), Diff(EQUAL," did not pass completely:See console trace about lines failing  this check%0."), Diff(DELETE,"0"), Diff(INSERT,"7418181818181818"), Diff(EQUAL,"¶¶Test execution time (ms):"), Diff(DELETE,"2118¶A6CommonSignaturesAreInherited did not pass completely:See console trace about l"), Diff(INSERT,"5¶A6NoStarImports did not pass completely:%0.96¶¶Test execution time (ms):3¶A6PackageDeclarations did not pass completely:%0.96¶¶Test execution time (ms):3¶F21A6NoCheckstyleWarnings did not pass completely:Warn"), Diff(EQUAL,"in"), Diff(DELETE,"e"), Diff(INSERT,"g"), Diff(EQUAL,"s f"), Diff(DELETE,"ailing  this check%0.7251798561151078"), Diff(INSERT,"ound in checkstyle text, see traced console output%0.0"), Diff(EQUAL,"¶¶Test execution time (ms):"), Diff(DELETE,"9"), Diff(INSERT,"1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="255" _type="PauseCommand" date="Mon Nov 29 14:03:26 EST 2021" range="5s-10s" starttimestamp="1638212009072" timestamp="597206">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[7834]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="254" _type="ConsoleOutput" date="Mon Nov 29 14:03:26 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="597205" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"A6Encapsulation did not pass completely:%0.96¶¶Test execution time (ms):3¶A6NoHiddenFields did not pass completely:%0.96¶¶Test execution time (ms):4¶A6NonPublicAccessModifiersMatched did not pass completely:%0.96¶¶Test execution time (ms):5¶A6PublicMethodsOverride did not pass completely:See console trace about lines failing  this check%0.7418181818181818¶¶Test execution time (ms):5¶A6NoStarImports did not pass completely:%0.96¶¶Test execution time (ms):3¶A6PackageDeclarations did not pass completely:%0.96¶¶Test execution time (ms):3¶F21A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0¶¶Test execution time (ms):1"), Diff(INSERT,"Test execution time (ms):0¶Test execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="257" _type="PauseCommand" date="Mon Nov 29 14:03:28 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="599239">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2034]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="256" _type="ShellCommand" date="Mon Nov 29 14:03:28 EST 2021" starttimestamp="1638212009072" timestamp="599239" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="259" _type="PauseCommand" date="Mon Nov 29 14:03:31 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="602492">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3253]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="258" _type="MoveCaretCommand" caretOffset="633" date="Mon Nov 29 14:03:31 EST 2021" docOffset="832" starttimestamp="1638212009072" timestamp="602492" />
  <Command __id="261" _type="PauseCommand" date="Mon Nov 29 14:03:40 EST 2021" range="5s-10s" starttimestamp="1638212009072" timestamp="611649">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[9157]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="260" _type="MoveCaretCommand" caretOffset="392" date="Mon Nov 29 14:03:40 EST 2021" docOffset="591" starttimestamp="1638212009072" timestamp="611649" />
  <Command __id="263" _type="PasteCommand" date="Mon Nov 29 14:03:41 EST 2021" starttimestamp="1638212009072" timestamp="612647" />
  <Command __id="265" _type="PauseCommand" date="Mon Nov 29 14:03:43 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="614530">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1883]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="264" _type="MoveCaretCommand" caretOffset="393" date="Mon Nov 29 14:03:43 EST 2021" docOffset="592" starttimestamp="1638212009072" timestamp="614530" />
  <Command __id="267" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 29 14:03:43 EST 2021" starttimestamp="1638212009072" timestamp="614835" />
  <Command __id="287" _type="PauseCommand" date="Mon Nov 29 14:03:49 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="620354">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1838]]></pause>
    <nextType><![CDATA[Debug]]></nextType>
    <next><![CDATA[RunCommand]]></next>
  </Command>
  <Command __id="286" _type="RunCommand" className="/a5/src/a5/LocalChecks.java" date="Mon Nov 29 14:03:49 EST 2021" kind="HitBreakPoint" projectName="a5" starttimestamp="1638212009072" timestamp="620354" type="Run" />
  <Command __id="288" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:03:49 EST 2021" starttimestamp="1638212009072" timestamp="620402" />
  <Command __id="289" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:03:49 EST 2021" starttimestamp="1638212009072" timestamp="620407" />
  <Command __id="290" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:03:49 EST 2021" starttimestamp="1638212009072" timestamp="620408" />
  <Command __id="291" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:03:49 EST 2021" starttimestamp="1638212009072" timestamp="620409" />
  <Command __id="292" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:03:49 EST 2021" starttimestamp="1638212009072" timestamp="620409" />
  <Command __id="293" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:03:49 EST 2021" starttimestamp="1638212009072" timestamp="620410" />
  <Command __id="294" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:03:49 EST 2021" starttimestamp="1638212009072" timestamp="620410" />
  <Command __id="295" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:03:49 EST 2021" starttimestamp="1638212009072" timestamp="620413" />
  <Command __id="297" _type="PauseCommand" date="Mon Nov 29 14:03:51 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="622649">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2236]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="296" _type="ShellCommand" date="Mon Nov 29 14:03:51 EST 2021" starttimestamp="1638212009072" timestamp="622649" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="299" _type="PauseCommand" date="Mon Nov 29 14:03:54 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="625900">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3251]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="298" _type="ExceptionCommand" date="Mon Nov 29 14:03:54 EST 2021" starttimestamp="1638212009072" timestamp="625900" type="Exception">
    <exceptionString><![CDATA[Test execution time (ms):1
Test execution time (ms):10
Test execution time (ms):14
java.util.NoSuchElementException: No value present
	at java.base/java.util.Optional.get(Optional.java:148)
	at a5.VariableEval.eval(VariableEval.java:23)
	at expression.CondEvaluator.eval(CondEvaluator.java:17)
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:50)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:25)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.evaluator.function.BasicLambda.doEval(BasicLambda.java:75)
	at main.lisp.parser.terms.AbstractAtom.eval(AbstractAtom.java:22)
	at functional.FuncallEvaluator.evaluateLambda(FuncallEvaluator.java:65)
	at functional.FuncallEvaluator.eval(FuncallEvaluator.java:32)
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:50)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:25)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at expression.LoadEvaluator.eval(LoadEvaluator.java:31)
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:50)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:25)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:226)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:106)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:301)
	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)
	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="300" _type="ConsoleOutput" date="Mon Nov 29 14:03:55 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="625959" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):3
Test execution time (ms):1
Test execution time (ms):1
Test execution time (ms):0
Test execution time (ms):1
Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"0¶Test execution time (ms):0"), Diff(INSERT,"3¶Test execution time (ms):1¶Test execution time (ms):1¶Test execution time (ms):0¶Test execution time (ms):1¶Test execution time (ms):2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="302" _type="PauseCommand" date="Mon Nov 29 14:04:01 EST 2021" range="5s-10s" starttimestamp="1638212009072" timestamp="632001">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[6042]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="301" _type="ExceptionCommand" date="Mon Nov 29 14:04:01 EST 2021" starttimestamp="1638212009072" timestamp="632001" type="Exception">
    <exceptionString><![CDATA[java.util.NoSuchElementException: No value present
	at java.base/java.util.Optional.get(Optional.java:148)
	at a5.VariableEval.eval(VariableEval.java:23)
	at expression.CondEvaluator.eval(CondEvaluator.java:17)
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:50)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:25)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.evaluator.function.BasicLambda.doEval(BasicLambda.java:75)
	at main.lisp.parser.terms.AbstractAtom.eval(AbstractAtom.java:22)
	at functional.FuncallEvaluator.evaluateLambda(FuncallEvaluator.java:65)
	at functional.FuncallEvaluator.eval(FuncallEvaluator.java:32)
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:50)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:25)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:226)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:106)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:301)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="304" _type="PauseCommand" date="Mon Nov 29 14:04:03 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="634780">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[2779]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="303" _type="ShellCommand" date="Mon Nov 29 14:04:03 EST 2021" starttimestamp="1638212009072" timestamp="634780" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="305" _type="ProgramExecutionEvent" className="/a5/src/a5/LocalChecks.java" date="Mon Nov 29 14:04:04 EST 2021" kind="HitBreakPoint" projectName="a5" starttimestamp="1638212009072" timestamp="635461" type="Run" />
  <Command __id="306" _type="ProgramExecutionEvent" className="/a5/src/a5/LocalChecks.java" date="Mon Nov 29 14:04:04 EST 2021" kind="HitBreakPoint" projectName="a5" starttimestamp="1638212009072" timestamp="635461" type="Run" />
  <Command __id="308" _type="PauseCommand" date="Mon Nov 29 14:04:06 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="636955">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[1494]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="309" _type="MoveCaretCommand" caretOffset="198" date="Mon Nov 29 14:04:06 EST 2021" docOffset="479" starttimestamp="1638212009072" timestamp="637064" />
  <Command __id="324" _type="PauseCommand" date="Mon Nov 29 14:04:17 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="648425">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3935]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ProgramExecutionEvent]]></next>
  </Command>
  <Command __id="323" _type="ProgramExecutionEvent" className="/a5/src/a5/LocalChecks.java" date="Mon Nov 29 14:04:17 EST 2021" kind="HitBreakPoint" projectName="a5" starttimestamp="1638212009072" timestamp="648425" type="Run" />
  <Command __id="325" _type="RunCommand" className="/a5/src/a5/LocalChecks.java" date="Mon Nov 29 14:04:17 EST 2021" kind="HitBreakPoint" projectName="a5" starttimestamp="1638212009072" timestamp="648426" type="Run" />
  <Command __id="326" _type="ShellCommand" date="Mon Nov 29 14:04:18 EST 2021" starttimestamp="1638212009072" timestamp="648971" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="328" _type="PauseCommand" date="Mon Nov 29 14:04:19 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="650063">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1092]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="327" _type="ShellCommand" date="Mon Nov 29 14:04:19 EST 2021" starttimestamp="1638212009072" timestamp="650063" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="329" _type="ProgramExecutionEvent" className="/a5/src/a5/LocalChecks.java" date="Mon Nov 29 14:04:19 EST 2021" kind="HitBreakPoint" projectName="a5" starttimestamp="1638212009072" timestamp="650757" type="Run" />
  <Command __id="330" _type="ProgramExecutionEvent" className="/a5/src/a5/LocalChecks.java" date="Mon Nov 29 14:04:19 EST 2021" kind="HitBreakPoint" projectName="a5" starttimestamp="1638212009072" timestamp="650757" type="Run" />
  <Command __id="332" _type="PauseCommand" date="Mon Nov 29 14:04:24 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="655561">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[4804]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="331" _type="ShellCommand" date="Mon Nov 29 14:04:24 EST 2021" starttimestamp="1638212009072" timestamp="655561" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="334" _type="PauseCommand" date="Mon Nov 29 14:04:27 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="658186">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2625]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="333" _type="ConsoleOutput" date="Mon Nov 29 14:04:27 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="658186" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):15
Test execution time (ms):8
Test execution time (ms):11
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"3¶Test execution time (ms):1¶Test execution time (ms):"), Diff(EQUAL,"1"), Diff(INSERT,"5"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"0"), Diff(INSERT,"8"), Diff(EQUAL,"¶Test execution time (ms):1"), Diff(DELETE,"¶Test execution time (ms):2"), Diff(INSERT,"1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="335" _type="ExceptionCommand" date="Mon Nov 29 14:04:27 EST 2021" starttimestamp="1638212009072" timestamp="658288" type="Exception">
    <exceptionString><![CDATA[java.lang.IllegalStateException: Expression does not start with an operator
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:52)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:25)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at logical.OrEvaluator.eval(OrEvaluator.java:20)
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:50)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:25)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.evaluator.function.BasicLambda.doEval(BasicLambda.java:75)
	at main.lisp.parser.terms.AbstractAtom.eval(AbstractAtom.java:22)
	at functional.FuncallEvaluator.evaluateLambda(FuncallEvaluator.java:65)
	at functional.FuncallEvaluator.eval(FuncallEvaluator.java:32)
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:50)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:25)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at expression.LoadEvaluator.eval(LoadEvaluator.java:31)
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:50)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:25)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:226)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:106)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:301)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="336" _type="ExceptionCommand" date="Mon Nov 29 14:04:27 EST 2021" starttimestamp="1638212009072" timestamp="658349" type="Exception">
    <exceptionString><![CDATA[	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
java.lang.NullPointerException
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionResultChecker.toString(AbstractLispExpressionResultChecker.java:20)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionResultChecker.toString(AbstractLispExpressionResultChecker.java:31)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionResultChecker.actualOutput(AbstractLispExpressionResultChecker.java:12)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:23)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:226)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:106)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:301)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="342" _type="PauseCommand" date="Mon Nov 29 14:04:49 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="680078">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[2011]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="341" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:04:49 EST 2021" starttimestamp="1638212009072" timestamp="680078" />
  <Command __id="343" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:04:49 EST 2021" starttimestamp="1638212009072" timestamp="680081" />
  <Command __id="344" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:04:49 EST 2021" starttimestamp="1638212009072" timestamp="680082" />
  <Command __id="345" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:04:49 EST 2021" starttimestamp="1638212009072" timestamp="680082" />
  <Command __id="346" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:04:49 EST 2021" starttimestamp="1638212009072" timestamp="680083" />
  <Command __id="347" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:04:49 EST 2021" starttimestamp="1638212009072" timestamp="680084" />
  <Command __id="348" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:04:49 EST 2021" starttimestamp="1638212009072" timestamp="680084" />
  <Command __id="349" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:04:49 EST 2021" starttimestamp="1638212009072" timestamp="680086" />
  <Command __id="350" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:04:49 EST 2021" starttimestamp="1638212009072" timestamp="680086" />
  <Command __id="351" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:04:49 EST 2021" starttimestamp="1638212009072" timestamp="680086" />
  <Command __id="353" _type="PauseCommand" date="Mon Nov 29 14:04:55 EST 2021" range="5s-10s" starttimestamp="1638212009072" timestamp="686586">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[6500]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="352" _type="ShellCommand" date="Mon Nov 29 14:04:55 EST 2021" starttimestamp="1638212009072" timestamp="686586" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="355" _type="PauseCommand" date="Mon Nov 29 14:05:04 EST 2021" range="5s-10s" starttimestamp="1638212009072" timestamp="695234">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[8648]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="354" _type="ShellCommand" date="Mon Nov 29 14:05:04 EST 2021" starttimestamp="1638212009072" timestamp="695234" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="357" _type="PauseCommand" date="Mon Nov 29 14:05:08 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="699720">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4486]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="356" _type="ShellCommand" date="Mon Nov 29 14:05:08 EST 2021" starttimestamp="1638212009072" timestamp="699720" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="359" _type="PauseCommand" date="Mon Nov 29 14:05:10 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="701200">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1480]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="358" _type="ShellCommand" date="Mon Nov 29 14:05:10 EST 2021" starttimestamp="1638212009072" timestamp="701200" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="361" _type="MoveCaretCommand" caretOffset="516" date="Mon Nov 29 14:05:10 EST 2021" docOffset="715" starttimestamp="1638212009072" timestamp="701328" />
  <Command __id="363" _type="PauseCommand" date="Mon Nov 29 14:05:16 EST 2021" range="5s-10s" starttimestamp="1638212009072" timestamp="707525">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[6197]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="362" _type="SelectTextCommand" caretOffset="391" date="Mon Nov 29 14:05:16 EST 2021" end="402" start="391" starttimestamp="1638212009072" timestamp="707525" />
  <Command __id="364" _type="CopyCommand" date="Mon Nov 29 14:05:17 EST 2021" starttimestamp="1638212009072" timestamp="708362" />
  <Command __id="366" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 29 14:05:17 EST 2021" starttimestamp="1638212009072" timestamp="708831" />
  <Command __id="380" _type="PauseCommand" date="Mon Nov 29 14:05:23 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="714622">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[4537]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ProgramExecutionEvent]]></next>
  </Command>
  <Command __id="379" _type="ProgramExecutionEvent" className="/a5/src/a5/RunLisp.java" date="Mon Nov 29 14:05:23 EST 2021" kind="HitBreakPoint" projectName="a5" starttimestamp="1638212009072" timestamp="714622" type="Run" />
  <Command __id="381" _type="RunCommand" className="/a5/src/a5/RunLisp.java" date="Mon Nov 29 14:05:23 EST 2021" kind="HitBreakPoint" projectName="a5" starttimestamp="1638212009072" timestamp="714622" type="Run" />
  <Command __id="382" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:05:23 EST 2021" starttimestamp="1638212009072" timestamp="714720" />
  <Command __id="383" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:05:23 EST 2021" starttimestamp="1638212009072" timestamp="714725" />
  <Command __id="384" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:05:23 EST 2021" starttimestamp="1638212009072" timestamp="714725" />
  <Command __id="385" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:05:23 EST 2021" starttimestamp="1638212009072" timestamp="714727" />
  <Command __id="386" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:05:23 EST 2021" starttimestamp="1638212009072" timestamp="714727" />
  <Command __id="387" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:05:23 EST 2021" starttimestamp="1638212009072" timestamp="714728" />
  <Command __id="388" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:05:23 EST 2021" starttimestamp="1638212009072" timestamp="714728" />
  <Command __id="389" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:05:23 EST 2021" starttimestamp="1638212009072" timestamp="714730" />
  <Command __id="391" _type="PauseCommand" date="Mon Nov 29 14:05:33 EST 2021" range="5s-10s" starttimestamp="1638212009072" timestamp="724063">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[9333]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="390" _type="ConsoleInput" date="Mon Nov 29 14:05:33 EST 2021" starttimestamp="1638212009072" timestamp="724063" type="Exception">
    <outputString><![CDATA[(cond (t) ((+ 3 4)))
]]></outputString>
  </Command>
  <Command __id="392" _type="ConsoleOutput" date="Mon Nov 29 14:05:33 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="724165" type="ConsoleOutput">
    <outputString><![CDATA[T
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"T"), Diff(DELETE,"est execution time (ms):15¶Test execution time (ms):8¶Test execution time (ms):11"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="394" _type="PauseCommand" date="Mon Nov 29 14:05:40 EST 2021" range="5s-10s" starttimestamp="1638212009072" timestamp="731525">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[7360]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="393" _type="ConsoleInput" date="Mon Nov 29 14:05:40 EST 2021" starttimestamp="1638212009072" timestamp="731525" type="Exception">
    <outputString><![CDATA[(cond (nil) ((+ 3 4)))
]]></outputString>
  </Command>
  <Command __id="395" _type="ConsoleOutput" date="Mon Nov 29 14:05:40 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="731627" type="ConsoleOutput">
    <outputString><![CDATA[7
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"T"), Diff(INSERT,"7"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="397" _type="PauseCommand" date="Mon Nov 29 14:06:06 EST 2021" range="20s-30s" starttimestamp="1638212009072" timestamp="757722">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[26095]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="396" _type="ConsoleInput" date="Mon Nov 29 14:06:06 EST 2021" starttimestamp="1638212009072" timestamp="757722" type="Exception">
    <outputString><![CDATA[(cond (t))
]]></outputString>
  </Command>
  <Command __id="398" _type="ConsoleOutput" date="Mon Nov 29 14:06:06 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="757775" type="ConsoleOutput">
    <outputString><![CDATA[T
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"7"), Diff(INSERT,"T"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="400" _type="PauseCommand" date="Mon Nov 29 14:06:10 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="761056">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3281]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="399" _type="ConsoleInput" date="Mon Nov 29 14:06:10 EST 2021" starttimestamp="1638212009072" timestamp="761056" type="Exception">
    <outputString><![CDATA[(cond (nil))
]]></outputString>
  </Command>
  <Command __id="401" _type="ConsoleOutput" date="Mon Nov 29 14:06:10 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="761160" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"T"), Diff(INSERT,"NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="403" _type="PauseCommand" date="Mon Nov 29 14:06:15 EST 2021" range="5s-10s" starttimestamp="1638212009072" timestamp="766827">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5667]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="402" _type="ConsoleInput" date="Mon Nov 29 14:06:15 EST 2021" starttimestamp="1638212009072" timestamp="766827" type="Exception">
    <outputString><![CDATA[(cond)
]]></outputString>
  </Command>
  <Command __id="404" _type="ConsoleOutput" date="Mon Nov 29 14:06:16 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="766929" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"NIL¶")]]]></diff>
  </Command>
  <Command __id="406" _type="PauseCommand" date="Mon Nov 29 14:06:28 EST 2021" range="10s-20s" starttimestamp="1638212009072" timestamp="779529">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[12600]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="405" _type="ShellCommand" date="Mon Nov 29 14:06:28 EST 2021" starttimestamp="1638212009072" timestamp="779529" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="408" _type="PauseCommand" date="Mon Nov 29 14:07:05 EST 2021" range="30s-1m" starttimestamp="1638212009072" timestamp="816200">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[36671]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="407" _type="ShellCommand" date="Mon Nov 29 14:07:05 EST 2021" starttimestamp="1638212009072" timestamp="816200" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="410" _type="PauseCommand" date="Mon Nov 29 14:07:09 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="820775">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4575]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="409" _type="ConsoleInput" date="Mon Nov 29 14:07:09 EST 2021" starttimestamp="1638212009072" timestamp="820775" type="Exception">
    <outputString><![CDATA[(cond (T 1))
]]></outputString>
  </Command>
  <Command __id="411" _type="ConsoleOutput" date="Mon Nov 29 14:07:09 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="820828" type="ConsoleOutput">
    <outputString><![CDATA[1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL"), Diff(INSERT,"1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="413" _type="PauseCommand" date="Mon Nov 29 14:07:13 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="824010">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3182]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="412" _type="ConsoleInput" date="Mon Nov 29 14:07:13 EST 2021" starttimestamp="1638212009072" timestamp="824010" type="Exception">
    <outputString><![CDATA[(cond (T))
]]></outputString>
  </Command>
  <Command __id="414" _type="ConsoleOutput" date="Mon Nov 29 14:07:13 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="824113" type="ConsoleOutput">
    <outputString><![CDATA[T
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"1"), Diff(INSERT,"T"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="416" _type="PauseCommand" date="Mon Nov 29 14:07:19 EST 2021" range="5s-10s" starttimestamp="1638212009072" timestamp="830753">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[6640]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="415" _type="ConsoleInput" date="Mon Nov 29 14:07:19 EST 2021" starttimestamp="1638212009072" timestamp="830753" type="Exception">
    <outputString><![CDATA[(cond (nil 1) (T 2))
]]></outputString>
  </Command>
  <Command __id="417" _type="ConsoleOutput" date="Mon Nov 29 14:07:19 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="830805" type="ConsoleOutput">
    <outputString><![CDATA[2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"T"), Diff(INSERT,"2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="419" _type="PauseCommand" date="Mon Nov 29 14:07:29 EST 2021" range="5s-10s" starttimestamp="1638212009072" timestamp="839959">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[9154]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="418" _type="ConsoleInput" date="Mon Nov 29 14:07:29 EST 2021" starttimestamp="1638212009072" timestamp="839959" type="Exception">
    <outputString><![CDATA[(cond (nil 1) ((+ 1 2) 2)
]]></outputString>
  </Command>
  <Command __id="421" _type="PauseCommand" date="Mon Nov 29 14:07:30 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="841714">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ConsoleInput]]></prev>
    <pause><![CDATA[1755]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="420" _type="ConsoleInput" date="Mon Nov 29 14:07:30 EST 2021" starttimestamp="1638212009072" timestamp="841714" type="Exception">
    <outputString><![CDATA[)
]]></outputString>
  </Command>
  <Command __id="422" _type="ConsoleOutput" date="Mon Nov 29 14:07:30 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="841766" type="ConsoleOutput">
    <outputString><![CDATA[2
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"2¶")]]]></diff>
  </Command>
  <Command __id="424" _type="PauseCommand" date="Mon Nov 29 14:07:37 EST 2021" range="5s-10s" starttimestamp="1638212009072" timestamp="848077">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[6311]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="423" _type="ConsoleInput" date="Mon Nov 29 14:07:37 EST 2021" starttimestamp="1638212009072" timestamp="848077" type="Exception">
    <outputString><![CDATA[(cond ((car nil) 1))
]]></outputString>
  </Command>
  <Command __id="425" _type="ConsoleOutput" date="Mon Nov 29 14:07:37 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="848130" type="ConsoleOutput">
    <outputString><![CDATA[1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"2"), Diff(INSERT,"1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="427" _type="PauseCommand" date="Mon Nov 29 14:08:06 EST 2021" range="20s-30s" starttimestamp="1638212009072" timestamp="877098">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[28968]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="426" _type="ConsoleInput" date="Mon Nov 29 14:08:06 EST 2021" starttimestamp="1638212009072" timestamp="877098" type="Exception">
    <outputString><![CDATA[(cond (and (T) (+ 3 4)))
]]></outputString>
  </Command>
  <Command __id="428" _type="ProgramExecutionEvent" className="/a5/src/a5/RunLisp.java" date="Mon Nov 29 14:08:06 EST 2021" kind="HitBreakPoint" projectName="a5" starttimestamp="1638212009072" timestamp="877145" type="Run" />
  <Command __id="429" _type="ProgramExecutionEvent" className="/a5/src/a5/RunLisp.java" date="Mon Nov 29 14:08:06 EST 2021" kind="HitBreakPoint" projectName="a5" starttimestamp="1638212009072" timestamp="877145" type="Run" />
  <Command __id="430" _type="ExceptionCommand" date="Mon Nov 29 14:08:06 EST 2021" starttimestamp="1638212009072" timestamp="877199" type="Exception">
    <exceptionString><![CDATA[Exception in thread "main" java.lang.IllegalStateException: Expression does not start with an operator
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:52)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:25)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at expression.CondEvaluator.eval(CondEvaluator.java:21)
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:50)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:25)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
	at a5.RunLisp.main(RunLisp.java:21)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="432" _type="PauseCommand" date="Mon Nov 29 14:08:27 EST 2021" range="20s-30s" starttimestamp="1638212009072" timestamp="898070">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[20871]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="431" _type="ShellCommand" date="Mon Nov 29 14:08:27 EST 2021" starttimestamp="1638212009072" timestamp="898070" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="433" _type="ShellCommand" date="Mon Nov 29 14:08:27 EST 2021" starttimestamp="1638212009072" timestamp="898905" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="442" _type="PauseCommand" date="Mon Nov 29 14:08:58 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="929418">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2360]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="443" _type="MoveCaretCommand" caretOffset="0" date="Mon Nov 29 14:08:58 EST 2021" docOffset="0" starttimestamp="1638212009072" timestamp="929517" />
  <Command __id="445" _type="MoveCaretCommand" caretOffset="730" date="Mon Nov 29 14:08:59 EST 2021" docOffset="929" starttimestamp="1638212009072" timestamp="930457" />
  <Command __id="447" _type="PauseCommand" date="Mon Nov 29 14:09:08 EST 2021" range="5s-10s" starttimestamp="1638212009072" timestamp="939439">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[8982]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="449" _type="MoveCaretCommand" caretOffset="730" date="Mon Nov 29 14:09:08 EST 2021" docOffset="929" starttimestamp="1638212009072" timestamp="939602" />
  <Command __id="451" _type="PauseCommand" date="Mon Nov 29 14:09:10 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="941544">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1942]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="452" _type="MoveCaretCommand" caretOffset="730" date="Mon Nov 29 14:09:10 EST 2021" docOffset="929" starttimestamp="1638212009072" timestamp="941759" />
  <Command __id="456" _type="PauseCommand" date="Mon Nov 29 14:09:19 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="950548">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[2455]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ProgramExecutionEvent]]></next>
  </Command>
  <Command __id="455" _type="ProgramExecutionEvent" className="/a5/src/a5/RunLisp.java" date="Mon Nov 29 14:09:19 EST 2021" kind="HitBreakPoint" projectName="a5" starttimestamp="1638212009072" timestamp="950548" type="Run" />
  <Command __id="457" _type="RunCommand" className="/a5/src/a5/RunLisp.java" date="Mon Nov 29 14:09:19 EST 2021" kind="HitBreakPoint" projectName="a5" starttimestamp="1638212009072" timestamp="950548" type="Run" />
  <Command __id="459" _type="PauseCommand" date="Mon Nov 29 14:09:21 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="951933">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[1385]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[PasteCommand]]></next>
  </Command>
  <Command __id="458" _type="PasteCommand" date="Mon Nov 29 14:09:21 EST 2021" starttimestamp="1638212009072" timestamp="951933" />
  <Command __id="464" _type="PauseCommand" date="Mon Nov 29 14:09:29 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="960255">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[BreakPointCommand]]></prev>
    <pause><![CDATA[3700]]></pause>
    <nextType><![CDATA[Debug]]></nextType>
    <next><![CDATA[RunCommand]]></next>
  </Command>
  <Command __id="463" _type="RunCommand" className="/a5/src/a5/RunLisp.java" date="Mon Nov 29 14:09:29 EST 2021" kind="HitBreakPoint" projectName="a5" starttimestamp="1638212009072" timestamp="960255" type="Run" />
  <Command __id="465" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Nov 29 14:09:29 EST 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1638212009072" timestamp="960498" type="Run" />
  <Command __id="466" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Nov 29 14:09:29 EST 2021" kind="StepInto" projectName="(Unknown)" starttimestamp="1638212009072" timestamp="960550" type="Run" />
  <Command __id="467" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Nov 29 14:09:29 EST 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1638212009072" timestamp="960701" type="Run" />
  <Command __id="468" _type="ConsoleOutput" date="Mon Nov 29 14:09:29 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="960754" type="ConsoleOutput">
    <outputString><![CDATA[JRE Oracle Corporation/11.0.12 is not supported, advanced source lookup disabled: Unsupported class file major version 55.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"1"), Diff(INSERT,"JRE Oracle Corporation/11.0.12 is not supported, advanced source lookup disabled: Unsupported class file major version 55."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="469" _type="PasteCommand" date="Mon Nov 29 14:09:30 EST 2021" starttimestamp="1638212009072" timestamp="961637" />
  <Command __id="471" _type="PauseCommand" date="Mon Nov 29 14:09:32 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="963592">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1955]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="472" _type="MoveCaretCommand" caretOffset="570" date="Mon Nov 29 14:09:32 EST 2021" docOffset="904" starttimestamp="1638212009072" timestamp="963718" />
  <Command __id="486" _type="PauseCommand" date="Mon Nov 29 14:09:55 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="986603">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[1784]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ProgramExecutionEvent]]></next>
  </Command>
  <Command __id="485" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Nov 29 14:09:55 EST 2021" kind="StepInto" projectName="(Unknown)" starttimestamp="1638212009072" timestamp="986603" type="Run" />
  <Command __id="488" _type="PauseCommand" date="Mon Nov 29 14:09:59 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="990232">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[3629]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="489" _type="MoveCaretCommand" caretOffset="194" date="Mon Nov 29 14:09:59 EST 2021" docOffset="393" starttimestamp="1638212009072" timestamp="990295" />
  <Command __id="514" _type="PauseCommand" date="Mon Nov 29 14:10:31 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="1022684">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[3354]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ProgramExecutionEvent]]></next>
  </Command>
  <Command __id="513" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Nov 29 14:10:31 EST 2021" kind="StepInto" projectName="(Unknown)" starttimestamp="1638212009072" timestamp="1022684" type="Run" />
  <Command __id="529" _type="PauseCommand" date="Mon Nov 29 14:11:10 EST 2021" range="5s-10s" starttimestamp="1638212009072" timestamp="1061285">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[9335]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ProgramExecutionEvent]]></next>
  </Command>
  <Command __id="528" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Nov 29 14:11:10 EST 2021" kind="StepInto" projectName="(Unknown)" starttimestamp="1638212009072" timestamp="1061285" type="Run" />
  <Command __id="531" _type="PauseCommand" date="Mon Nov 29 14:11:11 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="1062668">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[1383]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="530" _type="MoveCaretCommand" caretOffset="391" date="Mon Nov 29 14:11:11 EST 2021" docOffset="590" starttimestamp="1638212009072" timestamp="1062668" />
  <Command __id="532" _type="MoveCaretCommand" caretOffset="391" date="Mon Nov 29 14:11:11 EST 2021" docOffset="590" starttimestamp="1638212009072" timestamp="1062668" />
  <Command __id="534" _type="PasteCommand" date="Mon Nov 29 14:11:12 EST 2021" starttimestamp="1638212009072" timestamp="1063602" />
  <Command __id="536" _type="PauseCommand" date="Mon Nov 29 14:11:14 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="1065436">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1834]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="537" _type="UndoCommand" date="Mon Nov 29 14:11:14 EST 2021" starttimestamp="1638212009072" timestamp="1065445" />
  <Command __id="555" _type="PauseCommand" date="Mon Nov 29 14:11:18 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="1069890">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[1024]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="554" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:11:18 EST 2021" starttimestamp="1638212009072" timestamp="1069890" />
  <Command __id="556" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:11:18 EST 2021" starttimestamp="1638212009072" timestamp="1069893" />
  <Command __id="557" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:11:18 EST 2021" starttimestamp="1638212009072" timestamp="1069893" />
  <Command __id="558" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:11:18 EST 2021" starttimestamp="1638212009072" timestamp="1069894" />
  <Command __id="559" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:11:18 EST 2021" starttimestamp="1638212009072" timestamp="1069894" />
  <Command __id="560" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:11:18 EST 2021" starttimestamp="1638212009072" timestamp="1069895" />
  <Command __id="561" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:11:18 EST 2021" starttimestamp="1638212009072" timestamp="1069895" />
  <Command __id="562" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:11:18 EST 2021" starttimestamp="1638212009072" timestamp="1069897" />
  <Command __id="569" _type="PauseCommand" date="Mon Nov 29 14:11:22 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="1073810">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[1784]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ProgramExecutionEvent]]></next>
  </Command>
  <Command __id="568" _type="ProgramExecutionEvent" className="/a5/src/a5/RunLisp.java" date="Mon Nov 29 14:11:22 EST 2021" kind="HitBreakPoint" projectName="a5" starttimestamp="1638212009072" timestamp="1073810" type="Run" />
  <Command __id="570" _type="RunCommand" className="/a5/src/a5/RunLisp.java" date="Mon Nov 29 14:11:22 EST 2021" kind="HitBreakPoint" projectName="a5" starttimestamp="1638212009072" timestamp="1073811" type="Run" />
  <Command __id="572" _type="PauseCommand" date="Mon Nov 29 14:11:29 EST 2021" range="5s-10s" starttimestamp="1638212009072" timestamp="1080098">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[6287]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[PasteCommand]]></next>
  </Command>
  <Command __id="571" _type="PasteCommand" date="Mon Nov 29 14:11:29 EST 2021" starttimestamp="1638212009072" timestamp="1080098" />
  <Command __id="573" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Nov 29 14:11:29 EST 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1638212009072" timestamp="1080540" type="Debug" />
  <Command __id="574" _type="ProgramExecutionEvent" className="/a5/src/a5/RunLisp.java" date="Mon Nov 29 14:11:29 EST 2021" kind="HitBreakPoint" projectName="a5" starttimestamp="1638212009072" timestamp="1080540" type="Run" />
  <Command __id="575" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Nov 29 14:11:29 EST 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1638212009072" timestamp="1080540" type="Debug" />
  <Command __id="576" _type="ProgramExecutionEvent" className="/a5/src/a5/RunLisp.java" date="Mon Nov 29 14:11:29 EST 2021" kind="HitBreakPoint" projectName="a5" starttimestamp="1638212009072" timestamp="1080540" type="Run" />
  <Command __id="577" _type="ExceptionCommand" date="Mon Nov 29 14:11:29 EST 2021" starttimestamp="1638212009072" timestamp="1080548" type="Exception">
    <exceptionString><![CDATA[Exception in thread "main" java.util.NoSuchElementException: No value present
	at java.base/java.util.Optional.get(Optional.java:148)
	at a5.VariableEval.eval(VariableEval.java:25)
	at expression.CondEvaluator.eval(CondEvaluator.java:17)
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:50)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:25)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at main.lisp.interpreter.BasicLispInterpreterController.run(BasicLispInterpreterController.java:29)
	at main.Main.main(Main.java:31)
	at a5.RunLisp.main(RunLisp.java:21)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="579" _type="PauseCommand" date="Mon Nov 29 14:11:41 EST 2021" range="10s-20s" starttimestamp="1638212009072" timestamp="1092325">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[11777]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="578" _type="MoveCaretCommand" caretOffset="599" date="Mon Nov 29 14:11:41 EST 2021" docOffset="798" starttimestamp="1638212009072" timestamp="1092325" />
  <Command __id="580" _type="MoveCaretCommand" caretOffset="599" date="Mon Nov 29 14:11:41 EST 2021" docOffset="798" starttimestamp="1638212009072" timestamp="1092325" />
  <Command __id="582" _type="PauseCommand" date="Mon Nov 29 14:12:01 EST 2021" range="10s-20s" starttimestamp="1638212009072" timestamp="1112027">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[19702]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="581" _type="MoveCaretCommand" caretOffset="400" date="Mon Nov 29 14:12:01 EST 2021" docOffset="599" starttimestamp="1638212009072" timestamp="1112027" />
  <Command __id="583" _type="MoveCaretCommand" caretOffset="400" date="Mon Nov 29 14:12:01 EST 2021" docOffset="599" starttimestamp="1638212009072" timestamp="1112027" />
  <Command __id="585" _type="PauseCommand" date="Mon Nov 29 14:12:02 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="1113851">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1824]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="584" _type="SelectTextCommand" caretOffset="391" date="Mon Nov 29 14:12:02 EST 2021" end="402" start="391" starttimestamp="1638212009072" timestamp="1113851" />
  <Command __id="586" _type="SelectTextCommand" caretOffset="391" date="Mon Nov 29 14:12:02 EST 2021" end="402" start="391" starttimestamp="1638212009072" timestamp="1113852" />
  <Command __id="1" _type="DiffBasedFileOpenCommand" date="Mon Nov 29 13:53:29 EST 2021" projectName="a5" starttimestamp="1638212009072" timestamp="371">
    <filePath><![CDATA[C:\Users\rarael\OneDrive\Documents\COMPSCIENCE\COMP 524\a5\test2.lisp]]></filePath>
    <diff><![CDATA[null]]></diff>
  </Command>
  <Command __id="59" _type="DiffBasedFileOpenCommand" date="Mon Nov 29 13:59:44 EST 2021" docASTNodeCount="157" docActiveCodeLength="945" docExpressionCount="121" docLength="945" projectName="a5" starttimestamp="1638212009072" timestamp="375846">
    <filePath><![CDATA[C:\Users\rarael\OneDrive\Documents\COMPSCIENCE\COMP 524\a5\src\expression\CondEvaluator.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package expression;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.NilAtomicExpressionFactory;
import main.lisp.parser.terms.SExpression;
import main.lisp.parser.terms.TAtomicExpressionFactory;

public class CondEvaluator implements Evaluator{

	@Override
	public SExpression eval(SExpression arg0, Environment arg1) {
		SExpression condition = arg0.getTail();
		if(condition.isNIL()) {
				return NilAtomicExpressionFactory.newInstance();
		}
		if (!condition.getHead().isAtom() &&!condition.getHead().getHead().eval(arg1).isNIL()) {
			if (condition.getHead().getTail().isNIL()) {
				return condition.getHead().getHead().eval(arg1);
			} else {
				return condition.getHead().getTail().getHead().eval(arg1);
			}
		}else if (condition.getHead().isAtom()) {
			return condition.getHead().eval(arg1);
		}else {
			return eval(condition, arg1);
		}
	}
}
]]></snapshot>
  </Command>
  <DocumentChange __id="71" _type="Delete" date="Mon Nov 29 14:00:16 EST 2021" docASTNodeCount="154" docActiveCodeLength="934" docExpressionCount="118" docLength="934" endLine="16" length="11" offset="590" startLine="16" starttimestamp="1638212009072" timestamp="407028">
    <text><![CDATA[.eval(arg1)]]></text>
  </DocumentChange>
  <DocumentChange __id="153" _type="Delete" date="Mon Nov 29 14:01:41 EST 2021" docASTNodeCount="151" docActiveCodeLength="923" docExpressionCount="115" docLength="923" endLine="20" length="11" offset="769" startLine="20" starttimestamp="1638212009072" timestamp="492711">
    <text><![CDATA[.eval(arg1)]]></text>
  </DocumentChange>
  <DocumentChange __id="190" _type="Insert" date="Mon Nov 29 14:02:07 EST 2021" docASTNodeCount="154" docActiveCodeLength="934" docExpressionCount="118" docLength="934" length="11" offset="769" starttimestamp="1638212009072" timestamp="518905">
    <text><![CDATA[.eval(arg1)]]></text>
  </DocumentChange>
  <DocumentChange __id="262" _type="Insert" date="Mon Nov 29 14:03:41 EST 2021" docASTNodeCount="157" docActiveCodeLength="945" docExpressionCount="121" docLength="945" length="11" offset="591" starttimestamp="1638212009072" timestamp="612644">
    <text><![CDATA[.eval(arg1)]]></text>
  </DocumentChange>
  <DocumentChange __id="266" _type="Delete" date="Mon Nov 29 14:03:43 EST 2021" docASTNodeCount="157" docActiveCodeLength="944" docExpressionCount="121" docLength="944" endLine="16" length="1" offset="591" startLine="16" starttimestamp="1638212009072" timestamp="614834">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <DocumentChange __id="270" _type="Insert" date="Mon Nov 29 14:03:45 EST 2021" docASTNodeCount="157" docActiveCodeLength="945" docExpressionCount="121" docLength="945" length="1" offset="601" starttimestamp="1638212009072" timestamp="616891">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <Command __id="307" _type="DiffBasedFileOpenCommand" date="Mon Nov 29 14:04:06 EST 2021" docASTNodeCount="296" docActiveCodeLength="1627" docExpressionCount="214" docLength="1754" projectName="a5" starttimestamp="1638212009072" timestamp="636955">
    <filePath><![CDATA[C:\Users\rarael\OneDrive\Documents\COMPSCIENCE\COMP 524\a5\src\functional\FunctionEvaluator.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package functional;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.evaluator.function.FunctionFactory;
import main.lisp.evaluator.function.Lambda;
import main.lisp.evaluator.function.LambdaFactory;
import main.lisp.parser.terms.IdentifierAtom;
import main.lisp.parser.terms.SExpression;

public class FunctionEvaluator implements Evaluator{

	@Override
	public SExpression eval(SExpression arg0, Environment arg1) {
		IdentifierAtom[] argNames1 = new IdentifierAtom[1];
		SExpression current = arg0.getTail().getHead().getTail().getHead();
		int index = 0;
		if(current.isAtom()) {
			argNames1 = new IdentifierAtom[0];
			return LambdaFactory.newInstance(argNames1, arg0.getTail().getTail());
		}
		while(!current.getTail().isNIL()) {
			// expand size if you still need to add arg names
			argNames1 = expandArray(argNames1, index);
			argNames1[index] = (IdentifierAtom) current.getHead();
			current = current.getTail();
			index++;
		}
		//add last argument (the last argument has nil as its tail)
		if (!current.getHead().isNIL()) {
			argNames1 = expandArray(argNames1, index);
			argNames1[index] = (IdentifierAtom) current.getHead();
		}
		
		Lambda lambda =  LambdaFactory.newInstance(argNames1, arg0.getTail().getHead().getTail().getTail());
		return FunctionFactory.newInstance(lambda, arg1);
	}
	
	public IdentifierAtom[] expandArray(IdentifierAtom[] array, int index) {
		if (index == array.length) {
			int size = array.length+ 1;
			IdentifierAtom[] newArray = new IdentifierAtom[size];
			for (int i = 0; i < array.length; i++) {
				newArray[i] = array[i];
			}
			//array = newArray;
			return newArray;
		}
		return array;
		
	}

}
]]></snapshot>
  </Command>
  <Command __id="310" _type="DiffBasedFileOpenCommand" date="Mon Nov 29 14:04:10 EST 2021" projectName="a5" starttimestamp="1638212009072" timestamp="641917">
    <filePath><![CDATA[C:\Users\rarael\OneDrive\Documents\COMPSCIENCE\COMP 524\a5\test2.lisp]]></filePath>
    <diff><![CDATA[null]]></diff>
  </Command>
  <Command __id="360" _type="DiffBasedFileOpenCommand" date="Mon Nov 29 14:05:10 EST 2021" docASTNodeCount="157" docActiveCodeLength="945" docExpressionCount="121" docLength="945" projectName="a5" starttimestamp="1638212009072" timestamp="701259">
    <filePath><![CDATA[C:\Users\rarael\OneDrive\Documents\COMPSCIENCE\COMP 524\a5\src\expression\CondEvaluator.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package expression;¶¶import main.lisp.evaluator.Environment;¶import main.lisp.evaluator.Evaluator;¶import main.lisp.parser.terms.NilAtomicExpressionFactory;¶import main.lisp.parser.terms.SExpression;¶import main.lisp.parser.terms.TAtomicExpressionFactory;¶¶public class CondEvaluator implements Evaluator{¶¶	@Override¶	public SExpression eval(SExpression arg0, Environment arg1) {¶		SExpression condition = arg0.getTail();¶		if(condition.isNIL()) {¶				return NilAtomicExpressionFactory.newInstance();¶		}¶		if (!condition.getHead().isAtom() &&!condition.getHead().getHead().eval(arg1).isNIL()) {¶			if (condition.getHead().getTail().isNIL()) {¶				return condition.getHead().getHead().eval(arg1);¶			} else {¶				return condition.getHead().getTail().getHead().eval(arg1);¶			}¶		}else if (condition.getHead().isAtom()) {¶			return condition.getHead().eval(arg1);¶		}else {¶			return eval(condition, arg1);¶		}¶	}¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="365" _type="Delete" date="Mon Nov 29 14:05:17 EST 2021" docASTNodeCount="154" docActiveCodeLength="934" docExpressionCount="118" docLength="934" endLine="16" length="11" offset="590" startLine="16" starttimestamp="1638212009072" timestamp="708824">
    <text><![CDATA[.eval(arg1)]]></text>
  </DocumentChange>
  <Command __id="436" _type="DiffBasedFileOpenCommand" date="Mon Nov 29 14:08:55 EST 2021" projectName="null" starttimestamp="1638212009072" timestamp="926196">
    <filePath><![CDATA[null]]></filePath>
    <diff><![CDATA[null]]></diff>
  </Command>
  <Command __id="439" _type="DiffBasedFileOpenCommand" date="Mon Nov 29 14:08:56 EST 2021" docASTNodeCount="121" docActiveCodeLength="673" docExpressionCount="88" docLength="745" projectName="a5" starttimestamp="1638212009072" timestamp="926983">
    <filePath><![CDATA[C:\Users\rarael\OneDrive\Documents\COMPSCIENCE\COMP 524\a5\src\a5\VariableEval.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package a5;

import main.lisp.evaluator.Environment;
import main.lisp.parser.terms.IdentifierAtom;
import main.lisp.parser.terms.SExpression;
import main.lisp.scanner.tokens.Token;
import main.lisp.parser.terms.IdentifierAtomFactory;

public class VariableEval extends IdentifierAtom {

	public VariableEval(String string) {
		super(string);
	}
	public VariableEval(Token token) {
		super(token);
	}

	public SExpression eval(Environment arg0) {
		IdentifierAtomFactory.setClass(this.getClass());
	//	SExpression expr = arg0.lookup(this).get();
	//	return expr.eval(arg0);
		if (arg0.lookup(this).isEmpty() && arg0.getParent() != null) {
			return arg0.lookup(this).get();
		}
		return arg0.lookup(this).get();
	}

}
]]></snapshot>
  </Command>
  <Command __id="441" _type="DiffBasedFileOpenCommand" date="Mon Nov 29 14:08:58 EST 2021" projectName="null" starttimestamp="1638212009072" timestamp="929418">
    <filePath><![CDATA[null]]></filePath>
    <diff><![CDATA[null]]></diff>
  </Command>
  <Command __id="444" _type="DiffBasedFileOpenCommand" date="Mon Nov 29 14:08:59 EST 2021" docASTNodeCount="154" docActiveCodeLength="934" docExpressionCount="118" docLength="934" projectName="a5" starttimestamp="1638212009072" timestamp="930358">
    <filePath><![CDATA[C:\Users\rarael\OneDrive\Documents\COMPSCIENCE\COMP 524\a5\src\expression\CondEvaluator.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package expression;¶¶import main.lisp.evaluator.Environment;¶import main.lisp.evaluator.Evaluator;¶import main.lisp.parser.terms.NilAtomicExpressionFactory;¶import main.lisp.parser.terms.SExpression;¶import main.lisp.parser.terms.TAtomicExpressionFactory;¶¶public class CondEvaluator implements Evaluator{¶¶	@Override¶	public SExpression eval(SExpression arg0, Environment arg1) {¶		SExpression condition = arg0.getTail();¶		if(condition.isNIL()) {¶				return NilAtomicExpressionFactory.newInstance();¶		}¶		if (!condition.getHead().isAtom() &&!condition.getHead().getHead()."), Diff(DELETE,"eval(arg1)."), Diff(EQUAL,"isNIL()) {¶			if (condition.getHead().getTail().isNIL()) {¶				return condition.getHead().getHead().eval(arg1);¶			} else {¶				return condition.getHead().getTail().getHead().eval(arg1);¶			}¶		}else if (condition.getHead().isAtom()) {¶			return condition.getHead().eval(arg1);¶		}else {¶			return eval(condition, arg1);¶		}¶	}¶}¶")]]]></diff>
    <snapshot><![CDATA[package expression;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.parser.terms.NilAtomicExpressionFactory;
import main.lisp.parser.terms.SExpression;
import main.lisp.parser.terms.TAtomicExpressionFactory;

public class CondEvaluator implements Evaluator{

	@Override
	public SExpression eval(SExpression arg0, Environment arg1) {
		SExpression condition = arg0.getTail();
		if(condition.isNIL()) {
				return NilAtomicExpressionFactory.newInstance();
		}
		if (!condition.getHead().isAtom() &&!condition.getHead().getHead().isNIL()) {
			if (condition.getHead().getTail().isNIL()) {
				return condition.getHead().getHead().eval(arg1);
			} else {
				return condition.getHead().getTail().getHead().eval(arg1);
			}
		}else if (condition.getHead().isAtom()) {
			return condition.getHead().eval(arg1);
		}else {
			return eval(condition, arg1);
		}
	}
}
]]></snapshot>
  </Command>
  <Command __id="446" _type="DiffBasedFileOpenCommand" date="Mon Nov 29 14:09:08 EST 2021" projectName="a5" starttimestamp="1638212009072" timestamp="939439">
    <filePath><![CDATA[C:\Users\rarael\OneDrive\Documents\COMPSCIENCE\COMP 524\a5\test2.lisp]]></filePath>
    <diff><![CDATA[null]]></diff>
  </Command>
  <Command __id="448" _type="DiffBasedFileOpenCommand" date="Mon Nov 29 14:09:08 EST 2021" docASTNodeCount="154" docActiveCodeLength="934" docExpressionCount="118" docLength="934" projectName="a5" starttimestamp="1638212009072" timestamp="939519">
    <filePath><![CDATA[C:\Users\rarael\OneDrive\Documents\COMPSCIENCE\COMP 524\a5\src\expression\CondEvaluator.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package expression;¶¶import main.lisp.evaluator.Environment;¶import main.lisp.evaluator.Evaluator;¶import main.lisp.parser.terms.NilAtomicExpressionFactory;¶import main.lisp.parser.terms.SExpression;¶import main.lisp.parser.terms.TAtomicExpressionFactory;¶¶public class CondEvaluator implements Evaluator{¶¶	@Override¶	public SExpression eval(SExpression arg0, Environment arg1) {¶		SExpression condition = arg0.getTail();¶		if(condition.isNIL()) {¶				return NilAtomicExpressionFactory.newInstance();¶		}¶		if (!condition.getHead().isAtom() &&!condition.getHead().getHead().isNIL()) {¶			if (condition.getHead().getTail().isNIL()) {¶				return condition.getHead().getHead().eval(arg1);¶			} else {¶				return condition.getHead().getTail().getHead().eval(arg1);¶			}¶		}else if (condition.getHead().isAtom()) {¶			return condition.getHead().eval(arg1);¶		}else {¶			return eval(condition, arg1);¶		}¶	}¶}¶")]]]></diff>
  </Command>
  <Command __id="450" _type="DiffBasedFileOpenCommand" date="Mon Nov 29 14:09:10 EST 2021" docASTNodeCount="154" docActiveCodeLength="934" docExpressionCount="118" docLength="934" projectName="a5" starttimestamp="1638212009072" timestamp="941544">
    <filePath><![CDATA[C:\Users\rarael\OneDrive\Documents\COMPSCIENCE\COMP 524\a5\src\expression\CondEvaluator.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package expression;¶¶import main.lisp.evaluator.Environment;¶import main.lisp.evaluator.Evaluator;¶import main.lisp.parser.terms.NilAtomicExpressionFactory;¶import main.lisp.parser.terms.SExpression;¶import main.lisp.parser.terms.TAtomicExpressionFactory;¶¶public class CondEvaluator implements Evaluator{¶¶	@Override¶	public SExpression eval(SExpression arg0, Environment arg1) {¶		SExpression condition = arg0.getTail();¶		if(condition.isNIL()) {¶				return NilAtomicExpressionFactory.newInstance();¶		}¶		if (!condition.getHead().isAtom() &&!condition.getHead().getHead().isNIL()) {¶			if (condition.getHead().getTail().isNIL()) {¶				return condition.getHead().getHead().eval(arg1);¶			} else {¶				return condition.getHead().getTail().getHead().eval(arg1);¶			}¶		}else if (condition.getHead().isAtom()) {¶			return condition.getHead().eval(arg1);¶		}else {¶			return eval(condition, arg1);¶		}¶	}¶}¶")]]]></diff>
  </Command>
  <Command __id="470" _type="DiffBasedFileOpenCommand" date="Mon Nov 29 14:09:32 EST 2021" docASTNodeCount="297" docActiveCodeLength="1971" docExpressionCount="209" docLength="2074" projectName="a5" starttimestamp="1638212009072" timestamp="963592">
    <filePath><![CDATA[C:\Users\rarael\OneDrive\Documents\COMPSCIENCE\COMP 524\a5\src\evaluators\LambdaSExpressionEvaluator.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package evaluators;

import java.util.Optional;

import main.lisp.evaluator.BasicExpressionEvaluator;
import main.lisp.evaluator.BuiltinOperationManagerSingleton;
import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.evaluator.function.Lambda;
import main.lisp.parser.terms.IdentifierAtom;
import main.lisp.parser.terms.SExpression;

public class LambdaSExpressionEvaluator extends BasicExpressionEvaluator {
	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		// evaluates lambda first
		if (!expr.getHead().isAtom()) {
			SExpression eval = basicEvaluator(expr.getHead(), environment);
			if (eval instanceof Lambda) {
				Environment childEnvironment = environment.newChild();
				return evaluateLambda((Lambda) eval, childEnvironment, environment, expr.getTail());
			}
		}
			// when it is not a lambda
			return basicEvaluator(expr, environment);
		}
	
	// produces your lambda evaluation
	public SExpression evaluateLambda(Lambda lambda, Environment childEnvironment, Environment environment, SExpression current) {
		IdentifierAtom[] argNames = lambda.getArgumentNames();
		for(int i = 0; i < argNames.length; i++) {
			if (current.isAtom()) {
				childEnvironment.assign(argNames[i], current);
			} else {
				childEnvironment.assign(argNames[i], current.getHead().eval(environment));
				current = current.getTail();
			}
		}
	return lambda.eval(childEnvironment);
	}
	
	// basic evaluator
	public SExpression basicEvaluator(SExpression expr, Environment environment) {
		if (expr.getHead() instanceof IdentifierAtom) {
			String operator = ((IdentifierAtom)expr.getHead()).getValue();
			Evaluator eval = BuiltinOperationManagerSingleton.get().getEvaluator(operator);
			if (eval == null) {
				throw new IllegalStateException("No evaluator registered for operator '" + operator + "'");
			}
			return eval.eval(expr, environment);
		} else {
			throw new IllegalStateException("Expression does not start with an operator");
		}
	}
}

]]></snapshot>
  </Command>
  <Command __id="487" _type="DiffBasedFileOpenCommand" date="Mon Nov 29 14:09:59 EST 2021" docASTNodeCount="154" docActiveCodeLength="934" docExpressionCount="118" docLength="934" projectName="a5" starttimestamp="1638212009072" timestamp="990232">
    <filePath><![CDATA[C:\Users\rarael\OneDrive\Documents\COMPSCIENCE\COMP 524\a5\src\expression\CondEvaluator.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package expression;¶¶import main.lisp.evaluator.Environment;¶import main.lisp.evaluator.Evaluator;¶import main.lisp.parser.terms.NilAtomicExpressionFactory;¶import main.lisp.parser.terms.SExpression;¶import main.lisp.parser.terms.TAtomicExpressionFactory;¶¶public class CondEvaluator implements Evaluator{¶¶	@Override¶	public SExpression eval(SExpression arg0, Environment arg1) {¶		SExpression condition = arg0.getTail();¶		if(condition.isNIL()) {¶				return NilAtomicExpressionFactory.newInstance();¶		}¶		if (!condition.getHead().isAtom() &&!condition.getHead().getHead().isNIL()) {¶			if (condition.getHead().getTail().isNIL()) {¶				return condition.getHead().getHead().eval(arg1);¶			} else {¶				return condition.getHead().getTail().getHead().eval(arg1);¶			}¶		}else if (condition.getHead().isAtom()) {¶			return condition.getHead().eval(arg1);¶		}else {¶			return eval(condition, arg1);¶		}¶	}¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="533" _type="Insert" date="Mon Nov 29 14:11:12 EST 2021" docASTNodeCount="169" docActiveCodeLength="958" docExpressionCount="130" docLength="958" length="24" offset="590" starttimestamp="1638212009072" timestamp="1063594">
    <text><![CDATA[(cond (and (T) (+ 3 4)))]]></text>
  </DocumentChange>
  <DocumentChange __id="535" _type="Delete" date="Mon Nov 29 14:11:14 EST 2021" docASTNodeCount="154" docActiveCodeLength="934" docExpressionCount="118" docLength="934" endLine="16" length="24" offset="590" startLine="16" starttimestamp="1638212009072" timestamp="1065436">
    <text><![CDATA[(cond (and (T) (+ 3 4)))]]></text>
  </DocumentChange>
  <DocumentChange __id="538" _type="Insert" date="Mon Nov 29 14:11:17 EST 2021" docASTNodeCount="157" docActiveCodeLength="945" docExpressionCount="121" docLength="945" length="11" offset="590" starttimestamp="1638212009072" timestamp="1067967">
    <text><![CDATA[.eval(arg1)]]></text>
  </DocumentChange>
  <Command __id="588" _type="PauseCommand" date="Mon Nov 29 14:12:04 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="1115562">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1710]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="603" _type="PauseCommand" date="Mon Nov 29 14:12:07 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="1118902">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2616]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ProgramExecutionEvent]]></next>
  </Command>
  <Command __id="602" _type="ProgramExecutionEvent" className="/a5/src/a5/LocalChecks.java" date="Mon Nov 29 14:12:07 EST 2021" kind="HitBreakPoint" projectName="a5" starttimestamp="1638212009072" timestamp="1118902" type="Run" />
  <Command __id="604" _type="RunCommand" className="/a5/src/a5/LocalChecks.java" date="Mon Nov 29 14:12:07 EST 2021" kind="HitBreakPoint" projectName="a5" starttimestamp="1638212009072" timestamp="1118902" type="Run" />
  <Command __id="605" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:12:08 EST 2021" starttimestamp="1638212009072" timestamp="1118952" />
  <Command __id="606" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:12:08 EST 2021" starttimestamp="1638212009072" timestamp="1118955" />
  <Command __id="607" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:12:08 EST 2021" starttimestamp="1638212009072" timestamp="1118956" />
  <Command __id="608" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:12:08 EST 2021" starttimestamp="1638212009072" timestamp="1118956" />
  <Command __id="609" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:12:08 EST 2021" starttimestamp="1638212009072" timestamp="1118957" />
  <Command __id="610" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:12:08 EST 2021" starttimestamp="1638212009072" timestamp="1118957" />
  <Command __id="611" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:12:08 EST 2021" starttimestamp="1638212009072" timestamp="1118957" />
  <Command __id="612" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:12:08 EST 2021" starttimestamp="1638212009072" timestamp="1118961" />
  <Command __id="614" _type="PauseCommand" date="Mon Nov 29 14:12:10 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="1121162">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2201]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="613" _type="ShellCommand" date="Mon Nov 29 14:12:10 EST 2021" starttimestamp="1638212009072" timestamp="1121162" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="616" _type="PauseCommand" date="Mon Nov 29 14:12:13 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="1124767">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3605]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="615" _type="ConsoleOutput" date="Mon Nov 29 14:12:13 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="1124767" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):66
Test execution time (ms):1
Test execution time (ms):9
Test execution time (ms):12
Test execution time (ms):69
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"JRE Oracle Corporation/11.0.12 is not supported, advanced source lookup disabled: Unsupported class file major version 55."), Diff(INSERT,"Test execution time (ms):66¶Test execution time (ms):1¶Test execution time (ms):9¶Test execution time (ms):12¶Test execution time (ms):69"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="617" _type="ConsoleOutput" date="Mon Nov 29 14:12:13 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="1124820" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):71
Test execution time (ms):0
Test execution time (ms):0
Test execution time (ms):1
Test execution time (ms):0
Building symbol table and running first pass checks:Mon Nov 29 14:12:13 EST 2021
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"66"), Diff(INSERT,"71"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"1"), Diff(INSERT,"0"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"9"), Diff(INSERT,"0"), Diff(EQUAL,"¶Test execution time (ms):1"), Diff(DELETE,"2"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"69"), Diff(INSERT,"0¶Building symbol table and running first pass checks:Mon Nov 29 14:12:13 EST 2021"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="619" _type="PauseCommand" date="Mon Nov 29 14:12:15 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="1126147">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1326]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="618" _type="ConsoleOutput" date="Mon Nov 29 14:12:15 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="1126146" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:39
Running second pass checks Mon Nov 29 14:12:15 EST 2021
Start O(n2) inter- and intra class method calls:Mon Nov 29 14:12:15 EST 2021
End O(n2) inter- and intra class method calls:Mon Nov 29 14:12:15 EST 2021
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):71¶Test execution time (ms):0¶Test execution time (ms):0¶Test execution time (ms):1¶Test execution time (ms):0¶Building symbol table and running first pass check"), Diff(INSERT,"Symbol table size:39¶Running second pass checks Mon Nov 29 14:12:15 EST 2021¶Start O(n2) inter- and intra class method calls:Mon Nov 29 14:12:15 EST 2021¶End O(n2) inter- and intra class method call"), Diff(EQUAL,"s:Mon Nov 29 14:12:1"), Diff(DELETE,"3"), Diff(INSERT,"5"), Diff(EQUAL," EST 2021¶")]]]></diff>
  </Command>
  <Command __id="620" _type="ConsoleOutput" date="Mon Nov 29 14:12:15 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="1126859" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Mon Nov 29 14:12:15 EST 2021
Generating checks:Mon Nov 29 14:12:15 EST 2021
Finished Generating checks:Mon Nov 29 14:12:15 EST 2021
Generating externals:Mon Nov 29 14:12:15 EST 2021
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:39¶Running"), Diff(INSERT,"Finished"), Diff(EQUAL," second pass checks"), Diff(DELETE," "), Diff(INSERT,":"), Diff(EQUAL,"Mon Nov 29 14:12:15 EST 2021¶"), Diff(DELETE,"Start O(n2) inter- and intra class method calls:Mon Nov 29 14:12:15 EST 2021¶End O(n2) inter- and intra class method cal"), Diff(INSERT,"Generating checks:Mon Nov 29 14:12:15 EST 2021¶Finished Generating checks:Mon Nov 29 14:12:15 EST 2021¶Generating externa"), Diff(EQUAL,"ls:Mon Nov 29 14:12:15 EST 2021¶")]]]></diff>
  </Command>
  <Command __id="621" _type="ConsoleOutput" date="Mon Nov 29 14:12:16 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="1126961" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Mon Nov 29 14:12:15 EST 2021
Test execution time (ms):2127
Test execution time (ms):10
Test execution time (ms):0
Test execution time (ms):0
Test execution time (ms):1
Test execution time (ms):0
Test execution time (ms):0
Test execution time (ms):0
FuncallCallsExpressionFactory did not pass completely:Checkstyle output does not match:.*INFO.*BasicFuncallEvaluator(.*)main.lisp.parser.terms.ExpressionFactory!newInstance:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression->SExpression(.*)\[MissingMethodCall\].*. Is your class named or tagged properly and checkstyle file upto date?%0.0

Test execution time (ms):11
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass check"), Diff(INSERT,"Generating external"), Diff(EQUAL,"s:Mon Nov 29 14:12:15 EST 2021¶"), Diff(DELETE,"Generating checks:Mon Nov 29 14:12:15 EST 2021¶Finished Generating checks:Mon Nov 29 14:12:15 EST 2021¶Generating externals:Mon Nov 29 14:12:15 EST 202"), Diff(INSERT,"Test execution time (ms):2127¶Test execution time (ms):10¶Test execution time (ms):0¶Test execution time (ms):0¶Test execution time (ms):1¶Test execution time (ms):0¶Test execution time (ms):0¶Test execution time (ms):0¶FuncallCallsExpressionFactory did not pass completely:Checkstyle output does not match:.*INFO.*BasicFuncallEvaluator(.*)main.lisp.parser.terms.ExpressionFactory!newInstance:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression->SExpression(.*)\[MissingMethodCall\].*. Is your class named or tagged properly and checkstyle file upto date?%0.0¶¶Test execution time (ms):1"), Diff(EQUAL,"1¶")]]]></diff>
  </Command>
  <Command __id="622" _type="ConsoleOutput" date="Mon Nov 29 14:12:16 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="1127023" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):7
Test execution time (ms):6
Test execution time (ms):8
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Mon Nov 29 14:12:15 EST 2021¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"212"), Diff(EQUAL,"7¶Test execution time (ms):"), Diff(DELETE,"10¶Test execution time (ms):0¶Test execution time (ms):0¶Test execution time (ms):1¶Test execution time (ms):0¶Test execution time (ms):0¶Test execution time (ms):0¶FuncallCallsExpressionFactory did not pass completely:Checkstyle output does not match:.*INFO.*BasicFuncallEvaluator(.*)main.lisp.parser.terms.ExpressionFactory!newInstance:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression->SExpression(.*)\[MissingMethodCall\].*. Is your class named or tagged properly and checkstyle file upto date?%0.0¶"), Diff(INSERT,"6"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"11"), Diff(INSERT,"8"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="624" _type="PauseCommand" date="Mon Nov 29 14:12:17 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="1128834">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1811]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="623" _type="ConsoleOutput" date="Mon Nov 29 14:12:17 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="1128834" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"7¶Test execution time (ms):6"), Diff(INSERT,"1"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"8"), Diff(INSERT,"1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="625" _type="ExceptionCommand" date="Mon Nov 29 14:12:18 EST 2021" starttimestamp="1638212009072" timestamp="1129790" type="Exception">
    <exceptionString><![CDATA[Test execution time (ms):0
Test execution time (ms):1
Test execution time (ms):0
Test execution time (ms):1
Test execution time (ms):1
Test execution time (ms):0
java.lang.IllegalStateException: Expression does not start with an operator
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:52)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:25)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at expression.CondEvaluator.eval(CondEvaluator.java:21)
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:50)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:25)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at expression.EvalEvaluator.eval(EvalEvaluator.java:10)
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:50)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:25)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at expression.EvalEvaluator.eval(EvalEvaluator.java:10)
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:50)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:25)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:226)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:106)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:301)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="627" _type="PauseCommand" date="Mon Nov 29 14:12:20 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="1131182">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[1392]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="626" _type="ConsoleOutput" date="Mon Nov 29 14:12:20 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="1131182" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):14
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):1"), Diff(DELETE,"¶Test execution time (ms):1"), Diff(INSERT,"4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="628" _type="ExceptionCommand" date="Mon Nov 29 14:12:21 EST 2021" starttimestamp="1638212009072" timestamp="1131976" type="Exception">
    <exceptionString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'LET'
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:48)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:25)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:226)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:106)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:301)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="629" _type="ExceptionCommand" date="Mon Nov 29 14:12:21 EST 2021" starttimestamp="1638212009072" timestamp="1132686" type="Exception">
    <exceptionString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'CURRY'
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:48)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:25)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at functional.FuncallEvaluator.eval(FuncallEvaluator.java:21)
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:50)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:25)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:226)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:106)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:301)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="630" _type="ConsoleOutput" date="Mon Nov 29 14:12:22 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="1133486" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
Test execution time (ms):0
Test execution time (ms):0
Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"14"), Diff(INSERT,"0¶Test execution time (ms):0¶Test execution time (ms):0¶Test execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="632" _type="PauseCommand" date="Mon Nov 29 14:12:23 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="1134509">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1023]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="631" _type="ExceptionCommand" date="Mon Nov 29 14:12:23 EST 2021" starttimestamp="1638212009072" timestamp="1134509" type="Exception">
    <exceptionString><![CDATA[LispIsListChecker did not pass completely:Expected strings:Tactual string NIL%0.0

Test execution time (ms):0
LispIsListChecker2 did not pass completely:Expected strings:Tactual string NIL%0.0

Test execution time (ms):1
Test execution time (ms):0
Test execution time (ms):0
java.lang.NullPointerException
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.propertyChange(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:48)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.firePropertyChange(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:102)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:93)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:226)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:106)
	at jdk.internal.reflect.GeneratedMethodAccessor26.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:301)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="633" _type="ConsoleOutput" date="Mon Nov 29 14:12:24 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="1135461" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
Test execution time (ms):0
Test execution time (ms):0
Test execution time (ms):0
Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):0¶Test execution time (ms):0¶Test execution time (ms):0¶Test execution time (ms):0¶"), Diff(INSERT,"Test execution time (ms):1¶")]]]></diff>
  </Command>
  <Command __id="635" _type="PauseCommand" date="Mon Nov 29 14:12:25 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="1136472">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1011]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="634" _type="ConsoleOutput" date="Mon Nov 29 14:12:25 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="1136472" type="ConsoleOutput">
    <outputString><![CDATA[A6CommonPropertiesInherited did not pass completely:See console trace about lines failing  this check%0.0

Test execution time (ms):5
A6CommonSignaturesAreInherited did not pass completely:See console trace about lines failing  this check%0.7251798561151078

Test execution time (ms):5
A6Encapsulation did not pass completely:%0.96

Test execution time (ms):3
A6NoHiddenFields did not pass completely:%0.96

Test execution time (ms):3
A6NonPublicAccessModifiersMatched did not pass completely:%0.96

Test execution time (ms):5
A6PublicMethodsOverride did not pass completely:See console trace about lines failing  this check%0.7418181818181818

Test execution time (ms):5
A6NoStarImports did not pass completely:%0.96

Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):0¶Test execution time (ms):0¶Test execution time (ms):0¶Test execution time (ms):0¶Test execution time (ms):1"), Diff(INSERT,"A6CommonPropertiesInherited did not pass completely:See console trace about lines failing  this check%0.0¶¶Test execution time (ms):5¶A6CommonSignaturesAreInherited did not pass completely:See console trace about lines failing  this check%0.7251798561151078¶¶Test execution time (ms):5¶A6Encapsulation did not pass completely:%0.96¶¶Test execution time (ms):3¶A6NoHiddenFields did not pass completely:%0.96¶¶Test execution time (ms):3¶A6NonPublicAccessModifiersMatched did not pass completely:%0.96¶¶Test execution time (ms):5¶A6PublicMethodsOverride did not pass completely:See console trace about lines failing  this check%0.7418181818181818¶¶Test execution time (ms):5¶A6NoStarImports did not pass completely:%0.96¶¶Test execution time (ms):2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="636" _type="ConsoleOutput" date="Mon Nov 29 14:12:25 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="1136527" type="ConsoleOutput">
    <outputString><![CDATA[A6PackageDeclarations did not pass completely:%0.96

Test execution time (ms):4
F21A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0

Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"A6"), Diff(DELETE,"CommonPropertiesInherited did not pass completely:See console trace about lines failing  this check%0.0¶¶Test execution time (ms):5¶A6CommonSignaturesAreInherited did not pass completely:See console trace about lines failing  this check%0.7251798561151078"), Diff(INSERT,"PackageDeclarations did not pass completely:%0.96"), Diff(EQUAL,"¶¶Test execution time (ms):"), Diff(DELETE,"5"), Diff(INSERT,"4"), Diff(EQUAL,"¶"), Diff(DELETE,"A6Encapsulation did not pass completely:%0.96¶¶Test execution time (ms):3¶A6NoHiddenFields did not pass completely:%0.96¶¶Test execution time (ms):3¶A6NonPublicAccessModifiersMatched did not pass completely:%0.96¶¶Test execution time (ms):5¶A6PublicMethodsOverride did not pass completely:See console trace about lines failing  this check%0.7418181818181818¶¶Test execution time (ms):5¶A6NoStarImports did not pass completely:"), Diff(INSERT,"F21A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output"), Diff(EQUAL,"%0."), Diff(DELETE,"96"), Diff(INSERT,"0"), Diff(EQUAL,"¶¶Test execution time (ms):"), Diff(DELETE,"2"), Diff(INSERT,"1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="638" _type="PauseCommand" date="Mon Nov 29 14:12:49 EST 2021" range="20s-30s" starttimestamp="1638212009072" timestamp="1160278">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[23751]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="637" _type="ShellCommand" date="Mon Nov 29 14:12:49 EST 2021" starttimestamp="1638212009072" timestamp="1160278" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="640" _type="PauseCommand" date="Mon Nov 29 14:13:27 EST 2021" range="30s-1m" starttimestamp="1638212009072" timestamp="1198077">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[37799]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="639" _type="ShellCommand" date="Mon Nov 29 14:13:27 EST 2021" starttimestamp="1638212009072" timestamp="1198077" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="641" _type="ShellCommand" date="Mon Nov 29 14:13:27 EST 2021" starttimestamp="1638212009072" timestamp="1198513" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="643" _type="PauseCommand" date="Mon Nov 29 14:13:28 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="1199762">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1249]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="642" _type="ShellCommand" date="Mon Nov 29 14:13:28 EST 2021" starttimestamp="1638212009072" timestamp="1199762" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="645" _type="PauseCommand" date="Mon Nov 29 14:13:29 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="1200789">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1027]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="644" _type="ShellCommand" date="Mon Nov 29 14:13:29 EST 2021" starttimestamp="1638212009072" timestamp="1200789" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="650" _type="PauseCommand" date="Mon Nov 29 14:14:13 EST 2021" range="10s-20s" starttimestamp="1638212009072" timestamp="1244711">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[10764]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="649" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:14:13 EST 2021" starttimestamp="1638212009072" timestamp="1244711" />
  <Command __id="651" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:14:13 EST 2021" starttimestamp="1638212009072" timestamp="1244716" />
  <Command __id="652" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:14:13 EST 2021" starttimestamp="1638212009072" timestamp="1244716" />
  <Command __id="653" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:14:13 EST 2021" starttimestamp="1638212009072" timestamp="1244717" />
  <Command __id="654" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:14:13 EST 2021" starttimestamp="1638212009072" timestamp="1244717" />
  <Command __id="655" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:14:13 EST 2021" starttimestamp="1638212009072" timestamp="1244717" />
  <Command __id="656" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:14:13 EST 2021" starttimestamp="1638212009072" timestamp="1244718" />
  <Command __id="657" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:14:13 EST 2021" starttimestamp="1638212009072" timestamp="1244720" />
  <Command __id="658" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:14:13 EST 2021" starttimestamp="1638212009072" timestamp="1244720" />
  <Command __id="659" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:14:13 EST 2021" starttimestamp="1638212009072" timestamp="1244721" />
  <Command __id="661" _type="PauseCommand" date="Mon Nov 29 14:14:30 EST 2021" range="10s-20s" starttimestamp="1638212009072" timestamp="1261332">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[16611]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="662" _type="MoveCaretCommand" caretOffset="0" date="Mon Nov 29 14:14:30 EST 2021" docOffset="0" starttimestamp="1638212009072" timestamp="1261397" />
  <Command __id="664" _type="PauseCommand" date="Mon Nov 29 14:14:47 EST 2021" range="10s-20s" starttimestamp="1638212009072" timestamp="1278213">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[16816]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="663" _type="MoveCaretCommand" caretOffset="231" date="Mon Nov 29 14:14:47 EST 2021" docOffset="416" starttimestamp="1638212009072" timestamp="1278213" />
  <Command __id="666" _type="PauseCommand" date="Mon Nov 29 14:14:48 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="1279381">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1168]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="667" _type="InsertStringCommand" date="Mon Nov 29 14:14:48 EST 2021" starttimestamp="1638212009072" timestamp="1279383" timestamp2="1279383">
    <data><![CDATA[	]]></data>
  </Command>
  <Command __id="669" _type="PauseCommand" date="Mon Nov 29 14:14:58 EST 2021" range="5s-10s" starttimestamp="1638212009072" timestamp="1289179">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[9796]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="668" _type="MoveCaretCommand" caretOffset="239" date="Mon Nov 29 14:14:58 EST 2021" docOffset="424" starttimestamp="1638212009072" timestamp="1289179" />
  <Command __id="712" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:15:03 EST 2021" starttimestamp="1638212009072" timestamp="1294655" />
  <Command __id="713" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:15:03 EST 2021" starttimestamp="1638212009072" timestamp="1294656" />
  <Command __id="714" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:15:03 EST 2021" starttimestamp="1638212009072" timestamp="1294657" />
  <Command __id="715" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:15:03 EST 2021" starttimestamp="1638212009072" timestamp="1294657" />
  <Command __id="716" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:15:03 EST 2021" starttimestamp="1638212009072" timestamp="1294659" />
  <Command __id="717" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:15:03 EST 2021" starttimestamp="1638212009072" timestamp="1294659" />
  <Command __id="718" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:15:03 EST 2021" starttimestamp="1638212009072" timestamp="1294670" />
  <Command __id="720" _type="PauseCommand" date="Mon Nov 29 14:15:24 EST 2021" range="20s-30s" starttimestamp="1638212009072" timestamp="1315421">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[20751]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="721" _type="MoveCaretCommand" caretOffset="570" date="Mon Nov 29 14:15:24 EST 2021" docOffset="904" starttimestamp="1638212009072" timestamp="1315506" />
  <Command __id="723" _type="PauseCommand" date="Mon Nov 29 14:15:29 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="1320121">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4615]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="722" _type="SelectTextCommand" caretOffset="51" date="Mon Nov 29 14:15:29 EST 2021" end="51" start="49" starttimestamp="1638212009072" timestamp="1320121" />
  <Command __id="724" _type="SelectTextCommand" caretOffset="51" date="Mon Nov 29 14:15:29 EST 2021" end="51" start="49" starttimestamp="1638212009072" timestamp="1320121" />
  <Command __id="726" _type="PauseCommand" date="Mon Nov 29 14:15:31 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="1322094">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1973]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="725" _type="SelectTextCommand" caretOffset="23" date="Mon Nov 29 14:15:31 EST 2021" end="47" start="23" starttimestamp="1638212009072" timestamp="1322094" />
  <Command __id="727" _type="SelectTextCommand" caretOffset="23" date="Mon Nov 29 14:15:31 EST 2021" end="47" start="23" starttimestamp="1638212009072" timestamp="1322094" />
  <Command __id="729" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 29 14:15:31 EST 2021" starttimestamp="1638212009072" timestamp="1322397" />
  <Command __id="730" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 29 14:15:31 EST 2021" starttimestamp="1638212009072" timestamp="1322398" />
  <Command __id="731" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:15:31 EST 2021" starttimestamp="1638212009072" timestamp="1322539" />
  <Command __id="732" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:15:31 EST 2021" starttimestamp="1638212009072" timestamp="1322542" />
  <Command __id="733" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:15:31 EST 2021" starttimestamp="1638212009072" timestamp="1322542" />
  <Command __id="734" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:15:31 EST 2021" starttimestamp="1638212009072" timestamp="1322543" />
  <Command __id="735" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:15:31 EST 2021" starttimestamp="1638212009072" timestamp="1322543" />
  <Command __id="736" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:15:31 EST 2021" starttimestamp="1638212009072" timestamp="1322544" />
  <Command __id="737" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:15:31 EST 2021" starttimestamp="1638212009072" timestamp="1322544" />
  <Command __id="738" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:15:31 EST 2021" starttimestamp="1638212009072" timestamp="1322546" />
  <Command __id="740" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 29 14:15:31 EST 2021" starttimestamp="1638212009072" timestamp="1322762" />
  <Command __id="741" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 29 14:15:31 EST 2021" starttimestamp="1638212009072" timestamp="1322762" />
  <Command __id="743" _type="PauseCommand" date="Mon Nov 29 14:15:33 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="1324101">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1339]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="742" _type="MoveCaretCommand" caretOffset="23" date="Mon Nov 29 14:15:33 EST 2021" docOffset="23" starttimestamp="1638212009072" timestamp="1324101" />
  <Command __id="744" _type="MoveCaretCommand" caretOffset="23" date="Mon Nov 29 14:15:33 EST 2021" docOffset="23" starttimestamp="1638212009072" timestamp="1324101" />
  <Command __id="746" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 29 14:15:33 EST 2021" starttimestamp="1638212009072" timestamp="1324404" />
  <Command __id="747" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 29 14:15:33 EST 2021" starttimestamp="1638212009072" timestamp="1324404" />
  <Command __id="749" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 29 14:15:33 EST 2021" starttimestamp="1638212009072" timestamp="1324546" />
  <Command __id="750" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 29 14:15:33 EST 2021" starttimestamp="1638212009072" timestamp="1324546" />
  <Command __id="752" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 29 14:15:34 EST 2021" starttimestamp="1638212009072" timestamp="1325022" />
  <Command __id="753" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 29 14:15:34 EST 2021" starttimestamp="1638212009072" timestamp="1325022" />
  <Command __id="755" _type="PauseCommand" date="Mon Nov 29 14:15:35 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="1326219">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1197]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="754" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 29 14:15:35 EST 2021" starttimestamp="1638212009072" timestamp="1326219" />
  <Command __id="756" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:15:35 EST 2021" starttimestamp="1638212009072" timestamp="1326314" />
  <Command __id="757" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:15:35 EST 2021" starttimestamp="1638212009072" timestamp="1326317" />
  <Command __id="758" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:15:35 EST 2021" starttimestamp="1638212009072" timestamp="1326317" />
  <Command __id="759" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:15:35 EST 2021" starttimestamp="1638212009072" timestamp="1326318" />
  <Command __id="760" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:15:35 EST 2021" starttimestamp="1638212009072" timestamp="1326318" />
  <Command __id="761" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:15:35 EST 2021" starttimestamp="1638212009072" timestamp="1326319" />
  <Command __id="762" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:15:35 EST 2021" starttimestamp="1638212009072" timestamp="1326319" />
  <Command __id="763" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:15:35 EST 2021" starttimestamp="1638212009072" timestamp="1326321" />
  <Command __id="764" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:15:35 EST 2021" starttimestamp="1638212009072" timestamp="1326321" />
  <Command __id="765" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:15:35 EST 2021" starttimestamp="1638212009072" timestamp="1326332" />
  <Command __id="767" _type="PauseCommand" date="Mon Nov 29 14:15:58 EST 2021" range="20s-30s" starttimestamp="1638212009072" timestamp="1348939">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[22607]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="766" _type="MoveCaretCommand" caretOffset="972" date="Mon Nov 29 14:15:58 EST 2021" docOffset="972" starttimestamp="1638212009072" timestamp="1348939" />
  <Command __id="768" _type="MoveCaretCommand" caretOffset="972" date="Mon Nov 29 14:15:58 EST 2021" docOffset="972" starttimestamp="1638212009072" timestamp="1348940" />
  <Command __id="770" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 29 14:15:58 EST 2021" starttimestamp="1638212009072" timestamp="1349677" />
  <Command __id="771" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 29 14:15:58 EST 2021" starttimestamp="1638212009072" timestamp="1349677" />
  <Command __id="773" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 29 14:15:58 EST 2021" starttimestamp="1638212009072" timestamp="1349871" />
  <Command __id="774" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 29 14:15:58 EST 2021" starttimestamp="1638212009072" timestamp="1349871" />
  <Command __id="776" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 29 14:15:59 EST 2021" starttimestamp="1638212009072" timestamp="1350013" />
  <Command __id="777" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 29 14:15:59 EST 2021" starttimestamp="1638212009072" timestamp="1350013" />
  <Command __id="779" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 29 14:15:59 EST 2021" starttimestamp="1638212009072" timestamp="1350179" />
  <Command __id="780" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 29 14:15:59 EST 2021" starttimestamp="1638212009072" timestamp="1350179" />
  <Command __id="782" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 29 14:15:59 EST 2021" starttimestamp="1638212009072" timestamp="1350354" />
  <Command __id="783" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 29 14:15:59 EST 2021" starttimestamp="1638212009072" timestamp="1350354" />
  <Command __id="785" _type="InsertStringCommand" date="Mon Nov 29 14:16:00 EST 2021" starttimestamp="1638212009072" timestamp="1351124" timestamp2="1351124">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="786" _type="InsertStringCommand" date="Mon Nov 29 14:16:00 EST 2021" starttimestamp="1638212009072" timestamp="1351124" timestamp2="1351124">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="788" _type="InsertStringCommand" date="Mon Nov 29 14:16:00 EST 2021" starttimestamp="1638212009072" timestamp="1351247" timestamp2="1351247">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="789" _type="InsertStringCommand" date="Mon Nov 29 14:16:00 EST 2021" starttimestamp="1638212009072" timestamp="1351247" timestamp2="1351247">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="791" _type="InsertStringCommand" date="Mon Nov 29 14:16:00 EST 2021" starttimestamp="1638212009072" timestamp="1351360" timestamp2="1351360">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="792" _type="InsertStringCommand" date="Mon Nov 29 14:16:00 EST 2021" starttimestamp="1638212009072" timestamp="1351360" timestamp2="1351360">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="794" _type="InsertStringCommand" date="Mon Nov 29 14:16:00 EST 2021" starttimestamp="1638212009072" timestamp="1351470" timestamp2="1351470">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="795" _type="InsertStringCommand" date="Mon Nov 29 14:16:00 EST 2021" starttimestamp="1638212009072" timestamp="1351470" timestamp2="1351470">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="797" _type="InsertStringCommand" date="Mon Nov 29 14:16:00 EST 2021" starttimestamp="1638212009072" timestamp="1351709" timestamp2="1351709">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="798" _type="InsertStringCommand" date="Mon Nov 29 14:16:00 EST 2021" starttimestamp="1638212009072" timestamp="1351709" timestamp2="1351709">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="800" _type="InsertStringCommand" date="Mon Nov 29 14:16:01 EST 2021" starttimestamp="1638212009072" timestamp="1352063" timestamp2="1352063">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="801" _type="InsertStringCommand" date="Mon Nov 29 14:16:01 EST 2021" starttimestamp="1638212009072" timestamp="1352063" timestamp2="1352063">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="803" _type="InsertStringCommand" date="Mon Nov 29 14:16:01 EST 2021" starttimestamp="1638212009072" timestamp="1352175" timestamp2="1352175">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="804" _type="InsertStringCommand" date="Mon Nov 29 14:16:01 EST 2021" starttimestamp="1638212009072" timestamp="1352175" timestamp2="1352175">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="806" _type="InsertStringCommand" date="Mon Nov 29 14:16:01 EST 2021" starttimestamp="1638212009072" timestamp="1352272" timestamp2="1352272">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="807" _type="InsertStringCommand" date="Mon Nov 29 14:16:01 EST 2021" starttimestamp="1638212009072" timestamp="1352272" timestamp2="1352272">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="809" _type="PauseCommand" date="Mon Nov 29 14:16:03 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="1354880">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2608]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="808" _type="MoveCaretCommand" caretOffset="1494" date="Mon Nov 29 14:16:03 EST 2021" docOffset="1494" starttimestamp="1638212009072" timestamp="1354880" />
  <Command __id="810" _type="MoveCaretCommand" caretOffset="1494" date="Mon Nov 29 14:16:03 EST 2021" docOffset="1494" starttimestamp="1638212009072" timestamp="1354880" />
  <Command __id="812" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 29 14:16:04 EST 2021" starttimestamp="1638212009072" timestamp="1355195" />
  <Command __id="813" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 29 14:16:04 EST 2021" starttimestamp="1638212009072" timestamp="1355195" />
  <Command __id="815" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 29 14:16:04 EST 2021" starttimestamp="1638212009072" timestamp="1355367" />
  <Command __id="816" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 29 14:16:04 EST 2021" starttimestamp="1638212009072" timestamp="1355367" />
  <Command __id="818" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 29 14:16:04 EST 2021" starttimestamp="1638212009072" timestamp="1355520" />
  <Command __id="819" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 29 14:16:04 EST 2021" starttimestamp="1638212009072" timestamp="1355520" />
  <Command __id="821" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 29 14:16:04 EST 2021" starttimestamp="1638212009072" timestamp="1355676" />
  <Command __id="822" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 29 14:16:04 EST 2021" starttimestamp="1638212009072" timestamp="1355676" />
  <Command __id="824" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 29 14:16:04 EST 2021" starttimestamp="1638212009072" timestamp="1355857" />
  <Command __id="825" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 29 14:16:04 EST 2021" starttimestamp="1638212009072" timestamp="1355857" />
  <Command __id="827" _type="InsertStringCommand" date="Mon Nov 29 14:16:05 EST 2021" starttimestamp="1638212009072" timestamp="1355952" timestamp2="1355952">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="828" _type="InsertStringCommand" date="Mon Nov 29 14:16:05 EST 2021" starttimestamp="1638212009072" timestamp="1355952" timestamp2="1355952">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="830" _type="InsertStringCommand" date="Mon Nov 29 14:16:05 EST 2021" starttimestamp="1638212009072" timestamp="1356094" timestamp2="1356094">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="831" _type="InsertStringCommand" date="Mon Nov 29 14:16:05 EST 2021" starttimestamp="1638212009072" timestamp="1356094" timestamp2="1356094">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="833" _type="InsertStringCommand" date="Mon Nov 29 14:16:05 EST 2021" starttimestamp="1638212009072" timestamp="1356225" timestamp2="1356225">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="834" _type="InsertStringCommand" date="Mon Nov 29 14:16:05 EST 2021" starttimestamp="1638212009072" timestamp="1356225" timestamp2="1356225">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="836" _type="InsertStringCommand" date="Mon Nov 29 14:16:05 EST 2021" starttimestamp="1638212009072" timestamp="1356393" timestamp2="1356393">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="837" _type="InsertStringCommand" date="Mon Nov 29 14:16:05 EST 2021" starttimestamp="1638212009072" timestamp="1356393" timestamp2="1356393">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="839" _type="InsertStringCommand" date="Mon Nov 29 14:16:06 EST 2021" starttimestamp="1638212009072" timestamp="1357230" timestamp2="1357230">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="840" _type="InsertStringCommand" date="Mon Nov 29 14:16:06 EST 2021" starttimestamp="1638212009072" timestamp="1357230" timestamp2="1357230">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="842" _type="InsertStringCommand" date="Mon Nov 29 14:16:06 EST 2021" starttimestamp="1638212009072" timestamp="1357492" timestamp2="1357492">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="843" _type="InsertStringCommand" date="Mon Nov 29 14:16:06 EST 2021" starttimestamp="1638212009072" timestamp="1357492" timestamp2="1357492">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="845" _type="InsertStringCommand" date="Mon Nov 29 14:16:06 EST 2021" starttimestamp="1638212009072" timestamp="1357615" timestamp2="1357615">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="846" _type="InsertStringCommand" date="Mon Nov 29 14:16:06 EST 2021" starttimestamp="1638212009072" timestamp="1357615" timestamp2="1357615">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="848" _type="InsertStringCommand" date="Mon Nov 29 14:16:06 EST 2021" starttimestamp="1638212009072" timestamp="1357738" timestamp2="1357738">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="849" _type="InsertStringCommand" date="Mon Nov 29 14:16:06 EST 2021" starttimestamp="1638212009072" timestamp="1357738" timestamp2="1357738">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="863" _type="PauseCommand" date="Mon Nov 29 14:16:17 EST 2021" range="5s-10s" starttimestamp="1638212009072" timestamp="1368826">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[9482]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="862" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:16:17 EST 2021" starttimestamp="1638212009072" timestamp="1368826" />
  <Command __id="864" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:16:17 EST 2021" starttimestamp="1638212009072" timestamp="1368830" />
  <Command __id="865" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:16:17 EST 2021" starttimestamp="1638212009072" timestamp="1368830" />
  <Command __id="866" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:16:17 EST 2021" starttimestamp="1638212009072" timestamp="1368831" />
  <Command __id="867" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:16:17 EST 2021" starttimestamp="1638212009072" timestamp="1368831" />
  <Command __id="868" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:16:17 EST 2021" starttimestamp="1638212009072" timestamp="1368831" />
  <Command __id="869" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:16:17 EST 2021" starttimestamp="1638212009072" timestamp="1368831" />
  <Command __id="870" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:16:17 EST 2021" starttimestamp="1638212009072" timestamp="1368833" />
  <Command __id="872" _type="PauseCommand" date="Mon Nov 29 14:16:19 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="1370018">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1185]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="873" _type="MoveCaretCommand" caretOffset="769" date="Mon Nov 29 14:16:19 EST 2021" docOffset="1096" starttimestamp="1638212009072" timestamp="1370100" />
  <Command __id="911" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:16:27 EST 2021" starttimestamp="1638212009072" timestamp="1378545" />
  <Command __id="912" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:16:27 EST 2021" starttimestamp="1638212009072" timestamp="1378572" />
  <Command __id="950" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:16:33 EST 2021" starttimestamp="1638212009072" timestamp="1384089" />
  <Command __id="951" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:16:33 EST 2021" starttimestamp="1638212009072" timestamp="1384115" />
  <Command __id="953" _type="PauseCommand" date="Mon Nov 29 14:16:40 EST 2021" range="5s-10s" starttimestamp="1638212009072" timestamp="1391438">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[7322]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="954" _type="MoveCaretCommand" caretOffset="198" date="Mon Nov 29 14:16:40 EST 2021" docOffset="479" starttimestamp="1638212009072" timestamp="1391521" />
  <Command __id="987" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:16:46 EST 2021" starttimestamp="1638212009072" timestamp="1397691" />
  <Command __id="988" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:16:46 EST 2021" starttimestamp="1638212009072" timestamp="1397691" />
  <Command __id="989" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:16:46 EST 2021" starttimestamp="1638212009072" timestamp="1397694" />
  <Command __id="990" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:16:46 EST 2021" starttimestamp="1638212009072" timestamp="1397694" />
  <Command __id="991" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:16:46 EST 2021" starttimestamp="1638212009072" timestamp="1397716" />
  <Command __id="993" _type="PauseCommand" date="Mon Nov 29 14:16:50 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="1401209">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3493]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="994" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:16:50 EST 2021" starttimestamp="1638212009072" timestamp="1401274" />
  <Command __id="995" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:16:50 EST 2021" starttimestamp="1638212009072" timestamp="1401278" />
  <Command __id="996" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:16:50 EST 2021" starttimestamp="1638212009072" timestamp="1401278" />
  <Command __id="997" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:16:50 EST 2021" starttimestamp="1638212009072" timestamp="1401279" />
  <Command __id="998" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:16:50 EST 2021" starttimestamp="1638212009072" timestamp="1401279" />
  <Command __id="999" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:16:50 EST 2021" starttimestamp="1638212009072" timestamp="1401279" />
  <Command __id="1000" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:16:50 EST 2021" starttimestamp="1638212009072" timestamp="1401279" />
  <Command __id="1001" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:16:50 EST 2021" starttimestamp="1638212009072" timestamp="1401282" />
  <Command __id="1002" _type="MoveCaretCommand" caretOffset="185" date="Mon Nov 29 14:16:50 EST 2021" docOffset="479" starttimestamp="1638212009072" timestamp="1401286" />
  <DocumentChange __id="587" _type="Delete" date="Mon Nov 29 14:12:04 EST 2021" docASTNodeCount="154" docActiveCodeLength="934" docExpressionCount="118" docLength="934" endLine="16" length="11" offset="590" startLine="16" starttimestamp="1638212009072" timestamp="1115562">
    <text><![CDATA[.eval(arg1)]]></text>
  </DocumentChange>
  <Command __id="646" _type="DiffBasedFileOpenCommand" date="Mon Nov 29 14:14:02 EST 2021" docASTNodeCount="297" docActiveCodeLength="1971" docExpressionCount="209" docLength="2074" projectName="a5" starttimestamp="1638212009072" timestamp="1233825">
    <filePath><![CDATA[C:\Users\rarael\OneDrive\Documents\COMPSCIENCE\COMP 524\a5\src\evaluators\LambdaSExpressionEvaluator.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package evaluators;¶¶import java.util.Optional;¶¶import main.lisp.evaluator.BasicExpressionEvaluator;¶import main.lisp.evaluator.BuiltinOperationManagerSingleton;¶import main.lisp.evaluator.Environment;¶import main.lisp.evaluator.Evaluator;¶import main.lisp.evaluator.function.Lambda;¶import main.lisp.parser.terms.IdentifierAtom;¶import main.lisp.parser.terms.SExpression;¶¶public class LambdaSExpressionEvaluator extends BasicExpressionEvaluator {¶	@Override¶	public SExpression eval(SExpression expr, Environment environment) {¶		// evaluates lambda first¶		if (!expr.getHead().isAtom()) {¶			SExpression eval = basicEvaluator(expr.getHead(), environment);¶			if (eval instanceof Lambda) {¶				Environment childEnvironment = environment.newChild();¶				return evaluateLambda((Lambda) eval, childEnvironment, environment, expr.getTail());¶			}¶		}¶			// when it is not a lambda¶			return basicEvaluator(expr, environment);¶		}¶	¶	// produces your lambda evaluation¶	public SExpression evaluateLambda(Lambda lambda, Environment childEnvironment, Environment environment, SExpression current) {¶		IdentifierAtom[] argNames = lambda.getArgumentNames();¶		for(int i = 0; i < argNames.length; i++) {¶			if (current.isAtom()) {¶				childEnvironment.assign(argNames[i], current);¶			} else {¶				childEnvironment.assign(argNames[i], current.getHead().eval(environment));¶				current = current.getTail();¶			}¶		}¶	return lambda.eval(childEnvironment);¶	}¶	¶	// basic evaluator¶	public SExpression basicEvaluator(SExpression expr, Environment environment) {¶		if (expr.getHead() instanceof IdentifierAtom) {¶			String operator = ((IdentifierAtom)expr.getHead()).getValue();¶			Evaluator eval = BuiltinOperationManagerSingleton.get().getEvaluator(operator);¶			if (eval == null) {¶				throw new IllegalStateException("No evaluator registered for operator '" + operator + "'");¶			}¶			return eval.eval(expr, environment);¶		} else {¶			throw new IllegalStateException("Expression does not start with an operator");¶		}¶	}¶}¶¶")]]]></diff>
  </Command>
  <Command __id="660" _type="DiffBasedFileOpenCommand" date="Mon Nov 29 14:14:30 EST 2021" docASTNodeCount="121" docActiveCodeLength="673" docExpressionCount="88" docLength="745" projectName="a5" starttimestamp="1638212009072" timestamp="1261332">
    <filePath><![CDATA[C:\Users\rarael\OneDrive\Documents\COMPSCIENCE\COMP 524\a5\src\a5\VariableEval.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package a5;¶¶import main.lisp.evaluator.Environment;¶import main.lisp.parser.terms.IdentifierAtom;¶import main.lisp.parser.terms.SExpression;¶import main.lisp.scanner.tokens.Token;¶import main.lisp.parser.terms.IdentifierAtomFactory;¶¶public class VariableEval extends IdentifierAtom {¶¶	public VariableEval(String string) {¶		super(string);¶	}¶	public VariableEval(Token token) {¶		super(token);¶	}¶¶	public SExpression eval(Environment arg0) {¶		IdentifierAtomFactory.setClass(this.getClass());¶	//	SExpression expr = arg0.lookup(this).get();¶	//	return expr.eval(arg0);¶		if (arg0.lookup(this).isEmpty() && arg0.getParent() != null) {¶			return arg0.lookup(this).get();¶		}¶		return arg0.lookup(this).get();¶	}¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="665" _type="Insert" date="Mon Nov 29 14:14:48 EST 2021" docASTNodeCount="121" docActiveCodeLength="674" docExpressionCount="88" docLength="746" length="1" offset="416" starttimestamp="1638212009072" timestamp="1279381">
    <text><![CDATA[	]]></text>
  </DocumentChange>
  <DocumentChange __id="672" _type="Insert" date="Mon Nov 29 14:14:59 EST 2021" docASTNodeCount="123" docActiveCodeLength="683" docExpressionCount="90" docLength="755" length="9" offset="417" repeat="7" starttimestamp="1638212009072" timestamp="1290847" timestamp2="1292530">
    <text><![CDATA[
	@OVerr]]></text>
  </DocumentChange>
  <DocumentChange __id="686" _type="Delete" date="Mon Nov 29 14:15:01 EST 2021" docASTNodeCount="123" docActiveCodeLength="679" docExpressionCount="90" docLength="751" endLine="17" length="4" offset="422" repeat="4" startLine="17" starttimestamp="1638212009072" timestamp="1292734" timestamp2="1293204">
    <text><![CDATA[Verr]]></text>
  </DocumentChange>
  <DocumentChange __id="694" _type="Insert" date="Mon Nov 29 14:15:02 EST 2021" docASTNodeCount="123" docActiveCodeLength="686" docExpressionCount="90" docLength="758" length="7" offset="422" repeat="7" starttimestamp="1638212009072" timestamp="1293430" timestamp2="1294134">
    <text><![CDATA[verride]]></text>
  </DocumentChange>
  <Command __id="719" _type="DiffBasedFileOpenCommand" date="Mon Nov 29 14:15:24 EST 2021" docASTNodeCount="297" docActiveCodeLength="1971" docExpressionCount="209" docLength="2074" projectName="a5" starttimestamp="1638212009072" timestamp="1315421">
    <filePath><![CDATA[C:\Users\rarael\OneDrive\Documents\COMPSCIENCE\COMP 524\a5\src\evaluators\LambdaSExpressionEvaluator.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package evaluators;¶¶import java.util.Optional;¶¶import main.lisp.evaluator.BasicExpressionEvaluator;¶import main.lisp.evaluator.BuiltinOperationManagerSingleton;¶import main.lisp.evaluator.Environment;¶import main.lisp.evaluator.Evaluator;¶import main.lisp.evaluator.function.Lambda;¶import main.lisp.parser.terms.IdentifierAtom;¶import main.lisp.parser.terms.SExpression;¶¶public class LambdaSExpressionEvaluator extends BasicExpressionEvaluator {¶	@Override¶	public SExpression eval(SExpression expr, Environment environment) {¶		// evaluates lambda first¶		if (!expr.getHead().isAtom()) {¶			SExpression eval = basicEvaluator(expr.getHead(), environment);¶			if (eval instanceof Lambda) {¶				Environment childEnvironment = environment.newChild();¶				return evaluateLambda((Lambda) eval, childEnvironment, environment, expr.getTail());¶			}¶		}¶			// when it is not a lambda¶			return basicEvaluator(expr, environment);¶		}¶	¶	// produces your lambda evaluation¶	public SExpression evaluateLambda(Lambda lambda, Environment childEnvironment, Environment environment, SExpression current) {¶		IdentifierAtom[] argNames = lambda.getArgumentNames();¶		for(int i = 0; i < argNames.length; i++) {¶			if (current.isAtom()) {¶				childEnvironment.assign(argNames[i], current);¶			} else {¶				childEnvironment.assign(argNames[i], current.getHead().eval(environment));¶				current = current.getTail();¶			}¶		}¶	return lambda.eval(childEnvironment);¶	}¶	¶	// basic evaluator¶	public SExpression basicEvaluator(SExpression expr, Environment environment) {¶		if (expr.getHead() instanceof IdentifierAtom) {¶			String operator = ((IdentifierAtom)expr.getHead()).getValue();¶			Evaluator eval = BuiltinOperationManagerSingleton.get().getEvaluator(operator);¶			if (eval == null) {¶				throw new IllegalStateException("No evaluator registered for operator '" + operator + "'");¶			}¶			return eval.eval(expr, environment);¶		} else {¶			throw new IllegalStateException("Expression does not start with an operator");¶		}¶	}¶}¶¶")]]]></diff>
  </Command>
  <DocumentChange __id="728" _type="Delete" date="Mon Nov 29 14:15:31 EST 2021" docASTNodeCount="291" docActiveCodeLength="1945" docExpressionCount="204" docLength="2048" endLine="2" length="26" offset="21" repeat="2" startLine="1" starttimestamp="1638212009072" timestamp="1322393" timestamp2="1322754">
    <text><![CDATA[
import java.util.Optiona]]></text>
  </DocumentChange>
  <DocumentChange __id="745" _type="Delete" date="Mon Nov 29 14:15:33 EST 2021" docASTNodeCount="291" docActiveCodeLength="1941" docExpressionCount="204" docLength="2044" endLine="1" length="4" offset="19" repeat="3" startLine="0" starttimestamp="1638212009072" timestamp="1324402" timestamp2="1325014">
    <text><![CDATA[
l;]]></text>
  </DocumentChange>
  <DocumentChange __id="769" _type="Delete" date="Mon Nov 29 14:15:58 EST 2021" docASTNodeCount="293" docActiveCodeLength="1936" docExpressionCount="205" docLength="2039" endLine="26" length="5" offset="967" repeat="5" startLine="26" starttimestamp="1638212009072" timestamp="1349672" timestamp2="1350352">
    <text><![CDATA[ublic]]></text>
  </DocumentChange>
  <DocumentChange __id="784" _type="Insert" date="Mon Nov 29 14:16:00 EST 2021" docASTNodeCount="291" docActiveCodeLength="1944" docExpressionCount="204" docLength="2047" length="8" offset="967" repeat="8" starttimestamp="1638212009072" timestamp="1351120" timestamp2="1352268">
    <text><![CDATA[rotected]]></text>
  </DocumentChange>
  <DocumentChange __id="811" _type="Delete" date="Mon Nov 29 14:16:04 EST 2021" docASTNodeCount="293" docActiveCodeLength="1939" docExpressionCount="205" docLength="2042" endLine="40" length="5" offset="1489" repeat="5" startLine="40" starttimestamp="1638212009072" timestamp="1355191" timestamp2="1355855">
    <text><![CDATA[ublic]]></text>
  </DocumentChange>
  <DocumentChange __id="826" _type="Insert" date="Mon Nov 29 14:16:05 EST 2021" docASTNodeCount="291" docActiveCodeLength="1947" docExpressionCount="204" docLength="2050" length="8" offset="1489" repeat="8" starttimestamp="1638212009072" timestamp="1355949" timestamp2="1357734">
    <text><![CDATA[rotected]]></text>
  </DocumentChange>
  <Command __id="871" _type="DiffBasedFileOpenCommand" date="Mon Nov 29 14:16:19 EST 2021" docASTNodeCount="441" docActiveCodeLength="2810" docExpressionCount="319" docLength="2810" projectName="a5" starttimestamp="1638212009072" timestamp="1370018">
    <filePath><![CDATA[C:\Users\rarael\OneDrive\Documents\COMPSCIENCE\COMP 524\a5\src\functional\FuncallEvaluator.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package functional;

import java.util.Optional;

import main.lisp.evaluator.BuiltinOperationManagerSingleton;
import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.evaluator.function.Function;
import main.lisp.evaluator.function.Lambda;
import main.lisp.parser.terms.IdentifierAtom;
import main.lisp.parser.terms.SExpression;

public class FuncallEvaluator implements Evaluator {

	@Override
	public SExpression eval(SExpression arg0, Environment arg1) {
		SExpression current = arg0.getTail();
		
		SExpression lambdaOrFunction = null;
		if (!current.getHead().isAtom()) {
			lambdaOrFunction = current.getHead().eval(arg1);
		}
		if (lambdaOrFunction instanceof Lambda) {
			Environment childEnvironment = arg1.newChild();
			return evaluateLambda((Lambda) lambdaOrFunction, childEnvironment, arg1, current.getTail());
		} else if(lambdaOrFunction instanceof Function) {
			return evaluateLambda (((Function) lambdaOrFunction).getLambda(), ((Function) lambdaOrFunction).getEnvironment().newChild(), ((Function) lambdaOrFunction).getEnvironment(),current.getTail() );
		} else {
			final Optional<SExpression> isLambda = arg1.lookup((IdentifierAtom) current.getHead());
			if (!isLambda.isEmpty() && isLambda.get() instanceof Lambda) {
				Environment childEnvironment = arg1.newChild();
				return evaluateLambda((Lambda) isLambda.get(), childEnvironment, arg1, current.getTail());
			} else if (!isLambda.isEmpty() && isLambda.get() instanceof Function) {
				
				return evaluateLambda (((Function) isLambda.get()).getLambda(), ((Function) isLambda.get()).getEnvironment().newChild(), ((Function) isLambda.get()).getEnvironment(),current.getTail() ); 
			}
			
			return null;
		}
	}
	
	public SExpression basicEvaluator(SExpression expr, Environment environment) {
		if (expr instanceof IdentifierAtom) {
			String operator = ((IdentifierAtom)expr).getValue();
			Evaluator eval = BuiltinOperationManagerSingleton.get().getEvaluator(operator);
			if (eval == null) {
				throw new IllegalStateException("No evaluator registered for operator '" + operator + "'");
			}
			return eval.eval(expr, environment);
		} else {
			throw new IllegalStateException("Expression does not start with an operator");
		}
	}
	
	public SExpression evaluateLambda(Lambda lambda, Environment childEnvironment, Environment environment, SExpression current) {
		IdentifierAtom[] argNames = lambda.getArgumentNames();
		for(int i = 0; i < argNames.length; i++) {
			if (current.isAtom()) {
				childEnvironment.assign(argNames[i], current);
			} else {
				childEnvironment.assign(argNames[i], current.getHead().eval(environment));
				current = current.getTail();
			}
		}
	return lambda.eval(childEnvironment);
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="876" _type="Delete" date="Mon Nov 29 14:16:24 EST 2021" docASTNodeCount="443" docActiveCodeLength="2805" docExpressionCount="320" docLength="2805" endLine="41" length="5" offset="1774" repeat="5" startLine="41" starttimestamp="1638212009072" timestamp="1375444" timestamp2="1376106">
    <text><![CDATA[ublic]]></text>
  </DocumentChange>
  <DocumentChange __id="886" _type="Insert" date="Mon Nov 29 14:16:25 EST 2021" docASTNodeCount="441" docActiveCodeLength="2813" docExpressionCount="319" docLength="2813" length="8" offset="1774" repeat="8" starttimestamp="1638212009072" timestamp="1376246" timestamp2="1377686">
    <text><![CDATA[rotected]]></text>
  </DocumentChange>
  <DocumentChange __id="915" _type="Delete" date="Mon Nov 29 14:16:30 EST 2021" docASTNodeCount="443" docActiveCodeLength="2808" docExpressionCount="320" docLength="2808" endLine="54" length="5" offset="2315" repeat="5" startLine="54" starttimestamp="1638212009072" timestamp="1381334" timestamp2="1381997">
    <text><![CDATA[ublic]]></text>
  </DocumentChange>
  <DocumentChange __id="925" _type="Insert" date="Mon Nov 29 14:16:31 EST 2021" docASTNodeCount="441" docActiveCodeLength="2816" docExpressionCount="319" docLength="2816" length="8" offset="2315" repeat="8" starttimestamp="1638212009072" timestamp="1382124" timestamp2="1383365">
    <text><![CDATA[rotected]]></text>
  </DocumentChange>
  <Command __id="952" _type="DiffBasedFileOpenCommand" date="Mon Nov 29 14:16:40 EST 2021" docASTNodeCount="296" docActiveCodeLength="1627" docExpressionCount="214" docLength="1754" projectName="a5" starttimestamp="1638212009072" timestamp="1391437">
    <filePath><![CDATA[C:\Users\rarael\OneDrive\Documents\COMPSCIENCE\COMP 524\a5\src\functional\FunctionEvaluator.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package functional;¶¶import main.lisp.evaluator.Environment;¶import main.lisp.evaluator.Evaluator;¶import main.lisp.evaluator.function.FunctionFactory;¶import main.lisp.evaluator.function.Lambda;¶import main.lisp.evaluator.function.LambdaFactory;¶import main.lisp.parser.terms.IdentifierAtom;¶import main.lisp.parser.terms.SExpression;¶¶public class FunctionEvaluator implements Evaluator{¶¶	@Override¶	public SExpression eval(SExpression arg0, Environment arg1) {¶		IdentifierAtom[] argNames1 = new IdentifierAtom[1];¶		SExpression current = arg0.getTail().getHead().getTail().getHead();¶		int index = 0;¶		if(current.isAtom()) {¶			argNames1 = new IdentifierAtom[0];¶			return LambdaFactory.newInstance(argNames1, arg0.getTail().getTail());¶		}¶		while(!current.getTail().isNIL()) {¶			// expand size if you still need to add arg names¶			argNames1 = expandArray(argNames1, index);¶			argNames1[index] = (IdentifierAtom) current.getHead();¶			current = current.getTail();¶			index++;¶		}¶		//add last argument (the last argument has nil as its tail)¶		if (!current.getHead().isNIL()) {¶			argNames1 = expandArray(argNames1, index);¶			argNames1[index] = (IdentifierAtom) current.getHead();¶		}¶		¶		Lambda lambda =  LambdaFactory.newInstance(argNames1, arg0.getTail().getHead().getTail().getTail());¶		return FunctionFactory.newInstance(lambda, arg1);¶	}¶	¶	public IdentifierAtom[] expandArray(IdentifierAtom[] array, int index) {¶		if (index == array.length) {¶			int size = array.length+ 1;¶			IdentifierAtom[] newArray = new IdentifierAtom[size];¶			for (int i = 0; i < array.length; i++) {¶				newArray[i] = array[i];¶			}¶			//array = newArray;¶			return newArray;¶		}¶		return array;¶		¶	}¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="957" _type="Replace" date="Mon Nov 29 14:16:44 EST 2021" docASTNodeCount="297" docActiveCodeLength="1623" docExpressionCount="215" docLength="1750" endLine="38" insertionLength="1" int_docASTNodeCount="297" int_docActiveCodeLength="1622" int_docExpressionCount="215" int_docLength="1749" length="5" offset="1399" startLine="38" starttimestamp="1638212009072" timestamp="1395887">
    <deletedText><![CDATA[ublic]]></deletedText>
    <insertedText><![CDATA[r]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="959" _type="Insert" date="Mon Nov 29 14:16:45 EST 2021" docASTNodeCount="296" docActiveCodeLength="1630" docExpressionCount="214" docLength="1757" length="7" offset="1400" repeat="7" starttimestamp="1638212009072" timestamp="1396007" timestamp2="1397085">
    <text><![CDATA[otected]]></text>
  </DocumentChange>
  <Command __id="992" _type="DiffBasedFileOpenCommand" date="Mon Nov 29 14:16:50 EST 2021" docASTNodeCount="280" docActiveCodeLength="1524" docExpressionCount="200" docLength="1651" projectName="a5" starttimestamp="1638212009072" timestamp="1401209">
    <filePath><![CDATA[C:\Users\rarael\OneDrive\Documents\COMPSCIENCE\COMP 524\a5\src\functional\LambdaEvaluator.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package functional;

import java.util.ArrayList;
import java.util.List;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.evaluator.function.Lambda;
import main.lisp.evaluator.function.LambdaFactory;
import main.lisp.parser.terms.IdentifierAtom;
import main.lisp.parser.terms.SExpression;

public class LambdaEvaluator implements Evaluator {

	@Override
	public SExpression eval(SExpression arg0, Environment arg1) {
		IdentifierAtom[] argNames1 = new IdentifierAtom[1];
		SExpression current = arg0.getTail().getHead();
		int index = 0;
		if(current.isAtom()) {
			argNames1 = new IdentifierAtom[0];
			return LambdaFactory.newInstance(argNames1, arg0.getTail().getTail());
		}
		while(!current.getTail().isNIL()) {
			// expand size if you still need to add arg names
			argNames1 = expandArray(argNames1, index);
			argNames1[index] = (IdentifierAtom) current.getHead();
			current = current.getTail();
			index++;
		}
		//add last argument (the last argument has nil as its tail)
		if (!current.getHead().isNIL()) {
			argNames1 = expandArray(argNames1, index);
			argNames1[index] = (IdentifierAtom) current.getHead();
		}
		
		return LambdaFactory.newInstance(argNames1, arg0.getTail().getTail());
	}
	
	public IdentifierAtom[] expandArray(IdentifierAtom[] array, int index) {
		if (index == array.length) {
			int size = array.length+ 1;
			IdentifierAtom[] newArray = new IdentifierAtom[size];
			for (int i = 0; i < array.length; i++) {
				newArray[i] = array[i];
			}
			//array = newArray;
			return newArray;
		}
		return array;
		
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="1005" _type="Delete" date="Mon Nov 29 14:16:52 EST 2021" docASTNodeCount="281" docActiveCodeLength="1519" docExpressionCount="201" docLength="1646" endLine="39" length="5" offset="1296" repeat="5" startLine="39" starttimestamp="1638212009072" timestamp="1403881" timestamp2="1404527">
    <text><![CDATA[ublic]]></text>
  </DocumentChange>
  <Command __id="1043" _type="PauseCommand" date="Mon Nov 29 14:16:59 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="1410277">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3512]]></pause>
    <nextType><![CDATA[Debug]]></nextType>
    <next><![CDATA[RunCommand]]></next>
  </Command>
  <Command __id="1042" _type="RunCommand" className="/a5/src/a5/LocalChecks.java" date="Mon Nov 29 14:16:59 EST 2021" kind="HitBreakPoint" projectName="a5" starttimestamp="1638212009072" timestamp="1410277" type="Run" />
  <Command __id="1044" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:16:59 EST 2021" starttimestamp="1638212009072" timestamp="1410370" />
  <Command __id="1045" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:16:59 EST 2021" starttimestamp="1638212009072" timestamp="1410374" />
  <Command __id="1046" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:16:59 EST 2021" starttimestamp="1638212009072" timestamp="1410374" />
  <Command __id="1047" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:16:59 EST 2021" starttimestamp="1638212009072" timestamp="1410376" />
  <Command __id="1048" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:16:59 EST 2021" starttimestamp="1638212009072" timestamp="1410376" />
  <Command __id="1049" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:16:59 EST 2021" starttimestamp="1638212009072" timestamp="1410377" />
  <Command __id="1050" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:16:59 EST 2021" starttimestamp="1638212009072" timestamp="1410377" />
  <Command __id="1051" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:16:59 EST 2021" starttimestamp="1638212009072" timestamp="1410382" />
  <Command __id="1053" _type="PauseCommand" date="Mon Nov 29 14:17:01 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="1412588">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2206]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1052" _type="ShellCommand" date="Mon Nov 29 14:17:01 EST 2021" starttimestamp="1638212009072" timestamp="1412588" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1055" _type="PauseCommand" date="Mon Nov 29 14:17:03 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="1414745">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2157]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="1054" _type="ExceptionCommand" date="Mon Nov 29 14:17:03 EST 2021" starttimestamp="1638212009072" timestamp="1414745" type="Exception">
    <exceptionString><![CDATA[Test execution time (ms):1
Test execution time (ms):8
Test execution time (ms):11
Test execution time (ms):65
Test execution time (ms):67
Test execution time (ms):1
Test execution time (ms):0
Test execution time (ms):1
Test execution time (ms):1
java.lang.IllegalStateException: Expression does not start with an operator
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:50)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:23)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at expression.CondEvaluator.eval(CondEvaluator.java:21)
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:48)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:23)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at expression.EvalEvaluator.eval(EvalEvaluator.java:10)
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:48)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:23)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at expression.EvalEvaluator.eval(EvalEvaluator.java:10)
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:48)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:23)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:226)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:106)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1056" _type="ConsoleOutput" date="Mon Nov 29 14:17:03 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="1414831" type="ConsoleOutput">
    <outputString><![CDATA[	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:301)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6400)
	at java.desktop/java.awt.Container.processEvent(Container.java:2263)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"A6PackageDeclarations did not pass completely:%0.96¶¶Test execution time (ms):4¶F21A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0¶¶Test execution time (ms):1"), Diff(INSERT,"	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:301)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1057" _type="ConsoleOutput" date="Mon Nov 29 14:17:03 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="1414912" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
Test execution time (ms):0
Test execution time (ms):0
Test execution time (ms):0
Test execution time (ms):0
Building symbol table and running first pass checks:Mon Nov 29 14:17:03 EST 2021
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)¶	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:301)¶	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)¶	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)¶	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)¶	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)¶	at java.base/java.lang.reflect.Method.invoke(Method.java:566)¶	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)¶	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)¶	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)¶	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)¶	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)¶	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)¶	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)¶	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)¶	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6638)¶	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)¶	at java.desktop/java.awt.Component.processEvent(Component.java:6400)¶	at java.desktop/java.awt.Container.processEvent(Container.java:2263)¶	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5011)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4918)¶	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4556)¶	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4488)¶	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2307)¶	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)¶	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4843)¶	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)¶	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)¶	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)¶	at java.base/java.security.AccessController.doPrivileged(Native Method)¶	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)¶	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)¶	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)¶	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)"), Diff(INSERT,"Test execution time (ms):1¶Test execution time (ms):0¶Test execution time (ms):0¶Test execution time (ms):0¶Test execution time (ms):0¶Building symbol table and running first pass checks:Mon Nov 29 14:17:03 EST 2021"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1059" _type="PauseCommand" date="Mon Nov 29 14:17:05 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="1416254">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1342]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1058" _type="ConsoleOutput" date="Mon Nov 29 14:17:05 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="1416254" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:39
Running second pass checks Mon Nov 29 14:17:05 EST 2021
Start O(n2) inter- and intra class method calls:Mon Nov 29 14:17:05 EST 2021
End O(n2) inter- and intra class method calls:Mon Nov 29 14:17:05 EST 2021
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):1¶Test execution time (ms):0¶Test execution time (ms):0¶Test execution time (ms):0¶Test execution time (ms):0¶Building symbol table and running first pass check"), Diff(INSERT,"Symbol table size:39¶Running second pass checks Mon Nov 29 14:17:05 EST 2021¶Start O(n2) inter- and intra class method calls:Mon Nov 29 14:17:05 EST 2021¶End O(n2) inter- and intra class method call"), Diff(EQUAL,"s:Mon Nov 29 14:17:0"), Diff(DELETE,"3"), Diff(INSERT,"5"), Diff(EQUAL," EST 2021¶")]]]></diff>
  </Command>
  <Command __id="1060" _type="ConsoleOutput" date="Mon Nov 29 14:17:06 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="1417107" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Mon Nov 29 14:17:06 EST 2021
Generating checks:Mon Nov 29 14:17:06 EST 2021
Finished Generating checks:Mon Nov 29 14:17:06 EST 2021
Generating externals:Mon Nov 29 14:17:06 EST 2021
Finished Generating externals:Mon Nov 29 14:17:06 EST 2021
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:39¶Running"), Diff(INSERT,"Finished"), Diff(EQUAL," second pass checks"), Diff(DELETE," "), Diff(INSERT,":"), Diff(EQUAL,"Mon Nov 29 14:17:0"), Diff(DELETE,"5"), Diff(INSERT,"6"), Diff(EQUAL," EST 2021¶"), Diff(DELETE,"Start O(n2) inter- and intra class method cal"), Diff(INSERT,"Generating checks:Mon Nov 29 14:17:06 EST 2021¶Finished Generating checks:Mon Nov 29 14:17:06 EST 2021¶Generating externa"), Diff(EQUAL,"ls:Mon Nov 29 14:17:0"), Diff(DELETE,"5"), Diff(INSERT,"6"), Diff(EQUAL," EST 2021¶"), Diff(DELETE,"End O(n2) inter- and intra class method cal"), Diff(INSERT,"Finished Generating externa"), Diff(EQUAL,"ls:Mon Nov 29 14:17:0"), Diff(DELETE,"5"), Diff(INSERT,"6"), Diff(EQUAL," EST 2021¶")]]]></diff>
  </Command>
  <Command __id="1061" _type="ConsoleOutput" date="Mon Nov 29 14:17:06 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="1417212" type="ConsoleOutput">
    <outputString><![CDATA[A6CommonPropertiesInherited did not pass completely:See console trace about lines failing  this check%0.0

Test execution time (ms):2300
A6CommonSignaturesAreInherited did not pass completely:See console trace about lines failing  this check%0.7251798561151078

Test execution time (ms):14
A6Encapsulation did not pass completely:%0.96

Test execution time (ms):9
A6NoHiddenFields did not pass completely:%0.96

Test execution time (ms):8
A6NonPublicAccessModifiersMatched did not pass completely:See console trace about lines failing  this check%0.192

Test execution time (ms):23
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished second pass checks:Mon Nov 29 14:17:06 EST 2021¶Generating checks:Mon Nov 29 14:17:06 EST 2021¶Finished Generating checks:Mon Nov 29 14:17:06 EST 2021¶Generating externals:Mon Nov 29 14:17:06 EST 2021¶Finished Generating externals:Mon Nov 29 14:17:06 EST 2021"), Diff(INSERT,"A6CommonPropertiesInherited did not pass completely:See console trace about lines failing  this check%0.0¶¶Test execution time (ms):2300¶A6CommonSignaturesAreInherited did not pass completely:See console trace about lines failing  this check%0.7251798561151078¶¶Test execution time (ms):14¶A6Encapsulation did not pass completely:%0.96¶¶Test execution time (ms):9¶A6NoHiddenFields did not pass completely:%0.96¶¶Test execution time (ms):8¶A6NonPublicAccessModifiersMatched did not pass completely:See console trace about lines failing  this check%0.192¶¶Test execution time (ms):23"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1062" _type="ConsoleOutput" date="Mon Nov 29 14:17:06 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="1417286" type="ConsoleOutput">
    <outputString><![CDATA[A6PublicMethodsOverride did not pass completely:%0.96

Test execution time (ms):14
A6NoStarImports did not pass completely:%0.96

Test execution time (ms):4
A6PackageDeclarations did not pass completely:%0.96

Test execution time (ms):4
F21A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0

Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"A6"), Diff(DELETE,"CommonPropertiesInherited did not pass completely:See console trace about lines failing  this check"), Diff(INSERT,"PublicMethodsOverride did not pass completely:"), Diff(EQUAL,"%0."), Diff(DELETE,"0"), Diff(INSERT,"96"), Diff(EQUAL,"¶¶Test execution time (ms):"), Diff(DELETE,"2300¶A6CommonSignaturesAreInherited did not pass completely:See console trace about lines failing  this check%0.7251798561151078"), Diff(INSERT,"14¶A6NoStarImports did not pass completely:%0.96"), Diff(EQUAL,"¶¶Test execution time (ms):"), Diff(DELETE,"1"), Diff(EQUAL,"4¶A6"), Diff(DELETE,"Encapsul"), Diff(INSERT,"PackageDeclar"), Diff(EQUAL,"ation"), Diff(INSERT,"s"), Diff(EQUAL," did not pass completely:%0.96¶¶Test execution time (ms):"), Diff(DELETE,"9"), Diff(INSERT,"4"), Diff(EQUAL,"¶"), Diff(INSERT,"F21"), Diff(EQUAL,"A6No"), Diff(DELETE,"HiddenField"), Diff(INSERT,"CheckstyleWarning"), Diff(EQUAL,"s did not pass completely:"), Diff(DELETE,"%0.96¶¶Test execution time (ms):8¶A6NonPublicAccessModifiersMatched did not pass completely:See console trace about lines failing  this check%0.192"), Diff(INSERT,"Warnings found in checkstyle text, see traced console output%0.0"), Diff(EQUAL,"¶¶Test execution time (ms):2"), Diff(DELETE,"3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1064" _type="PauseCommand" date="Mon Nov 29 14:17:11 EST 2021" range="5s-10s" starttimestamp="1638212009072" timestamp="1422693">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5407]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1063" _type="ConsoleOutput" date="Mon Nov 29 14:17:11 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="1422693" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"A6PublicMethodsOverride did not pass completely:%0.96¶¶Test execution time (ms):14¶A6NoStarImports did not pass completely:%0.96¶¶Test execution time (ms):4¶A6PackageDeclarations did not pass completely:%0.96¶¶Test execution time (ms):4¶F21A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0¶¶Test execution time (ms):2"), Diff(INSERT,"Test execution time (ms):1¶Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1066" _type="PauseCommand" date="Mon Nov 29 14:17:13 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="1423977">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1284]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="1065" _type="ExceptionCommand" date="Mon Nov 29 14:17:13 EST 2021" starttimestamp="1638212009072" timestamp="1423977" type="Exception">
    <exceptionString><![CDATA[LispIsListChecker did not pass completely:Expected strings:Tactual string NIL%0.0

Test execution time (ms):1
LispIsListChecker2 did not pass completely:Expected strings:Tactual string NIL%0.0

Test execution time (ms):1
Test execution time (ms):0
Test execution time (ms):0
java.lang.NullPointerException
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.propertyChange(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:48)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.firePropertyChange(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:102)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:93)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:226)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:106)
	at jdk.internal.reflect.GeneratedMethodAccessor17.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:301)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1068" _type="PauseCommand" date="Mon Nov 29 14:17:14 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="1425791">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[1814]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="1067" _type="ExceptionCommand" date="Mon Nov 29 14:17:14 EST 2021" starttimestamp="1638212009072" timestamp="1425791" type="Exception">
    <exceptionString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'CURRY'
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:46)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:23)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at functional.FuncallEvaluator.eval(FuncallEvaluator.java:21)
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:48)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:23)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:226)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:106)
	at jdk.internal.reflect.GeneratedMethodAccessor17.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:301)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1070" _type="PauseCommand" date="Mon Nov 29 14:17:16 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="1427176">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[1385]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="1069" _type="ExceptionCommand" date="Mon Nov 29 14:17:16 EST 2021" starttimestamp="1638212009072" timestamp="1427176" type="Exception">
    <exceptionString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'LET'
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:46)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:23)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:226)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:106)
	at jdk.internal.reflect.GeneratedMethodAccessor17.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:301)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1072" _type="PauseCommand" date="Mon Nov 29 14:17:18 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="1428989">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[1813]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1071" _type="ConsoleOutput" date="Mon Nov 29 14:17:18 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="1428989" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"1¶Test execution time (ms):1"), Diff(INSERT,"0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1074" _type="PauseCommand" date="Mon Nov 29 14:17:19 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="1430627">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1638]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1073" _type="ConsoleOutput" date="Mon Nov 29 14:17:19 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="1430627" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):1¶"), Diff(EQUAL,"Test execution time (ms):0¶")]]]></diff>
  </Command>
  <Command __id="1076" _type="PauseCommand" date="Mon Nov 29 14:17:21 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="1432349">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1722]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1075" _type="ConsoleOutput" date="Mon Nov 29 14:17:21 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="1432349" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):21
Test execution time (ms):9
Test execution time (ms):10
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(INSERT,"2"), Diff(EQUAL,"1¶Test execution time (ms):"), Diff(INSERT,"9¶Test execution time (ms):1"), Diff(EQUAL,"0¶")]]]></diff>
  </Command>
  <Command __id="1077" _type="ConsoleOutput" date="Mon Nov 29 14:17:21 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="1432360" type="ConsoleOutput">
    <outputString><![CDATA[FuncallCallsExpressionFactory did not pass completely:Checkstyle output does not match:.*INFO.*BasicFuncallEvaluator(.*)main.lisp.parser.terms.ExpressionFactory!newInstance:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression->SExpression(.*)\[MissingMethodCall\].*. Is your class named or tagged properly and checkstyle file upto date?%0.0

Test execution time (ms):12
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):21¶Test execution time (ms):9"), Diff(INSERT,"FuncallCallsExpressionFactory did not pass completely:Checkstyle output does not match:.*INFO.*BasicFuncallEvaluator(.*)main.lisp.parser.terms.ExpressionFactory!newInstance:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression->SExpression(.*)\[MissingMethodCall\].*. Is your class named or tagged properly and checkstyle file upto date?%0.0¶"), Diff(EQUAL,"¶Test execution time (ms):1"), Diff(DELETE,"0"), Diff(INSERT,"2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1078" _type="ConsoleOutput" date="Mon Nov 29 14:17:21 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="1432454" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):7
Test execution time (ms):7
Test execution time (ms):8
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"FuncallCallsExpressionFactory did not pass completely:Checkstyle output does not match:.*INFO.*BasicFuncallEvaluator(.*)main.lisp.parser.terms.ExpressionFactory!newInstance:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression->SExpression(.*)\[MissingMethodCall\].*. Is your class named or tagged properly and checkstyle file upto date?%0.0¶"), Diff(INSERT,"Test execution time (ms):7¶Test execution time (ms):7"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"12"), Diff(INSERT,"8"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1080" _type="PauseCommand" date="Mon Nov 29 14:17:32 EST 2021" range="10s-20s" starttimestamp="1638212009072" timestamp="1443292">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[10838]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1079" _type="ConsoleOutput" date="Mon Nov 29 14:17:32 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="1443292" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp524f21.assignment6.style.A6NonPublicAccessModifiersMatched@3599a599 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):7¶Test execution time (ms):7¶Test execution time (ms):8"), Diff(INSERT,"Re-running test gradingTools.comp524f21.assignment6.style.A6NonPublicAccessModifiersMatched@3599a599 . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1082" _type="PauseCommand" date="Mon Nov 29 14:17:36 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="1447473">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4181]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1081" _type="ShellCommand" date="Mon Nov 29 14:17:36 EST 2021" starttimestamp="1638212009072" timestamp="1447473" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1084" _type="PauseCommand" date="Mon Nov 29 14:17:46 EST 2021" range="5s-10s" starttimestamp="1638212009072" timestamp="1456958">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[9485]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1083" _type="ShellCommand" date="Mon Nov 29 14:17:46 EST 2021" starttimestamp="1638212009072" timestamp="1456958" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1086" _type="PauseCommand" date="Mon Nov 29 14:17:47 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="1458216">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1258]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1085" _type="ShellCommand" date="Mon Nov 29 14:17:47 EST 2021" starttimestamp="1638212009072" timestamp="1458216" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1087" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Nov 29 14:17:47 EST 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1638212009072" timestamp="1458914" type="Debug" />
  <Command __id="1088" _type="ProgramExecutionEvent" className="/a5/src/a5/LocalChecks.java" date="Mon Nov 29 14:17:47 EST 2021" kind="HitBreakPoint" projectName="a5" starttimestamp="1638212009072" timestamp="1458915" type="Run" />
  <Command __id="1089" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Nov 29 14:17:47 EST 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1638212009072" timestamp="1458915" type="Debug" />
  <Command __id="1090" _type="ProgramExecutionEvent" className="/a5/src/a5/LocalChecks.java" date="Mon Nov 29 14:17:47 EST 2021" kind="HitBreakPoint" projectName="a5" starttimestamp="1638212009072" timestamp="1458915" type="Run" />
  <Command __id="1091" _type="ShellCommand" date="Mon Nov 29 14:17:48 EST 2021" starttimestamp="1638212009072" timestamp="1459322" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1100" _type="PauseCommand" date="Mon Nov 29 14:17:53 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="1464917">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3364]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ProgramExecutionEvent]]></next>
  </Command>
  <Command __id="1099" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Nov 29 14:17:53 EST 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1638212009072" timestamp="1464917" type="Debug" />
  <Command __id="1101" _type="ProgramExecutionEvent" className="/a5/src/a5/LocalChecks.java" date="Mon Nov 29 14:17:53 EST 2021" kind="HitBreakPoint" projectName="a5" starttimestamp="1638212009072" timestamp="1464917" type="Run" />
  <Command __id="1102" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Nov 29 14:17:53 EST 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1638212009072" timestamp="1464917" type="Debug" />
  <Command __id="1103" _type="ProgramExecutionEvent" className="/a5/src/a5/LocalChecks.java" date="Mon Nov 29 14:17:53 EST 2021" kind="HitBreakPoint" projectName="a5" starttimestamp="1638212009072" timestamp="1464917" type="Run" />
  <Command __id="1105" _type="PauseCommand" date="Mon Nov 29 14:17:55 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="1466097">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[1180]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1104" _type="ShellCommand" date="Mon Nov 29 14:17:55 EST 2021" starttimestamp="1638212009072" timestamp="1466097" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1168" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:18:03 EST 2021" starttimestamp="1638212009072" timestamp="1474262" />
  <Command __id="1169" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:18:03 EST 2021" starttimestamp="1638212009072" timestamp="1474268" />
  <Command __id="1170" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:18:03 EST 2021" starttimestamp="1638212009072" timestamp="1474268" />
  <Command __id="1171" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:18:03 EST 2021" starttimestamp="1638212009072" timestamp="1474269" />
  <Command __id="1172" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:18:03 EST 2021" starttimestamp="1638212009072" timestamp="1474269" />
  <Command __id="1173" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:18:03 EST 2021" starttimestamp="1638212009072" timestamp="1474269" />
  <Command __id="1174" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 29 14:18:03 EST 2021" starttimestamp="1638212009072" timestamp="1474269" />
  <Command __id="1175" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:18:03 EST 2021" starttimestamp="1638212009072" timestamp="1474269" />
  <Command __id="1176" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:18:03 EST 2021" starttimestamp="1638212009072" timestamp="1474271" />
  <Command __id="1177" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:18:03 EST 2021" starttimestamp="1638212009072" timestamp="1474272" />
  <Command __id="1178" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:18:03 EST 2021" starttimestamp="1638212009072" timestamp="1474289" />
  <Command __id="1180" _type="PauseCommand" date="Mon Nov 29 14:18:05 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="1476425">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2136]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1181" _type="MoveCaretCommand" caretOffset="1996" date="Mon Nov 29 14:18:05 EST 2021" docOffset="2323" starttimestamp="1638212009072" timestamp="1476496" />
  <Command __id="1183" _type="MoveCaretCommand" caretOffset="1497" date="Mon Nov 29 14:18:06 EST 2021" docOffset="1497" starttimestamp="1638212009072" timestamp="1477422" />
  <Command __id="1185" _type="PauseCommand" date="Mon Nov 29 14:18:07 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="1478505">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1083]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1186" _type="MoveCaretCommand" caretOffset="1996" date="Mon Nov 29 14:18:07 EST 2021" docOffset="2323" starttimestamp="1638212009072" timestamp="1478601" />
  <Command __id="1188" _type="MoveCaretCommand" caretOffset="244" date="Mon Nov 29 14:18:08 EST 2021" docOffset="429" starttimestamp="1638212009072" timestamp="1479484" />
  <Command __id="1190" _type="PauseCommand" date="Mon Nov 29 14:18:11 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="1482013">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2529]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1191" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:18:11 EST 2021" starttimestamp="1638212009072" timestamp="1482085" />
  <Command __id="1192" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:18:11 EST 2021" starttimestamp="1638212009072" timestamp="1482089" />
  <Command __id="1193" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:18:11 EST 2021" starttimestamp="1638212009072" timestamp="1482089" />
  <Command __id="1194" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:18:11 EST 2021" starttimestamp="1638212009072" timestamp="1482090" />
  <Command __id="1195" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:18:11 EST 2021" starttimestamp="1638212009072" timestamp="1482091" />
  <Command __id="1196" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:18:11 EST 2021" starttimestamp="1638212009072" timestamp="1482092" />
  <Command __id="1197" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:18:11 EST 2021" starttimestamp="1638212009072" timestamp="1482092" />
  <Command __id="1198" _type="MoveCaretCommand" caretOffset="1012" date="Mon Nov 29 14:18:11 EST 2021" docOffset="1254" starttimestamp="1638212009072" timestamp="1482096" />
  <Command __id="1199" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:18:11 EST 2021" starttimestamp="1638212009072" timestamp="1482099" />
  <Command __id="1201" _type="MoveCaretCommand" caretOffset="244" date="Mon Nov 29 14:18:12 EST 2021" docOffset="429" starttimestamp="1638212009072" timestamp="1483002" />
  <Command __id="1203" _type="PauseCommand" date="Mon Nov 29 14:18:14 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="1485571">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2569]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1204" _type="MoveCaretCommand" caretOffset="1008" date="Mon Nov 29 14:18:14 EST 2021" docOffset="1302" starttimestamp="1638212009072" timestamp="1485646" />
  <Command __id="1206" _type="PauseCommand" date="Mon Nov 29 14:18:18 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="1489310">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3664]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1207" _type="MoveCaretCommand" caretOffset="244" date="Mon Nov 29 14:18:18 EST 2021" docOffset="429" starttimestamp="1638212009072" timestamp="1489397" />
  <Command __id="1209" _type="PauseCommand" date="Mon Nov 29 14:18:20 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="1491098">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1700]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1210" _type="MoveCaretCommand" caretOffset="1996" date="Mon Nov 29 14:18:20 EST 2021" docOffset="2323" starttimestamp="1638212009072" timestamp="1491164" />
  <Command __id="1241" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:18:26 EST 2021" starttimestamp="1638212009072" timestamp="1497193" />
  <Command __id="1242" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:18:26 EST 2021" starttimestamp="1638212009072" timestamp="1497218" />
  <Command __id="1243" _type="ShellCommand" date="Mon Nov 29 14:18:27 EST 2021" starttimestamp="1638212009072" timestamp="1498073" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1245" _type="PauseCommand" date="Mon Nov 29 14:18:29 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="1500520">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2447]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1244" _type="ShellCommand" date="Mon Nov 29 14:18:29 EST 2021" starttimestamp="1638212009072" timestamp="1500520" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1277" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:18:33 EST 2021" starttimestamp="1638212009072" timestamp="1504210" />
  <Command __id="1278" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:18:33 EST 2021" starttimestamp="1638212009072" timestamp="1504213" />
  <Command __id="1279" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:18:33 EST 2021" starttimestamp="1638212009072" timestamp="1504213" />
  <Command __id="1280" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:18:33 EST 2021" starttimestamp="1638212009072" timestamp="1504238" />
  <Command __id="1282" _type="PauseCommand" date="Mon Nov 29 14:18:36 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="1507508">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3270]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1283" _type="MoveCaretCommand" caretOffset="244" date="Mon Nov 29 14:18:36 EST 2021" docOffset="429" starttimestamp="1638212009072" timestamp="1507578" />
  <Command __id="1285" _type="PauseCommand" date="Mon Nov 29 14:18:41 EST 2021" range="5s-10s" starttimestamp="1638212009072" timestamp="1512892">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5314]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1284" _type="SelectTextCommand" caretOffset="344" date="Mon Nov 29 14:18:41 EST 2021" end="419" start="344" starttimestamp="1638212009072" timestamp="1512892" />
  <Command __id="1286" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 29 14:18:42 EST 2021" starttimestamp="1638212009072" timestamp="1513182" />
  <Command __id="1292" _type="PauseCommand" date="Mon Nov 29 14:18:45 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="1515987">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1152]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="1291" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:18:45 EST 2021" starttimestamp="1638212009072" timestamp="1515987" />
  <Command __id="1293" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:18:45 EST 2021" starttimestamp="1638212009072" timestamp="1515989" />
  <Command __id="1294" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:18:45 EST 2021" starttimestamp="1638212009072" timestamp="1515990" />
  <Command __id="1295" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:18:45 EST 2021" starttimestamp="1638212009072" timestamp="1515990" />
  <Command __id="1296" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:18:45 EST 2021" starttimestamp="1638212009072" timestamp="1515990" />
  <Command __id="1297" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:18:45 EST 2021" starttimestamp="1638212009072" timestamp="1515991" />
  <Command __id="1298" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:18:45 EST 2021" starttimestamp="1638212009072" timestamp="1515991" />
  <Command __id="1299" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:18:45 EST 2021" starttimestamp="1638212009072" timestamp="1515992" />
  <Command __id="1300" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:18:45 EST 2021" starttimestamp="1638212009072" timestamp="1515993" />
  <Command __id="1301" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:18:45 EST 2021" starttimestamp="1638212009072" timestamp="1516002" />
  <Command __id="1303" _type="PauseCommand" date="Mon Nov 29 14:18:48 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="1518961">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2959]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1304" _type="MoveCaretCommand" caretOffset="1124" date="Mon Nov 29 14:18:48 EST 2021" docOffset="1405" starttimestamp="1638212009072" timestamp="1519036" />
  <Command __id="1306" _type="MoveCaretCommand" caretOffset="0" date="Mon Nov 29 14:18:48 EST 2021" docOffset="0" starttimestamp="1638212009072" timestamp="1519776" />
  <Command __id="1307" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:18:48 EST 2021" starttimestamp="1638212009072" timestamp="1519828" />
  <Command __id="1308" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:18:48 EST 2021" starttimestamp="1638212009072" timestamp="1519831" />
  <Command __id="1309" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:18:48 EST 2021" starttimestamp="1638212009072" timestamp="1519831" />
  <Command __id="1310" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:18:48 EST 2021" starttimestamp="1638212009072" timestamp="1519832" />
  <Command __id="1311" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:18:48 EST 2021" starttimestamp="1638212009072" timestamp="1519832" />
  <Command __id="1312" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:18:48 EST 2021" starttimestamp="1638212009072" timestamp="1519832" />
  <Command __id="1313" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:18:48 EST 2021" starttimestamp="1638212009072" timestamp="1519833" />
  <Command __id="1314" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:18:48 EST 2021" starttimestamp="1638212009072" timestamp="1519835" />
  <Command __id="1318" _type="PauseCommand" date="Mon Nov 29 14:18:57 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="1527942">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2754]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ProgramExecutionEvent]]></next>
  </Command>
  <Command __id="1317" _type="ProgramExecutionEvent" className="/a5/src/a5/LocalChecks.java" date="Mon Nov 29 14:18:57 EST 2021" kind="HitBreakPoint" projectName="a5" starttimestamp="1638212009072" timestamp="1527942" type="Run" />
  <Command __id="1319" _type="RunCommand" className="/a5/src/a5/LocalChecks.java" date="Mon Nov 29 14:18:57 EST 2021" kind="HitBreakPoint" projectName="a5" starttimestamp="1638212009072" timestamp="1527942" type="Run" />
  <Command __id="1321" _type="PauseCommand" date="Mon Nov 29 14:18:59 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="1530201">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[2259]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1320" _type="ShellCommand" date="Mon Nov 29 14:18:59 EST 2021" starttimestamp="1638212009072" timestamp="1530201" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1323" _type="PauseCommand" date="Mon Nov 29 14:19:01 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="1532155">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1954]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1322" _type="ConsoleOutput" date="Mon Nov 29 14:19:01 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="1532155" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2
Test execution time (ms):8
Test execution time (ms):11
Test execution time (ms):73
Test execution time (ms):75
Test execution time (ms):1
Test execution time (ms):0
Test execution time (ms):1
Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp524f21.assignment6.style.A6NonPublicAccessModifiersMatched@3599a599 . Results may change."), Diff(INSERT,"Test execution time (ms):2¶Test execution time (ms):8¶Test execution time (ms):11¶Test execution time (ms):73¶Test execution time (ms):75¶Test execution time (ms):1¶Test execution time (ms):0¶Test execution time (ms):1¶Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1324" _type="ExceptionCommand" date="Mon Nov 29 14:19:01 EST 2021" starttimestamp="1638212009072" timestamp="1532211" type="Exception">
    <exceptionString><![CDATA[java.lang.IllegalStateException: Expression does not start with an operator
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:50)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:23)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at expression.CondEvaluator.eval(CondEvaluator.java:21)
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:48)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:23)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at expression.EvalEvaluator.eval(EvalEvaluator.java:10)
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:48)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:23)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at expression.EvalEvaluator.eval(EvalEvaluator.java:10)
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:48)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:23)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:226)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:106)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:301)
	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)
	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)
	at grader.basics.testcase.PassFailJUnitTestCase.possiblyRunAndCheckPrecedingTests(PassFailJUnitTestCase.java:166)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:221)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:106)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1325" _type="ConsoleOutput" date="Mon Nov 29 14:19:01 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="1532305" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):27
Test execution time (ms):0
Test execution time (ms):0
Test execution time (ms):1
Test execution time (ms):0
Test execution time (ms):1
Test execution time (ms):0
Building symbol table and running first pass checks:Mon Nov 29 14:19:01 EST 2021
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):2"), Diff(INSERT,"7"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"8"), Diff(INSERT,"0"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"11"), Diff(INSERT,"0"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"73"), Diff(INSERT,"1"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"75"), Diff(INSERT,"0"), Diff(EQUAL,"¶Test execution time (ms):1¶Test execution time (ms):0¶"), Diff(DELETE,"Test execution time (ms):1¶Test execution time (ms):"), Diff(INSERT,"Building symbol table and running first pass checks:Mon Nov 29 14:19:01 EST 202"), Diff(EQUAL,"1¶")]]]></diff>
  </Command>
  <Command __id="1327" _type="PauseCommand" date="Mon Nov 29 14:19:02 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="1533743">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1438]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1326" _type="ConsoleOutput" date="Mon Nov 29 14:19:02 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="1533743" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:39
Running second pass checks Mon Nov 29 14:19:02 EST 2021
Start O(n2) inter- and intra class method calls:Mon Nov 29 14:19:02 EST 2021
End O(n2) inter- and intra class method calls:Mon Nov 29 14:19:02 EST 2021
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):27¶Test execution time (ms):0¶Test execution time (ms):0¶Test execution time (ms):1¶Test execution time (ms):0¶Test execution time (ms):1¶Test execution time (ms):0¶Building symbol table and running first pass check"), Diff(INSERT,"Symbol table size:39¶Running second pass checks Mon Nov 29 14:19:02 EST 2021¶Start O(n2) inter- and intra class method calls:Mon Nov 29 14:19:02 EST 2021¶End O(n2) inter- and intra class method call"), Diff(EQUAL,"s:Mon Nov 29 14:19:0"), Diff(DELETE,"1"), Diff(INSERT,"2"), Diff(EQUAL," EST 2021¶")]]]></diff>
  </Command>
  <Command __id="1328" _type="ConsoleOutput" date="Mon Nov 29 14:19:03 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="1534440" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Mon Nov 29 14:19:03 EST 2021
Generating checks:Mon Nov 29 14:19:03 EST 2021
Finished Generating checks:Mon Nov 29 14:19:03 EST 2021
Generating externals:Mon Nov 29 14:19:03 EST 2021
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:39¶Running"), Diff(INSERT,"Finished"), Diff(EQUAL," second pass checks"), Diff(DELETE," "), Diff(INSERT,":"), Diff(EQUAL,"Mon Nov 29 14:19:0"), Diff(DELETE,"2"), Diff(INSERT,"3"), Diff(EQUAL," EST 2021¶"), Diff(DELETE,"Start O(n2) inter- and intra class method call"), Diff(INSERT,"Generating checks:Mon Nov 29 14:19:03 EST 2021¶Finished Generating check"), Diff(EQUAL,"s:Mon Nov 29 14:19:0"), Diff(DELETE,"2"), Diff(INSERT,"3"), Diff(EQUAL," EST 2021¶"), Diff(DELETE,"End O(n2) inter- and intra class method cal"), Diff(INSERT,"Generating externa"), Diff(EQUAL,"ls:Mon Nov 29 14:19:0"), Diff(DELETE,"2"), Diff(INSERT,"3"), Diff(EQUAL," EST 2021¶")]]]></diff>
  </Command>
  <Command __id="1329" _type="ConsoleOutput" date="Mon Nov 29 14:19:03 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="1534539" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Mon Nov 29 14:19:03 EST 2021
A6CommonPropertiesInherited did not pass completely:See console trace about lines failing  this check%0.0

Test execution time (ms):2274
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass check"), Diff(INSERT,"Generating external"), Diff(EQUAL,"s:Mon Nov 29 14:19:03 EST 2021¶"), Diff(DELETE,"Gen"), Diff(INSERT,"A6CommonProp"), Diff(EQUAL,"er"), Diff(DELETE,"a"), Diff(EQUAL,"ti"), Diff(DELETE,"ng checks:Mon Nov 29 14:19:03 EST 2021¶Finished Generating checks:Mon Nov 29 14:19:03 EST 2021¶Generating externals:Mon Nov 29 14:19:03 EST 2021"), Diff(INSERT,"esInherited did not pass completely:See console trace about lines failing  this check%0.0¶¶Test execution time (ms):2274"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1330" _type="ConsoleOutput" date="Mon Nov 29 14:19:03 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="1534624" type="ConsoleOutput">
    <outputString><![CDATA[A6CommonSignaturesAreInherited did not pass completely:See console trace about lines failing  this check%0.7251798561151078

Test execution time (ms):27
A6Encapsulation did not pass completely:%0.96

Test execution time (ms):3
A6NoHiddenFields did not pass completely:%0.96

Test execution time (ms):4
A6NonPublicAccessModifiersMatched did not pass completely:See console trace about lines failing  this check%0.48

Test execution time (ms):5
A6PublicMethodsOverride did not pass completely:%0.96

Test execution time (ms):6
A6NoStarImports did not pass completely:%0.96

Test execution time (ms):3
A6PackageDeclarations did not pass completely:%0.96

Test execution time (ms):3
F21A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0

Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Mon Nov 29 14:19:03 EST 2021¶A6CommonPropertiesInherited did not pass completely:See console trace about lines failing  this check%0.0¶¶Test execution time (ms):2274"), Diff(INSERT,"A6CommonSignaturesAreInherited did not pass completely:See console trace about lines failing  this check%0.7251798561151078¶¶Test execution time (ms):27¶A6Encapsulation did not pass completely:%0.96¶¶Test execution time (ms):3¶A6NoHiddenFields did not pass completely:%0.96¶¶Test execution time (ms):4¶A6NonPublicAccessModifiersMatched did not pass completely:See console trace about lines failing  this check%0.48¶¶Test execution time (ms):5¶A6PublicMethodsOverride did not pass completely:%0.96¶¶Test execution time (ms):6¶A6NoStarImports did not pass completely:%0.96¶¶Test execution time (ms):3¶A6PackageDeclarations did not pass completely:%0.96¶¶Test execution time (ms):3¶F21A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0¶¶Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1332" _type="PauseCommand" date="Mon Nov 29 14:19:13 EST 2021" range="10s-20s" starttimestamp="1638212009072" timestamp="1544909">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[10285]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1331" _type="ShellCommand" date="Mon Nov 29 14:19:13 EST 2021" starttimestamp="1638212009072" timestamp="1544909" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1337" _type="PauseCommand" date="Mon Nov 29 14:19:46 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="1577046">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1619]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="1336" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:19:46 EST 2021" starttimestamp="1638212009072" timestamp="1577046" />
  <Command __id="1338" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:19:46 EST 2021" starttimestamp="1638212009072" timestamp="1577048" />
  <Command __id="1339" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:19:46 EST 2021" starttimestamp="1638212009072" timestamp="1577049" />
  <Command __id="1340" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:19:46 EST 2021" starttimestamp="1638212009072" timestamp="1577049" />
  <Command __id="1341" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:19:46 EST 2021" starttimestamp="1638212009072" timestamp="1577049" />
  <Command __id="1342" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:19:46 EST 2021" starttimestamp="1638212009072" timestamp="1577050" />
  <Command __id="1343" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:19:46 EST 2021" starttimestamp="1638212009072" timestamp="1577050" />
  <Command __id="1344" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:19:46 EST 2021" starttimestamp="1638212009072" timestamp="1577052" />
  <Command __id="1345" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:19:46 EST 2021" starttimestamp="1638212009072" timestamp="1577052" />
  <Command __id="1346" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:19:46 EST 2021" starttimestamp="1638212009072" timestamp="1577052" />
  <DocumentChange __id="1015" _type="Insert" date="Mon Nov 29 14:16:53 EST 2021" docASTNodeCount="280" docActiveCodeLength="1527" docExpressionCount="200" docLength="1654" length="8" offset="1296" repeat="8" starttimestamp="1638212009072" timestamp="1404860" timestamp2="1406076">
    <text><![CDATA[rotected]]></text>
  </DocumentChange>
  <DocumentChange __id="1108" _type="Replace" date="Mon Nov 29 14:17:57 EST 2021" docASTNodeCount="281" docActiveCodeLength="1520" docExpressionCount="201" docLength="1647" endLine="39" insertionLength="1" int_docASTNodeCount="281" int_docActiveCodeLength="1519" int_docExpressionCount="201" int_docLength="1646" length="8" offset="1296" startLine="39" starttimestamp="1638212009072" timestamp="1468028">
    <deletedText><![CDATA[rotected]]></deletedText>
    <insertedText><![CDATA[r]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1110" _type="Insert" date="Mon Nov 29 14:17:57 EST 2021" docASTNodeCount="280" docActiveCodeLength="1525" docExpressionCount="200" docLength="1652" length="5" offset="1297" repeat="5" starttimestamp="1638212009072" timestamp="1468108" timestamp2="1468455">
    <text><![CDATA[ivate]]></text>
  </DocumentChange>
  <Command __id="1142" _type="DiffBasedFileOpenCommand" date="Mon Nov 29 14:17:59 EST 2021" docASTNodeCount="296" docActiveCodeLength="1630" docExpressionCount="214" docLength="1757" projectName="a5" starttimestamp="1638212009072" timestamp="1470551">
    <filePath><![CDATA[C:\Users\rarael\OneDrive\Documents\COMPSCIENCE\COMP 524\a5\src\functional\FunctionEvaluator.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package functional;¶¶import main.lisp.evaluator.Environment;¶import main.lisp.evaluator.Evaluator;¶import main.lisp.evaluator.function.FunctionFactory;¶import main.lisp.evaluator.function.Lambda;¶import main.lisp.evaluator.function.LambdaFactory;¶import main.lisp.parser.terms.IdentifierAtom;¶import main.lisp.parser.terms.SExpression;¶¶public class FunctionEvaluator implements Evaluator{¶¶	@Override¶	public SExpression eval(SExpression arg0, Environment arg1) {¶		IdentifierAtom[] argNames1 = new IdentifierAtom[1];¶		SExpression current = arg0.getTail().getHead().getTail().getHead();¶		int index = 0;¶		if(current.isAtom()) {¶			argNames1 = new IdentifierAtom[0];¶			return LambdaFactory.newInstance(argNames1, arg0.getTail().getTail());¶		}¶		while(!current.getTail().isNIL()) {¶			// expand size if you still need to add arg names¶			argNames1 = expandArray(argNames1, index);¶			argNames1[index] = (IdentifierAtom) current.getHead();¶			current = current.getTail();¶			index++;¶		}¶		//add last argument (the last argument has nil as its tail)¶		if (!current.getHead().isNIL()) {¶			argNames1 = expandArray(argNames1, index);¶			argNames1[index] = (IdentifierAtom) current.getHead();¶		}¶		¶		Lambda lambda =  LambdaFactory.newInstance(argNames1, arg0.getTail().getHead().getTail().getTail());¶		return FunctionFactory.newInstance(lambda, arg1);¶	}¶	¶	p"), Diff(DELETE,"ublic"), Diff(INSERT,"rotected"), Diff(EQUAL," IdentifierAtom[] expandArray(IdentifierAtom[] array, int index) {¶		if (index == array.length) {¶			int size = array.length+ 1;¶			IdentifierAtom[] newArray = new IdentifierAtom[size];¶			for (int i = 0; i < array.length; i++) {¶				newArray[i] = array[i];¶			}¶			//array = newArray;¶			return newArray;¶		}¶		return array;¶		¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package functional;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.evaluator.function.FunctionFactory;
import main.lisp.evaluator.function.Lambda;
import main.lisp.evaluator.function.LambdaFactory;
import main.lisp.parser.terms.IdentifierAtom;
import main.lisp.parser.terms.SExpression;

public class FunctionEvaluator implements Evaluator{

	@Override
	public SExpression eval(SExpression arg0, Environment arg1) {
		IdentifierAtom[] argNames1 = new IdentifierAtom[1];
		SExpression current = arg0.getTail().getHead().getTail().getHead();
		int index = 0;
		if(current.isAtom()) {
			argNames1 = new IdentifierAtom[0];
			return LambdaFactory.newInstance(argNames1, arg0.getTail().getTail());
		}
		while(!current.getTail().isNIL()) {
			// expand size if you still need to add arg names
			argNames1 = expandArray(argNames1, index);
			argNames1[index] = (IdentifierAtom) current.getHead();
			current = current.getTail();
			index++;
		}
		//add last argument (the last argument has nil as its tail)
		if (!current.getHead().isNIL()) {
			argNames1 = expandArray(argNames1, index);
			argNames1[index] = (IdentifierAtom) current.getHead();
		}
		
		Lambda lambda =  LambdaFactory.newInstance(argNames1, arg0.getTail().getHead().getTail().getTail());
		return FunctionFactory.newInstance(lambda, arg1);
	}
	
	protected IdentifierAtom[] expandArray(IdentifierAtom[] array, int index) {
		if (index == array.length) {
			int size = array.length+ 1;
			IdentifierAtom[] newArray = new IdentifierAtom[size];
			for (int i = 0; i < array.length; i++) {
				newArray[i] = array[i];
			}
			//array = newArray;
			return newArray;
		}
		return array;
		
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="1144" _type="Delete" date="Mon Nov 29 14:18:00 EST 2021" docASTNodeCount="297" docActiveCodeLength="1623" docExpressionCount="215" docLength="1750" endLine="38" length="7" offset="1400" repeat="7" startLine="38" starttimestamp="1638212009072" timestamp="1471587" timestamp2="1472513">
    <text><![CDATA[otected]]></text>
  </DocumentChange>
  <DocumentChange __id="1158" _type="Insert" date="Mon Nov 29 14:18:02 EST 2021" docASTNodeCount="296" docActiveCodeLength="1628" docExpressionCount="214" docLength="1755" length="5" offset="1400" repeat="5" starttimestamp="1638212009072" timestamp="1473129" timestamp2="1473548">
    <text><![CDATA[ivate]]></text>
  </DocumentChange>
  <Command __id="1179" _type="DiffBasedFileOpenCommand" date="Mon Nov 29 14:18:05 EST 2021" docASTNodeCount="441" docActiveCodeLength="2816" docExpressionCount="319" docLength="2816" projectName="a5" starttimestamp="1638212009072" timestamp="1476425">
    <filePath><![CDATA[C:\Users\rarael\OneDrive\Documents\COMPSCIENCE\COMP 524\a5\src\functional\FuncallEvaluator.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package functional;¶¶import java.util.Optional;¶¶import main.lisp.evaluator.BuiltinOperationManagerSingleton;¶import main.lisp.evaluator.Environment;¶import main.lisp.evaluator.Evaluator;¶import main.lisp.evaluator.function.Function;¶import main.lisp.evaluator.function.Lambda;¶import main.lisp.parser.terms.IdentifierAtom;¶import main.lisp.parser.terms.SExpression;¶¶public class FuncallEvaluator implements Evaluator {¶¶	@Override¶	public SExpression eval(SExpression arg0, Environment arg1) {¶		SExpression current = arg0.getTail();¶		¶		SExpression lambdaOrFunction = null;¶		if (!current.getHead().isAtom()) {¶			lambdaOrFunction = current.getHead().eval(arg1);¶		}¶		if (lambdaOrFunction instanceof Lambda) {¶			Environment childEnvironment = arg1.newChild();¶			return evaluateLambda((Lambda) lambdaOrFunction, childEnvironment, arg1, current.getTail());¶		} else if(lambdaOrFunction instanceof Function) {¶			return evaluateLambda (((Function) lambdaOrFunction).getLambda(), ((Function) lambdaOrFunction).getEnvironment().newChild(), ((Function) lambdaOrFunction).getEnvironment(),current.getTail() );¶		} else {¶			final Optional<SExpression> isLambda = arg1.lookup((IdentifierAtom) current.getHead());¶			if (!isLambda.isEmpty() && isLambda.get() instanceof Lambda) {¶				Environment childEnvironment = arg1.newChild();¶				return evaluateLambda((Lambda) isLambda.get(), childEnvironment, arg1, current.getTail());¶			} else if (!isLambda.isEmpty() && isLambda.get() instanceof Function) {¶				¶				return evaluateLambda (((Function) isLambda.get()).getLambda(), ((Function) isLambda.get()).getEnvironment().newChild(), ((Function) isLambda.get()).getEnvironment(),current.getTail() ); ¶			}¶			¶			return null;¶		}¶	}¶	¶	p"), Diff(DELETE,"ublic"), Diff(INSERT,"rotected"), Diff(EQUAL," SExpression basicEvaluator(SExpression expr, Environment environment) {¶		if (expr instanceof IdentifierAtom) {¶			String operator = ((IdentifierAtom)expr).getValue();¶			Evaluator eval = BuiltinOperationManagerSingleton.get().getEvaluator(operator);¶			if (eval == null) {¶				throw new IllegalStateException("No evaluator registered for operator '" + operator + "'");¶			}¶			return eval.eval(expr, environment);¶		} else {¶			throw new IllegalStateException("Expression does not start with an operator");¶		}¶	}¶	¶	p"), Diff(DELETE,"ublic"), Diff(INSERT,"rotected"), Diff(EQUAL," SExpression evaluateLambda(Lambda lambda, Environment childEnvironment, Environment environment, SExpression current) {¶		IdentifierAtom[] argNames = lambda.getArgumentNames();¶		for(int i = 0; i < argNames.length; i++) {¶			if (current.isAtom()) {¶				childEnvironment.assign(argNames[i], current);¶			} else {¶				childEnvironment.assign(argNames[i], current.getHead().eval(environment));¶				current = current.getTail();¶			}¶		}¶	return lambda.eval(childEnvironment);¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package functional;

import java.util.Optional;

import main.lisp.evaluator.BuiltinOperationManagerSingleton;
import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.evaluator.function.Function;
import main.lisp.evaluator.function.Lambda;
import main.lisp.parser.terms.IdentifierAtom;
import main.lisp.parser.terms.SExpression;

public class FuncallEvaluator implements Evaluator {

	@Override
	public SExpression eval(SExpression arg0, Environment arg1) {
		SExpression current = arg0.getTail();
		
		SExpression lambdaOrFunction = null;
		if (!current.getHead().isAtom()) {
			lambdaOrFunction = current.getHead().eval(arg1);
		}
		if (lambdaOrFunction instanceof Lambda) {
			Environment childEnvironment = arg1.newChild();
			return evaluateLambda((Lambda) lambdaOrFunction, childEnvironment, arg1, current.getTail());
		} else if(lambdaOrFunction instanceof Function) {
			return evaluateLambda (((Function) lambdaOrFunction).getLambda(), ((Function) lambdaOrFunction).getEnvironment().newChild(), ((Function) lambdaOrFunction).getEnvironment(),current.getTail() );
		} else {
			final Optional<SExpression> isLambda = arg1.lookup((IdentifierAtom) current.getHead());
			if (!isLambda.isEmpty() && isLambda.get() instanceof Lambda) {
				Environment childEnvironment = arg1.newChild();
				return evaluateLambda((Lambda) isLambda.get(), childEnvironment, arg1, current.getTail());
			} else if (!isLambda.isEmpty() && isLambda.get() instanceof Function) {
				
				return evaluateLambda (((Function) isLambda.get()).getLambda(), ((Function) isLambda.get()).getEnvironment().newChild(), ((Function) isLambda.get()).getEnvironment(),current.getTail() ); 
			}
			
			return null;
		}
	}
	
	protected SExpression basicEvaluator(SExpression expr, Environment environment) {
		if (expr instanceof IdentifierAtom) {
			String operator = ((IdentifierAtom)expr).getValue();
			Evaluator eval = BuiltinOperationManagerSingleton.get().getEvaluator(operator);
			if (eval == null) {
				throw new IllegalStateException("No evaluator registered for operator '" + operator + "'");
			}
			return eval.eval(expr, environment);
		} else {
			throw new IllegalStateException("Expression does not start with an operator");
		}
	}
	
	protected SExpression evaluateLambda(Lambda lambda, Environment childEnvironment, Environment environment, SExpression current) {
		IdentifierAtom[] argNames = lambda.getArgumentNames();
		for(int i = 0; i < argNames.length; i++) {
			if (current.isAtom()) {
				childEnvironment.assign(argNames[i], current);
			} else {
				childEnvironment.assign(argNames[i], current.getHead().eval(environment));
				current = current.getTail();
			}
		}
	return lambda.eval(childEnvironment);
	}

}
]]></snapshot>
  </Command>
  <Command __id="1182" _type="DiffBasedFileOpenCommand" date="Mon Nov 29 14:18:06 EST 2021" docASTNodeCount="291" docActiveCodeLength="1947" docExpressionCount="204" docLength="2050" projectName="a5" starttimestamp="1638212009072" timestamp="1477353">
    <filePath><![CDATA[C:\Users\rarael\OneDrive\Documents\COMPSCIENCE\COMP 524\a5\src\evaluators\LambdaSExpressionEvaluator.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package evaluators;¶¶"), Diff(DELETE,"import java.util.Optional;¶¶"), Diff(EQUAL,"import main.lisp.evaluator.BasicExpressionEvaluator;¶import main.lisp.evaluator.BuiltinOperationManagerSingleton;¶import main.lisp.evaluator.Environment;¶import main.lisp.evaluator.Evaluator;¶import main.lisp.evaluator.function.Lambda;¶import main.lisp.parser.terms.IdentifierAtom;¶import main.lisp.parser.terms.SExpression;¶¶public class LambdaSExpressionEvaluator extends BasicExpressionEvaluator {¶	@Override¶	public SExpression eval(SExpression expr, Environment environment) {¶		// evaluates lambda first¶		if (!expr.getHead().isAtom()) {¶			SExpression eval = basicEvaluator(expr.getHead(), environment);¶			if (eval instanceof Lambda) {¶				Environment childEnvironment = environment.newChild();¶				return evaluateLambda((Lambda) eval, childEnvironment, environment, expr.getTail());¶			}¶		}¶			// when it is not a lambda¶			return basicEvaluator(expr, environment);¶		}¶	¶	// produces your lambda evaluation¶	p"), Diff(DELETE,"ublic"), Diff(INSERT,"rotected"), Diff(EQUAL," SExpression evaluateLambda(Lambda lambda, Environment childEnvironment, Environment environment, SExpression current) {¶		IdentifierAtom[] argNames = lambda.getArgumentNames();¶		for(int i = 0; i < argNames.length; i++) {¶			if (current.isAtom()) {¶				childEnvironment.assign(argNames[i], current);¶			} else {¶				childEnvironment.assign(argNames[i], current.getHead().eval(environment));¶				current = current.getTail();¶			}¶		}¶	return lambda.eval(childEnvironment);¶	}¶	¶	// basic evaluator¶	p"), Diff(DELETE,"ublic"), Diff(INSERT,"rotected"), Diff(EQUAL," SExpression basicEvaluator(SExpression expr, Environment environment) {¶		if (expr.getHead() instanceof IdentifierAtom) {¶			String operator = ((IdentifierAtom)expr.getHead()).getValue();¶			Evaluator eval = BuiltinOperationManagerSingleton.get().getEvaluator(operator);¶			if (eval == null) {¶				throw new IllegalStateException("No evaluator registered for operator '" + operator + "'");¶			}¶			return eval.eval(expr, environment);¶		} else {¶			throw new IllegalStateException("Expression does not start with an operator");¶		}¶	}¶}¶¶")]]]></diff>
    <snapshot><![CDATA[package evaluators;

import main.lisp.evaluator.BasicExpressionEvaluator;
import main.lisp.evaluator.BuiltinOperationManagerSingleton;
import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.evaluator.function.Lambda;
import main.lisp.parser.terms.IdentifierAtom;
import main.lisp.parser.terms.SExpression;

public class LambdaSExpressionEvaluator extends BasicExpressionEvaluator {
	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		// evaluates lambda first
		if (!expr.getHead().isAtom()) {
			SExpression eval = basicEvaluator(expr.getHead(), environment);
			if (eval instanceof Lambda) {
				Environment childEnvironment = environment.newChild();
				return evaluateLambda((Lambda) eval, childEnvironment, environment, expr.getTail());
			}
		}
			// when it is not a lambda
			return basicEvaluator(expr, environment);
		}
	
	// produces your lambda evaluation
	protected SExpression evaluateLambda(Lambda lambda, Environment childEnvironment, Environment environment, SExpression current) {
		IdentifierAtom[] argNames = lambda.getArgumentNames();
		for(int i = 0; i < argNames.length; i++) {
			if (current.isAtom()) {
				childEnvironment.assign(argNames[i], current);
			} else {
				childEnvironment.assign(argNames[i], current.getHead().eval(environment));
				current = current.getTail();
			}
		}
	return lambda.eval(childEnvironment);
	}
	
	// basic evaluator
	protected SExpression basicEvaluator(SExpression expr, Environment environment) {
		if (expr.getHead() instanceof IdentifierAtom) {
			String operator = ((IdentifierAtom)expr.getHead()).getValue();
			Evaluator eval = BuiltinOperationManagerSingleton.get().getEvaluator(operator);
			if (eval == null) {
				throw new IllegalStateException("No evaluator registered for operator '" + operator + "'");
			}
			return eval.eval(expr, environment);
		} else {
			throw new IllegalStateException("Expression does not start with an operator");
		}
	}
}

]]></snapshot>
  </Command>
  <Command __id="1184" _type="DiffBasedFileOpenCommand" date="Mon Nov 29 14:18:07 EST 2021" docASTNodeCount="441" docActiveCodeLength="2816" docExpressionCount="319" docLength="2816" projectName="a5" starttimestamp="1638212009072" timestamp="1478505">
    <filePath><![CDATA[C:\Users\rarael\OneDrive\Documents\COMPSCIENCE\COMP 524\a5\src\functional\FuncallEvaluator.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package functional;¶¶import java.util.Optional;¶¶import main.lisp.evaluator.BuiltinOperationManagerSingleton;¶import main.lisp.evaluator.Environment;¶import main.lisp.evaluator.Evaluator;¶import main.lisp.evaluator.function.Function;¶import main.lisp.evaluator.function.Lambda;¶import main.lisp.parser.terms.IdentifierAtom;¶import main.lisp.parser.terms.SExpression;¶¶public class FuncallEvaluator implements Evaluator {¶¶	@Override¶	public SExpression eval(SExpression arg0, Environment arg1) {¶		SExpression current = arg0.getTail();¶		¶		SExpression lambdaOrFunction = null;¶		if (!current.getHead().isAtom()) {¶			lambdaOrFunction = current.getHead().eval(arg1);¶		}¶		if (lambdaOrFunction instanceof Lambda) {¶			Environment childEnvironment = arg1.newChild();¶			return evaluateLambda((Lambda) lambdaOrFunction, childEnvironment, arg1, current.getTail());¶		} else if(lambdaOrFunction instanceof Function) {¶			return evaluateLambda (((Function) lambdaOrFunction).getLambda(), ((Function) lambdaOrFunction).getEnvironment().newChild(), ((Function) lambdaOrFunction).getEnvironment(),current.getTail() );¶		} else {¶			final Optional<SExpression> isLambda = arg1.lookup((IdentifierAtom) current.getHead());¶			if (!isLambda.isEmpty() && isLambda.get() instanceof Lambda) {¶				Environment childEnvironment = arg1.newChild();¶				return evaluateLambda((Lambda) isLambda.get(), childEnvironment, arg1, current.getTail());¶			} else if (!isLambda.isEmpty() && isLambda.get() instanceof Function) {¶				¶				return evaluateLambda (((Function) isLambda.get()).getLambda(), ((Function) isLambda.get()).getEnvironment().newChild(), ((Function) isLambda.get()).getEnvironment(),current.getTail() ); ¶			}¶			¶			return null;¶		}¶	}¶	¶	protected SExpression basicEvaluator(SExpression expr, Environment environment) {¶		if (expr instanceof IdentifierAtom) {¶			String operator = ((IdentifierAtom)expr).getValue();¶			Evaluator eval = BuiltinOperationManagerSingleton.get().getEvaluator(operator);¶			if (eval == null) {¶				throw new IllegalStateException("No evaluator registered for operator '" + operator + "'");¶			}¶			return eval.eval(expr, environment);¶		} else {¶			throw new IllegalStateException("Expression does not start with an operator");¶		}¶	}¶	¶	protected SExpression evaluateLambda(Lambda lambda, Environment childEnvironment, Environment environment, SExpression current) {¶		IdentifierAtom[] argNames = lambda.getArgumentNames();¶		for(int i = 0; i < argNames.length; i++) {¶			if (current.isAtom()) {¶				childEnvironment.assign(argNames[i], current);¶			} else {¶				childEnvironment.assign(argNames[i], current.getHead().eval(environment));¶				current = current.getTail();¶			}¶		}¶	return lambda.eval(childEnvironment);¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1187" _type="DiffBasedFileOpenCommand" date="Mon Nov 29 14:18:08 EST 2021" docASTNodeCount="123" docActiveCodeLength="686" docExpressionCount="90" docLength="758" projectName="a5" starttimestamp="1638212009072" timestamp="1479416">
    <filePath><![CDATA[C:\Users\rarael\OneDrive\Documents\COMPSCIENCE\COMP 524\a5\src\a5\VariableEval.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package a5;¶¶import main.lisp.evaluator.Environment;¶import main.lisp.parser.terms.IdentifierAtom;¶import main.lisp.parser.terms.SExpression;¶import main.lisp.scanner.tokens.Token;¶import main.lisp.parser.terms.IdentifierAtomFactory;¶¶public class VariableEval extends IdentifierAtom {¶¶	public VariableEval(String string) {¶		super(string);¶	}¶	public VariableEval(Token token) {¶		super(token);¶	}¶"), Diff(INSERT,"	¶	@Override"), Diff(EQUAL,"¶	public SExpression eval(Environment arg0) {¶		IdentifierAtomFactory.setClass(this.getClass());¶	//	SExpression expr = arg0.lookup(this).get();¶	//	return expr.eval(arg0);¶		if (arg0.lookup(this).isEmpty() && arg0.getParent() != null) {¶			return arg0.lookup(this).get();¶		}¶		return arg0.lookup(this).get();¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package a5;

import main.lisp.evaluator.Environment;
import main.lisp.parser.terms.IdentifierAtom;
import main.lisp.parser.terms.SExpression;
import main.lisp.scanner.tokens.Token;
import main.lisp.parser.terms.IdentifierAtomFactory;

public class VariableEval extends IdentifierAtom {

	public VariableEval(String string) {
		super(string);
	}
	public VariableEval(Token token) {
		super(token);
	}
	
	@Override
	public SExpression eval(Environment arg0) {
		IdentifierAtomFactory.setClass(this.getClass());
	//	SExpression expr = arg0.lookup(this).get();
	//	return expr.eval(arg0);
		if (arg0.lookup(this).isEmpty() && arg0.getParent() != null) {
			return arg0.lookup(this).get();
		}
		return arg0.lookup(this).get();
	}

}
]]></snapshot>
  </Command>
  <Command __id="1189" _type="DiffBasedFileOpenCommand" date="Mon Nov 29 14:18:11 EST 2021" docASTNodeCount="207" docActiveCodeLength="1237" docExpressionCount="136" docLength="1271" projectName="a5" starttimestamp="1638212009072" timestamp="1482013">
    <filePath><![CDATA[C:\Users\rarael\OneDrive\Documents\COMPSCIENCE\COMP 524\a5\src\environments\EnvironmentImplementation.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package environments;

import java.util.Optional;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.environment.AbstractEnvironment;
import main.lisp.evaluator.function.Function;
import main.lisp.parser.terms.IdentifierAtom;
import main.lisp.parser.terms.SExpression;

public class EnvironmentImplementation extends AbstractEnvironment {

	public EnvironmentImplementation() {
		super();
	}
	
	public EnvironmentImplementation(Environment parent) {
		super(parent);
	}
	@Override
	public void assign(IdentifierAtom arg0, SExpression arg1) {
		this.put(arg0, arg1);
	}

	@Override
	public void assignFun(IdentifierAtom arg0, Function arg1) {
		this.getFunctionMap().put(arg0.toString(), arg1);
	}

	@Override
	public Environment copy() {
		return this;
	}

	@Override
	public Optional<SExpression> lookup(IdentifierAtom arg0) {
		if(this.get(arg0).isEmpty() && this.getParent() != null) {
			return this.getParent().get(arg0);
		}
		return this.get(arg0);
	}

	@Override
	public Optional<Function> lookupFun(IdentifierAtom arg0) {
		// TODO Auto-generated method stub
		return this.getFun(arg0);
	}

	@Override
	public Environment newChild() {
		return new EnvironmentImplementation(this);
		
	}

}
]]></snapshot>
  </Command>
  <Command __id="1200" _type="DiffBasedFileOpenCommand" date="Mon Nov 29 14:18:11 EST 2021" docASTNodeCount="123" docActiveCodeLength="686" docExpressionCount="90" docLength="758" projectName="a5" starttimestamp="1638212009072" timestamp="1482925">
    <filePath><![CDATA[C:\Users\rarael\OneDrive\Documents\COMPSCIENCE\COMP 524\a5\src\a5\VariableEval.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package a5;¶¶import main.lisp.evaluator.Environment;¶import main.lisp.parser.terms.IdentifierAtom;¶import main.lisp.parser.terms.SExpression;¶import main.lisp.scanner.tokens.Token;¶import main.lisp.parser.terms.IdentifierAtomFactory;¶¶public class VariableEval extends IdentifierAtom {¶¶	public VariableEval(String string) {¶		super(string);¶	}¶	public VariableEval(Token token) {¶		super(token);¶	}¶	¶	@Override¶	public SExpression eval(Environment arg0) {¶		IdentifierAtomFactory.setClass(this.getClass());¶	//	SExpression expr = arg0.lookup(this).get();¶	//	return expr.eval(arg0);¶		if (arg0.lookup(this).isEmpty() && arg0.getParent() != null) {¶			return arg0.lookup(this).get();¶		}¶		return arg0.lookup(this).get();¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1202" _type="DiffBasedFileOpenCommand" date="Mon Nov 29 14:18:14 EST 2021" docASTNodeCount="280" docActiveCodeLength="1525" docExpressionCount="200" docLength="1652" projectName="a5" starttimestamp="1638212009072" timestamp="1485571">
    <filePath><![CDATA[C:\Users\rarael\OneDrive\Documents\COMPSCIENCE\COMP 524\a5\src\functional\LambdaEvaluator.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package functional;¶¶import java.util.ArrayList;¶import java.util.List;¶¶import main.lisp.evaluator.Environment;¶import main.lisp.evaluator.Evaluator;¶import main.lisp.evaluator.function.Lambda;¶import main.lisp.evaluator.function.LambdaFactory;¶import main.lisp.parser.terms.IdentifierAtom;¶import main.lisp.parser.terms.SExpression;¶¶public class LambdaEvaluator implements Evaluator {¶¶	@Override¶	public SExpression eval(SExpression arg0, Environment arg1) {¶		IdentifierAtom[] argNames1 = new IdentifierAtom[1];¶		SExpression current = arg0.getTail().getHead();¶		int index = 0;¶		if(current.isAtom()) {¶			argNames1 = new IdentifierAtom[0];¶			return LambdaFactory.newInstance(argNames1, arg0.getTail().getTail());¶		}¶		while(!current.getTail().isNIL()) {¶			// expand size if you still need to add arg names¶			argNames1 = expandArray(argNames1, index);¶			argNames1[index] = (IdentifierAtom) current.getHead();¶			current = current.getTail();¶			index++;¶		}¶		//add last argument (the last argument has nil as its tail)¶		if (!current.getHead().isNIL()) {¶			argNames1 = expandArray(argNames1, index);¶			argNames1[index] = (IdentifierAtom) current.getHead();¶		}¶		¶		return LambdaFactory.newInstance(argNames1, arg0.getTail().getTail());¶	}¶	¶	p"), Diff(DELETE,"ublic"), Diff(INSERT,"rivate"), Diff(EQUAL," IdentifierAtom[] expandArray(IdentifierAtom[] array, int index) {¶		if (index == array.length) {¶			int size = array.length+ 1;¶			IdentifierAtom[] newArray = new IdentifierAtom[size];¶			for (int i = 0; i < array.length; i++) {¶				newArray[i] = array[i];¶			}¶			//array = newArray;¶			return newArray;¶		}¶		return array;¶		¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package functional;

import java.util.ArrayList;
import java.util.List;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.evaluator.function.Lambda;
import main.lisp.evaluator.function.LambdaFactory;
import main.lisp.parser.terms.IdentifierAtom;
import main.lisp.parser.terms.SExpression;

public class LambdaEvaluator implements Evaluator {

	@Override
	public SExpression eval(SExpression arg0, Environment arg1) {
		IdentifierAtom[] argNames1 = new IdentifierAtom[1];
		SExpression current = arg0.getTail().getHead();
		int index = 0;
		if(current.isAtom()) {
			argNames1 = new IdentifierAtom[0];
			return LambdaFactory.newInstance(argNames1, arg0.getTail().getTail());
		}
		while(!current.getTail().isNIL()) {
			// expand size if you still need to add arg names
			argNames1 = expandArray(argNames1, index);
			argNames1[index] = (IdentifierAtom) current.getHead();
			current = current.getTail();
			index++;
		}
		//add last argument (the last argument has nil as its tail)
		if (!current.getHead().isNIL()) {
			argNames1 = expandArray(argNames1, index);
			argNames1[index] = (IdentifierAtom) current.getHead();
		}
		
		return LambdaFactory.newInstance(argNames1, arg0.getTail().getTail());
	}
	
	private IdentifierAtom[] expandArray(IdentifierAtom[] array, int index) {
		if (index == array.length) {
			int size = array.length+ 1;
			IdentifierAtom[] newArray = new IdentifierAtom[size];
			for (int i = 0; i < array.length; i++) {
				newArray[i] = array[i];
			}
			//array = newArray;
			return newArray;
		}
		return array;
		
	}

}
]]></snapshot>
  </Command>
  <Command __id="1205" _type="DiffBasedFileOpenCommand" date="Mon Nov 29 14:18:18 EST 2021" docASTNodeCount="123" docActiveCodeLength="686" docExpressionCount="90" docLength="758" projectName="a5" starttimestamp="1638212009072" timestamp="1489310">
    <filePath><![CDATA[C:\Users\rarael\OneDrive\Documents\COMPSCIENCE\COMP 524\a5\src\a5\VariableEval.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package a5;¶¶import main.lisp.evaluator.Environment;¶import main.lisp.parser.terms.IdentifierAtom;¶import main.lisp.parser.terms.SExpression;¶import main.lisp.scanner.tokens.Token;¶import main.lisp.parser.terms.IdentifierAtomFactory;¶¶public class VariableEval extends IdentifierAtom {¶¶	public VariableEval(String string) {¶		super(string);¶	}¶	public VariableEval(Token token) {¶		super(token);¶	}¶	¶	@Override¶	public SExpression eval(Environment arg0) {¶		IdentifierAtomFactory.setClass(this.getClass());¶	//	SExpression expr = arg0.lookup(this).get();¶	//	return expr.eval(arg0);¶		if (arg0.lookup(this).isEmpty() && arg0.getParent() != null) {¶			return arg0.lookup(this).get();¶		}¶		return arg0.lookup(this).get();¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1208" _type="DiffBasedFileOpenCommand" date="Mon Nov 29 14:18:20 EST 2021" docASTNodeCount="441" docActiveCodeLength="2816" docExpressionCount="319" docLength="2816" projectName="a5" starttimestamp="1638212009072" timestamp="1491097">
    <filePath><![CDATA[C:\Users\rarael\OneDrive\Documents\COMPSCIENCE\COMP 524\a5\src\functional\FuncallEvaluator.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package functional;¶¶import java.util.Optional;¶¶import main.lisp.evaluator.BuiltinOperationManagerSingleton;¶import main.lisp.evaluator.Environment;¶import main.lisp.evaluator.Evaluator;¶import main.lisp.evaluator.function.Function;¶import main.lisp.evaluator.function.Lambda;¶import main.lisp.parser.terms.IdentifierAtom;¶import main.lisp.parser.terms.SExpression;¶¶public class FuncallEvaluator implements Evaluator {¶¶	@Override¶	public SExpression eval(SExpression arg0, Environment arg1) {¶		SExpression current = arg0.getTail();¶		¶		SExpression lambdaOrFunction = null;¶		if (!current.getHead().isAtom()) {¶			lambdaOrFunction = current.getHead().eval(arg1);¶		}¶		if (lambdaOrFunction instanceof Lambda) {¶			Environment childEnvironment = arg1.newChild();¶			return evaluateLambda((Lambda) lambdaOrFunction, childEnvironment, arg1, current.getTail());¶		} else if(lambdaOrFunction instanceof Function) {¶			return evaluateLambda (((Function) lambdaOrFunction).getLambda(), ((Function) lambdaOrFunction).getEnvironment().newChild(), ((Function) lambdaOrFunction).getEnvironment(),current.getTail() );¶		} else {¶			final Optional<SExpression> isLambda = arg1.lookup((IdentifierAtom) current.getHead());¶			if (!isLambda.isEmpty() && isLambda.get() instanceof Lambda) {¶				Environment childEnvironment = arg1.newChild();¶				return evaluateLambda((Lambda) isLambda.get(), childEnvironment, arg1, current.getTail());¶			} else if (!isLambda.isEmpty() && isLambda.get() instanceof Function) {¶				¶				return evaluateLambda (((Function) isLambda.get()).getLambda(), ((Function) isLambda.get()).getEnvironment().newChild(), ((Function) isLambda.get()).getEnvironment(),current.getTail() ); ¶			}¶			¶			return null;¶		}¶	}¶	¶	protected SExpression basicEvaluator(SExpression expr, Environment environment) {¶		if (expr instanceof IdentifierAtom) {¶			String operator = ((IdentifierAtom)expr).getValue();¶			Evaluator eval = BuiltinOperationManagerSingleton.get().getEvaluator(operator);¶			if (eval == null) {¶				throw new IllegalStateException("No evaluator registered for operator '" + operator + "'");¶			}¶			return eval.eval(expr, environment);¶		} else {¶			throw new IllegalStateException("Expression does not start with an operator");¶		}¶	}¶	¶	protected SExpression evaluateLambda(Lambda lambda, Environment childEnvironment, Environment environment, SExpression current) {¶		IdentifierAtom[] argNames = lambda.getArgumentNames();¶		for(int i = 0; i < argNames.length; i++) {¶			if (current.isAtom()) {¶				childEnvironment.assign(argNames[i], current);¶			} else {¶				childEnvironment.assign(argNames[i], current.getHead().eval(environment));¶				current = current.getTail();¶			}¶		}¶	return lambda.eval(childEnvironment);¶	}¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="1214" _type="Replace" date="Mon Nov 29 14:18:25 EST 2021" docASTNodeCount="443" docActiveCodeLength="2809" docExpressionCount="320" docLength="2809" endLine="41" insertionLength="1" int_docASTNodeCount="443" int_docActiveCodeLength="2808" int_docExpressionCount="320" int_docLength="2808" length="8" offset="1774" startLine="41" starttimestamp="1638212009072" timestamp="1496064">
    <deletedText><![CDATA[rotected]]></deletedText>
    <insertedText><![CDATA[r]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1217" _type="Insert" date="Mon Nov 29 14:18:25 EST 2021" docASTNodeCount="441" docActiveCodeLength="2814" docExpressionCount="319" docLength="2814" length="5" offset="1775" repeat="5" starttimestamp="1638212009072" timestamp="1496151" timestamp2="1496486">
    <text><![CDATA[ivate]]></text>
  </DocumentChange>
  <DocumentChange __id="1249" _type="Replace" date="Mon Nov 29 14:18:32 EST 2021" docASTNodeCount="440" docActiveCodeLength="2806" docExpressionCount="319" docLength="2806" endLine="54" insertionLength="1" int_docASTNodeCount="440" int_docActiveCodeLength="2805" int_docExpressionCount="319" int_docLength="2805" length="9" offset="2313" startLine="54" starttimestamp="1638212009072" timestamp="1502965">
    <deletedText><![CDATA[rotected ]]></deletedText>
    <insertedText><![CDATA[r]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1252" _type="Insert" date="Mon Nov 29 14:18:32 EST 2021" docASTNodeCount="441" docActiveCodeLength="2812" docExpressionCount="319" docLength="2812" length="6" offset="2314" repeat="6" starttimestamp="1638212009072" timestamp="1503028" timestamp2="1503471">
    <text><![CDATA[ivate ]]></text>
  </DocumentChange>
  <Command __id="1281" _type="DiffBasedFileOpenCommand" date="Mon Nov 29 14:18:36 EST 2021" docASTNodeCount="123" docActiveCodeLength="686" docExpressionCount="90" docLength="758" projectName="a5" starttimestamp="1638212009072" timestamp="1507508">
    <filePath><![CDATA[C:\Users\rarael\OneDrive\Documents\COMPSCIENCE\COMP 524\a5\src\a5\VariableEval.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package a5;¶¶import main.lisp.evaluator.Environment;¶import main.lisp.parser.terms.IdentifierAtom;¶import main.lisp.parser.terms.SExpression;¶import main.lisp.scanner.tokens.Token;¶import main.lisp.parser.terms.IdentifierAtomFactory;¶¶public class VariableEval extends IdentifierAtom {¶¶	public VariableEval(String string) {¶		super(string);¶	}¶	public VariableEval(Token token) {¶		super(token);¶	}¶	¶	@Override¶	public SExpression eval(Environment arg0) {¶		IdentifierAtomFactory.setClass(this.getClass());¶	//	SExpression expr = arg0.lookup(this).get();¶	//	return expr.eval(arg0);¶		if (arg0.lookup(this).isEmpty() && arg0.getParent() != null) {¶			return arg0.lookup(this).get();¶		}¶		return arg0.lookup(this).get();¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1302" _type="DiffBasedFileOpenCommand" date="Mon Nov 29 14:18:48 EST 2021" docASTNodeCount="296" docActiveCodeLength="1628" docExpressionCount="214" docLength="1755" projectName="a5" starttimestamp="1638212009072" timestamp="1518961">
    <filePath><![CDATA[C:\Users\rarael\OneDrive\Documents\COMPSCIENCE\COMP 524\a5\src\functional\FunctionEvaluator.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package functional;¶¶import main.lisp.evaluator.Environment;¶import main.lisp.evaluator.Evaluator;¶import main.lisp.evaluator.function.FunctionFactory;¶import main.lisp.evaluator.function.Lambda;¶import main.lisp.evaluator.function.LambdaFactory;¶import main.lisp.parser.terms.IdentifierAtom;¶import main.lisp.parser.terms.SExpression;¶¶public class FunctionEvaluator implements Evaluator{¶¶	@Override¶	public SExpression eval(SExpression arg0, Environment arg1) {¶		IdentifierAtom[] argNames1 = new IdentifierAtom[1];¶		SExpression current = arg0.getTail().getHead().getTail().getHead();¶		int index = 0;¶		if(current.isAtom()) {¶			argNames1 = new IdentifierAtom[0];¶			return LambdaFactory.newInstance(argNames1, arg0.getTail().getTail());¶		}¶		while(!current.getTail().isNIL()) {¶			// expand size if you still need to add arg names¶			argNames1 = expandArray(argNames1, index);¶			argNames1[index] = (IdentifierAtom) current.getHead();¶			current = current.getTail();¶			index++;¶		}¶		//add last argument (the last argument has nil as its tail)¶		if (!current.getHead().isNIL()) {¶			argNames1 = expandArray(argNames1, index);¶			argNames1[index] = (IdentifierAtom) current.getHead();¶		}¶		¶		Lambda lambda =  LambdaFactory.newInstance(argNames1, arg0.getTail().getHead().getTail().getTail());¶		return FunctionFactory.newInstance(lambda, arg1);¶	}¶	¶	pr"), Diff(DELETE,"otec"), Diff(INSERT,"iva"), Diff(EQUAL,"te"), Diff(DELETE,"d"), Diff(EQUAL," IdentifierAtom[] expandArray(IdentifierAtom[] array, int index) {¶		if (index == array.length) {¶			int size = array.length+ 1;¶			IdentifierAtom[] newArray = new IdentifierAtom[size];¶			for (int i = 0; i < array.length; i++) {¶				newArray[i] = array[i];¶			}¶			//array = newArray;¶			return newArray;¶		}¶		return array;¶		¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package functional;

import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.evaluator.function.FunctionFactory;
import main.lisp.evaluator.function.Lambda;
import main.lisp.evaluator.function.LambdaFactory;
import main.lisp.parser.terms.IdentifierAtom;
import main.lisp.parser.terms.SExpression;

public class FunctionEvaluator implements Evaluator{

	@Override
	public SExpression eval(SExpression arg0, Environment arg1) {
		IdentifierAtom[] argNames1 = new IdentifierAtom[1];
		SExpression current = arg0.getTail().getHead().getTail().getHead();
		int index = 0;
		if(current.isAtom()) {
			argNames1 = new IdentifierAtom[0];
			return LambdaFactory.newInstance(argNames1, arg0.getTail().getTail());
		}
		while(!current.getTail().isNIL()) {
			// expand size if you still need to add arg names
			argNames1 = expandArray(argNames1, index);
			argNames1[index] = (IdentifierAtom) current.getHead();
			current = current.getTail();
			index++;
		}
		//add last argument (the last argument has nil as its tail)
		if (!current.getHead().isNIL()) {
			argNames1 = expandArray(argNames1, index);
			argNames1[index] = (IdentifierAtom) current.getHead();
		}
		
		Lambda lambda =  LambdaFactory.newInstance(argNames1, arg0.getTail().getHead().getTail().getTail());
		return FunctionFactory.newInstance(lambda, arg1);
	}
	
	private IdentifierAtom[] expandArray(IdentifierAtom[] array, int index) {
		if (index == array.length) {
			int size = array.length+ 1;
			IdentifierAtom[] newArray = new IdentifierAtom[size];
			for (int i = 0; i < array.length; i++) {
				newArray[i] = array[i];
			}
			//array = newArray;
			return newArray;
		}
		return array;
		
	}

}
]]></snapshot>
  </Command>
  <Command __id="1305" _type="DiffBasedFileOpenCommand" date="Mon Nov 29 14:18:48 EST 2021" docASTNodeCount="233" docActiveCodeLength="1509" docExpressionCount="173" docLength="1683" projectName="a5" starttimestamp="1638212009072" timestamp="1519711">
    <filePath><![CDATA[C:\Users\rarael\OneDrive\Documents\COMPSCIENCE\COMP 524\a5\src\evaluators\StringFormats.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package evaluators;
import main.lisp.parser.terms.AbstractSExpression;
import main.lisp.parser.terms.BasicExpression;
import main.lisp.parser.terms.SExpression;
public class StringFormats extends BasicExpression{

	public StringFormats(SExpression head, SExpression tail) {
		super(head, tail);
	}
	@Override
	public String toString() {
		if(this.isNIL()) {
			return this.toStringAsSExpression();
		}
		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();
	}
	@Override
	public String toStringAsSExpressionDeep() {
		return "(" + this.getHead().toStringAsSExpressionDeep() + " . " + this.getTail().toStringAsSExpressionDeep() + ")";
	}
	
	@Override
	public String toStringAsSExpression() {
		return "(" + this.getHead().toString() + " . " + this.getTail().toString() + ")";
	}
	@Override
	public String toStringAsListHelperPublic() {
		if (this.getTail().isNIL()) {
			return this.getHead().toString();
		}else {
			return this.getHead().toString() + " " + ((AbstractSExpression) this.getTail()).toStringAsListHelperPublic();
		}
		
	}
	@Override
	public String toStringAsList() {
			// does the same thing as toStringas list deep....need to change
			return "(" + this.toStringAsListHelperPublic() + ")";
	}

	@Override
	public boolean isList() {
		// if head is a non nil atom and tail is nil, is a list
		if(this.getHead().isAtom() && !(this.getHead().isNIL()) && this.getTail().isNIL()) {
			return true;
			// if the tail is an atom but not nil, it is not a list
		} else if (this.getTail().isAtom() && !(this.getTail().isNIL())) {
			return false;
		} else 
			return this.getTail().isList();
		}

}
]]></snapshot>
  </Command>
  <Command __id="1333" _type="DiffBasedFileOpenCommand" date="Mon Nov 29 14:19:44 EST 2021" docASTNodeCount="291" docActiveCodeLength="1947" docExpressionCount="204" docLength="2050" projectName="a5" starttimestamp="1638212009072" timestamp="1575355">
    <filePath><![CDATA[C:\Users\rarael\OneDrive\Documents\COMPSCIENCE\COMP 524\a5\src\evaluators\LambdaSExpressionEvaluator.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package evaluators;¶¶import main.lisp.evaluator.BasicExpressionEvaluator;¶import main.lisp.evaluator.BuiltinOperationManagerSingleton;¶import main.lisp.evaluator.Environment;¶import main.lisp.evaluator.Evaluator;¶import main.lisp.evaluator.function.Lambda;¶import main.lisp.parser.terms.IdentifierAtom;¶import main.lisp.parser.terms.SExpression;¶¶public class LambdaSExpressionEvaluator extends BasicExpressionEvaluator {¶	@Override¶	public SExpression eval(SExpression expr, Environment environment) {¶		// evaluates lambda first¶		if (!expr.getHead().isAtom()) {¶			SExpression eval = basicEvaluator(expr.getHead(), environment);¶			if (eval instanceof Lambda) {¶				Environment childEnvironment = environment.newChild();¶				return evaluateLambda((Lambda) eval, childEnvironment, environment, expr.getTail());¶			}¶		}¶			// when it is not a lambda¶			return basicEvaluator(expr, environment);¶		}¶	¶	// produces your lambda evaluation¶	protected SExpression evaluateLambda(Lambda lambda, Environment childEnvironment, Environment environment, SExpression current) {¶		IdentifierAtom[] argNames = lambda.getArgumentNames();¶		for(int i = 0; i < argNames.length; i++) {¶			if (current.isAtom()) {¶				childEnvironment.assign(argNames[i], current);¶			} else {¶				childEnvironment.assign(argNames[i], current.getHead().eval(environment));¶				current = current.getTail();¶			}¶		}¶	return lambda.eval(childEnvironment);¶	}¶	¶	// basic evaluator¶	protected SExpression basicEvaluator(SExpression expr, Environment environment) {¶		if (expr.getHead() instanceof IdentifierAtom) {¶			String operator = ((IdentifierAtom)expr.getHead()).getValue();¶			Evaluator eval = BuiltinOperationManagerSingleton.get().getEvaluator(operator);¶			if (eval == null) {¶				throw new IllegalStateException("No evaluator registered for operator '" + operator + "'");¶			}¶			return eval.eval(expr, environment);¶		} else {¶			throw new IllegalStateException("Expression does not start with an operator");¶		}¶	}¶}¶¶")]]]></diff>
  </Command>
  <DocumentChange __id="1349" _type="Delete" date="Mon Nov 29 14:19:48 EST 2021" docASTNodeCount="293" docActiveCodeLength="1940" docExpressionCount="205" docLength="2043" endLine="26" length="7" offset="968" repeat="2" startLine="26" starttimestamp="1638212009072" timestamp="1579506" timestamp2="1579662">
    <text><![CDATA[otected]]></text>
  </DocumentChange>
  <Command __id="1348" _type="PauseCommand" date="Mon Nov 29 14:19:48 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="1579155">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2103]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1347" _type="SelectTextCommand" caretOffset="691" date="Mon Nov 29 14:19:48 EST 2021" end="697" start="691" starttimestamp="1638212009072" timestamp="1579155" />
  <Command __id="1350" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 29 14:19:48 EST 2021" starttimestamp="1638212009072" timestamp="1579513" />
  <Command __id="1352" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 29 14:19:48 EST 2021" starttimestamp="1638212009072" timestamp="1579664" />
  <Command __id="1354" _type="InsertStringCommand" date="Mon Nov 29 14:19:49 EST 2021" starttimestamp="1638212009072" timestamp="1580210" timestamp2="1580210">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1356" _type="InsertStringCommand" date="Mon Nov 29 14:19:49 EST 2021" starttimestamp="1638212009072" timestamp="1580384" timestamp2="1580384">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="1358" _type="InsertStringCommand" date="Mon Nov 29 14:19:49 EST 2021" starttimestamp="1638212009072" timestamp="1580483" timestamp2="1580483">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1360" _type="InsertStringCommand" date="Mon Nov 29 14:19:49 EST 2021" starttimestamp="1638212009072" timestamp="1580555" timestamp2="1580555">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1362" _type="InsertStringCommand" date="Mon Nov 29 14:19:49 EST 2021" starttimestamp="1638212009072" timestamp="1580659" timestamp2="1580659">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1363" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:19:50 EST 2021" starttimestamp="1638212009072" timestamp="1581373" />
  <Command __id="1364" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:19:50 EST 2021" starttimestamp="1638212009072" timestamp="1581376" />
  <Command __id="1365" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:19:50 EST 2021" starttimestamp="1638212009072" timestamp="1581376" />
  <Command __id="1366" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:19:50 EST 2021" starttimestamp="1638212009072" timestamp="1581377" />
  <Command __id="1367" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:19:50 EST 2021" starttimestamp="1638212009072" timestamp="1581377" />
  <Command __id="1368" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:19:50 EST 2021" starttimestamp="1638212009072" timestamp="1581378" />
  <Command __id="1369" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:19:50 EST 2021" starttimestamp="1638212009072" timestamp="1581379" />
  <Command __id="1370" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 29 14:19:50 EST 2021" starttimestamp="1638212009072" timestamp="1581379" />
  <Command __id="1371" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:19:50 EST 2021" starttimestamp="1638212009072" timestamp="1581381" />
  <Command __id="1372" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:19:50 EST 2021" starttimestamp="1638212009072" timestamp="1581381" />
  <Command __id="1373" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:19:50 EST 2021" starttimestamp="1638212009072" timestamp="1581401" />
  <Command __id="1375" _type="PauseCommand" date="Mon Nov 29 14:19:52 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="1583636">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2235]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1374" _type="SelectTextCommand" caretOffset="1209" date="Mon Nov 29 14:19:52 EST 2021" end="1217" start="1209" starttimestamp="1638212009072" timestamp="1583636" />
  <Command __id="1377" _type="InsertStringCommand" date="Mon Nov 29 14:19:53 EST 2021" starttimestamp="1638212009072" timestamp="1584231" timestamp2="1584231">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1379" _type="InsertStringCommand" date="Mon Nov 29 14:19:53 EST 2021" starttimestamp="1638212009072" timestamp="1584376" timestamp2="1584376">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1381" _type="InsertStringCommand" date="Mon Nov 29 14:19:53 EST 2021" starttimestamp="1638212009072" timestamp="1584563" timestamp2="1584563">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="1383" _type="InsertStringCommand" date="Mon Nov 29 14:19:53 EST 2021" starttimestamp="1638212009072" timestamp="1584639" timestamp2="1584639">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1385" _type="InsertStringCommand" date="Mon Nov 29 14:19:53 EST 2021" starttimestamp="1638212009072" timestamp="1584710" timestamp2="1584710">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1387" _type="InsertStringCommand" date="Mon Nov 29 14:19:53 EST 2021" starttimestamp="1638212009072" timestamp="1584805" timestamp2="1584805">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1388" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:19:54 EST 2021" starttimestamp="1638212009072" timestamp="1585396" />
  <Command __id="1389" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:19:54 EST 2021" starttimestamp="1638212009072" timestamp="1585400" />
  <Command __id="1390" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:19:54 EST 2021" starttimestamp="1638212009072" timestamp="1585400" />
  <Command __id="1391" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:19:54 EST 2021" starttimestamp="1638212009072" timestamp="1585402" />
  <Command __id="1392" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 29 14:19:54 EST 2021" starttimestamp="1638212009072" timestamp="1585402" />
  <Command __id="1393" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:19:54 EST 2021" starttimestamp="1638212009072" timestamp="1585403" />
  <Command __id="1394" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:19:54 EST 2021" starttimestamp="1638212009072" timestamp="1585404" />
  <Command __id="1395" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:19:54 EST 2021" starttimestamp="1638212009072" timestamp="1585404" />
  <Command __id="1396" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:19:54 EST 2021" starttimestamp="1638212009072" timestamp="1585407" />
  <Command __id="1397" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:19:54 EST 2021" starttimestamp="1638212009072" timestamp="1585407" />
  <Command __id="1398" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:19:54 EST 2021" starttimestamp="1638212009072" timestamp="1585431" />
  <Command __id="1400" _type="PauseCommand" date="Mon Nov 29 14:20:03 EST 2021" range="5s-10s" starttimestamp="1638212009072" timestamp="1594446">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[9015]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1401" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:20:03 EST 2021" starttimestamp="1638212009072" timestamp="1594514" />
  <Command __id="1402" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:20:03 EST 2021" starttimestamp="1638212009072" timestamp="1594518" />
  <Command __id="1403" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:20:03 EST 2021" starttimestamp="1638212009072" timestamp="1594519" />
  <Command __id="1404" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:20:03 EST 2021" starttimestamp="1638212009072" timestamp="1594519" />
  <Command __id="1405" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:20:03 EST 2021" starttimestamp="1638212009072" timestamp="1594519" />
  <Command __id="1406" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:20:03 EST 2021" starttimestamp="1638212009072" timestamp="1594520" />
  <Command __id="1407" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:20:03 EST 2021" starttimestamp="1638212009072" timestamp="1594520" />
  <Command __id="1408" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:20:03 EST 2021" starttimestamp="1638212009072" timestamp="1594522" />
  <Command __id="1409" _type="MoveCaretCommand" caretOffset="0" date="Mon Nov 29 14:20:03 EST 2021" docOffset="0" starttimestamp="1638212009072" timestamp="1594526" />
  <Command __id="1411" _type="PauseCommand" date="Mon Nov 29 14:20:32 EST 2021" range="20s-30s" starttimestamp="1638212009072" timestamp="1623477">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[28951]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1410" _type="SelectTextCommand" caretOffset="1446" date="Mon Nov 29 14:20:32 EST 2021" end="1454" start="1446" starttimestamp="1638212009072" timestamp="1623477" />
  <Command __id="1413" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 29 14:20:32 EST 2021" starttimestamp="1638212009072" timestamp="1623783" />
  <Command __id="1415" _type="PauseCommand" date="Mon Nov 29 14:20:34 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="1625384">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1601]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="1414" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 29 14:20:34 EST 2021" starttimestamp="1638212009072" timestamp="1625384" />
  <Command __id="1416" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:20:34 EST 2021" starttimestamp="1638212009072" timestamp="1625479" />
  <Command __id="1417" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:20:34 EST 2021" starttimestamp="1638212009072" timestamp="1625482" />
  <Command __id="1418" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:20:34 EST 2021" starttimestamp="1638212009072" timestamp="1625482" />
  <Command __id="1419" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:20:34 EST 2021" starttimestamp="1638212009072" timestamp="1625483" />
  <Command __id="1420" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:20:34 EST 2021" starttimestamp="1638212009072" timestamp="1625483" />
  <Command __id="1421" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:20:34 EST 2021" starttimestamp="1638212009072" timestamp="1625483" />
  <Command __id="1422" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:20:34 EST 2021" starttimestamp="1638212009072" timestamp="1625483" />
  <Command __id="1423" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:20:34 EST 2021" starttimestamp="1638212009072" timestamp="1625485" />
  <Command __id="1424" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:20:34 EST 2021" starttimestamp="1638212009072" timestamp="1625485" />
  <Command __id="1425" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:20:34 EST 2021" starttimestamp="1638212009072" timestamp="1625504" />
  <Command __id="1442" _type="PauseCommand" date="Mon Nov 29 14:20:40 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="1631099">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2053]]></pause>
    <nextType><![CDATA[Debug]]></nextType>
    <next><![CDATA[RunCommand]]></next>
  </Command>
  <Command __id="1441" _type="RunCommand" className="/a5/src/a5/LocalChecks.java" date="Mon Nov 29 14:20:40 EST 2021" kind="HitBreakPoint" projectName="a5" starttimestamp="1638212009072" timestamp="1631099" type="Run" />
  <Command __id="1443" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:20:40 EST 2021" starttimestamp="1638212009072" timestamp="1631153" />
  <Command __id="1444" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:20:40 EST 2021" starttimestamp="1638212009072" timestamp="1631158" />
  <Command __id="1445" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:20:40 EST 2021" starttimestamp="1638212009072" timestamp="1631158" />
  <Command __id="1446" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:20:40 EST 2021" starttimestamp="1638212009072" timestamp="1631160" />
  <Command __id="1447" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:20:40 EST 2021" starttimestamp="1638212009072" timestamp="1631160" />
  <Command __id="1448" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:20:40 EST 2021" starttimestamp="1638212009072" timestamp="1631161" />
  <Command __id="1449" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:20:40 EST 2021" starttimestamp="1638212009072" timestamp="1631161" />
  <Command __id="1450" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:20:40 EST 2021" starttimestamp="1638212009072" timestamp="1631164" />
  <Command __id="1452" _type="PauseCommand" date="Mon Nov 29 14:20:42 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="1633388">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2224]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1451" _type="ShellCommand" date="Mon Nov 29 14:20:42 EST 2021" starttimestamp="1638212009072" timestamp="1633388" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1454" _type="PauseCommand" date="Mon Nov 29 14:20:44 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="1635067">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1679]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1453" _type="ConsoleOutput" date="Mon Nov 29 14:20:44 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="1635067" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
Test execution time (ms):8
Test execution time (ms):11
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"A6CommonSignaturesAreInherited did not pass completely:See console trace about lines failing  this check%0.7251798561151078¶¶Test execution time (ms):27¶A6Encapsulation did not pass completely:%0.96¶¶Test execution time (ms):3¶A6NoHiddenFields did not pass completely:%0.96¶¶Test execution time (ms):4¶A6NonPublicAccessModifiersMatched did not pass completely:See console trace about lines failing  this check%0.48¶¶Test execution time (ms):5¶A6PublicMethodsOverride did not pass completely:%0.96¶¶Test execution time (ms):6¶A6NoStarImports did not pass completely:%0.96¶¶Test execution time (ms):3¶A6PackageDeclarations did not pass completely:%0.96¶¶Test execution time (ms):3¶F21A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0¶¶Test execution time (ms):"), Diff(INSERT,"Test execution time (ms):1¶Test execution time (ms):8¶Test execution time (ms):1"), Diff(EQUAL,"1¶")]]]></diff>
  </Command>
  <Command __id="1455" _type="ExceptionCommand" date="Mon Nov 29 14:20:44 EST 2021" starttimestamp="1638212009072" timestamp="1635152" type="Exception">
    <exceptionString><![CDATA[Test execution time (ms):74
Test execution time (ms):76
Test execution time (ms):1
Test execution time (ms):1
Test execution time (ms):1
Test execution time (ms):1
java.lang.IllegalStateException: Expression does not start with an operator
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:50)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:23)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at expression.CondEvaluator.eval(CondEvaluator.java:21)
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:48)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:23)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at expression.EvalEvaluator.eval(EvalEvaluator.java:10)
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:48)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:23)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at expression.EvalEvaluator.eval(EvalEvaluator.java:10)
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:48)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:23)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:226)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:106)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:301)
	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)
	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1456" _type="ConsoleOutput" date="Mon Nov 29 14:20:44 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="1635211" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
Test execution time (ms):2
Test execution time (ms):0
Test execution time (ms):1
Test execution time (ms):0
Test execution time (ms):0
Test execution time (ms):0
Test execution time (ms):19
Test execution time (ms):0
Test execution time (ms):1
Test execution time (ms):0
Test execution time (ms):0
Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"1¶Test execution time (ms):8¶Test execution time (ms):11"), Diff(INSERT,"0¶Test execution time (ms):2¶Test execution time (ms):0¶Test execution time (ms):1¶Test execution time (ms):0¶Test execution time (ms):0¶Test execution time (ms):0¶Test execution time (ms):19¶Test execution time (ms):0¶Test execution time (ms):1¶Test execution time (ms):0¶Test execution time (ms):0¶Test execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1457" _type="ConsoleOutput" date="Mon Nov 29 14:20:44 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="1635268" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
Building symbol table and running first pass checks:Mon Nov 29 14:20:44 EST 2021
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):0¶"), Diff(DELETE,"Test execution time (ms):2¶Test execution time (ms):0¶Test execution time (ms):1¶Test execution time (ms):0¶Test execution time (ms):0¶Test execution time (ms):0¶Test execution time (ms):19¶Test execution time (ms):0¶Test execution time (ms):1¶Test execution time (ms):0¶Test execution time (ms):0¶Test execution time (ms):0"), Diff(INSERT,"Building symbol table and running first pass checks:Mon Nov 29 14:20:44 EST 2021"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1459" _type="PauseCommand" date="Mon Nov 29 14:20:45 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="1636669">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1401]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1458" _type="ConsoleOutput" date="Mon Nov 29 14:20:45 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="1636669" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:39
Running second pass checks Mon Nov 29 14:20:45 EST 2021
Start O(n2) inter- and intra class method calls:Mon Nov 29 14:20:45 EST 2021
End O(n2) inter- and intra class method calls:Mon Nov 29 14:20:45 EST 2021
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):0¶Building symbol table and running first pass check"), Diff(INSERT,"Symbol table size:39¶Running second pass checks Mon Nov 29 14:20:45 EST 2021¶Start O(n2) inter- and intra class method calls:Mon Nov 29 14:20:45 EST 2021¶End O(n2) inter- and intra class method call"), Diff(EQUAL,"s:Mon Nov 29 14:20:4"), Diff(DELETE,"4"), Diff(INSERT,"5"), Diff(EQUAL," EST 2021¶")]]]></diff>
  </Command>
  <Command __id="1460" _type="ConsoleOutput" date="Mon Nov 29 14:20:46 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="1637385" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Mon Nov 29 14:20:46 EST 2021
Generating checks:Mon Nov 29 14:20:46 EST 2021
Finished Generating checks:Mon Nov 29 14:20:46 EST 2021
Generating externals:Mon Nov 29 14:20:46 EST 2021
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:39¶Running"), Diff(INSERT,"Finished"), Diff(EQUAL," second pass checks"), Diff(DELETE," "), Diff(INSERT,":"), Diff(EQUAL,"Mon Nov 29 14:20:4"), Diff(DELETE,"5"), Diff(INSERT,"6"), Diff(EQUAL," EST 2021¶"), Diff(DELETE,"Start O(n2) inter- and intra class method call"), Diff(INSERT,"Generating checks:Mon Nov 29 14:20:46 EST 2021¶Finished Generating check"), Diff(EQUAL,"s:Mon Nov 29 14:20:4"), Diff(DELETE,"5"), Diff(INSERT,"6"), Diff(EQUAL," EST 2021¶"), Diff(DELETE,"End O(n2) inter- and intra class method cal"), Diff(INSERT,"Generating externa"), Diff(EQUAL,"ls:Mon Nov 29 14:20:4"), Diff(DELETE,"5"), Diff(INSERT,"6"), Diff(EQUAL," EST 2021¶")]]]></diff>
  </Command>
  <Command __id="1461" _type="ConsoleOutput" date="Mon Nov 29 14:20:46 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="1637496" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Mon Nov 29 14:20:46 EST 2021
A6CommonPropertiesInherited did not pass completely:See console trace about lines failing  this check%0.0

Test execution time (ms):2261
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass check"), Diff(INSERT,"Generating external"), Diff(EQUAL,"s:Mon Nov 29 14:20:46 EST 2021¶"), Diff(DELETE,"Gen"), Diff(INSERT,"A6CommonProp"), Diff(EQUAL,"er"), Diff(DELETE,"a"), Diff(EQUAL,"ti"), Diff(DELETE,"ng checks:Mon Nov 29 14:20:46 EST 2021¶Finished Generating checks:Mon Nov 29 14:20:46 EST 2021¶Generating externals:Mon Nov 29 14:20:46 EST 202"), Diff(INSERT,"esInherited did not pass completely:See console trace about lines failing  this check%0.0¶¶Test execution time (ms):226"), Diff(EQUAL,"1¶")]]]></diff>
  </Command>
  <Command __id="1462" _type="ConsoleOutput" date="Mon Nov 29 14:20:46 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="1637501" type="ConsoleOutput">
    <outputString><![CDATA[A6CommonSignaturesAreInherited did not pass completely:See console trace about lines failing  this check%0.7251798561151078

Test execution time (ms):26
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Mon Nov 29 14:20:46 EST 2021¶A6CommonProperties"), Diff(INSERT,"A6CommonSignaturesAre"), Diff(EQUAL,"Inherited did not pass completely:See console trace about lines failing  this check%0."), Diff(DELETE,"0"), Diff(INSERT,"7251798561151078"), Diff(EQUAL,"¶¶Test execution time (ms):2"), Diff(DELETE,"261"), Diff(INSERT,"6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1463" _type="ConsoleOutput" date="Mon Nov 29 14:20:46 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="1637597" type="ConsoleOutput">
    <outputString><![CDATA[A6Encapsulation did not pass completely:%0.96

Test execution time (ms):4
A6NoHiddenFields did not pass completely:%0.96

Test execution time (ms):4
A6NonPublicAccessModifiersMatched did not pass completely:See console trace about lines failing  this check%0.8

Test execution time (ms):6
A6PublicMethodsOverride did not pass completely:%0.96

Test execution time (ms):6
A6NoStarImports did not pass completely:%0.96

Test execution time (ms):3
A6PackageDeclarations did not pass completely:%0.96

Test execution time (ms):4
F21A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0

Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"A6"), Diff(DELETE,"CommonSignaturesAreInherited did not pass completely:See console trace about lines failing  this check%0.7251798561151078¶¶Test execution time (ms):26"), Diff(INSERT,"Encapsulation did not pass completely:%0.96¶¶Test execution time (ms):4¶A6NoHiddenFields did not pass completely:%0.96¶¶Test execution time (ms):4¶A6NonPublicAccessModifiersMatched did not pass completely:See console trace about lines failing  this check%0.8¶¶Test execution time (ms):6¶A6PublicMethodsOverride did not pass completely:%0.96¶¶Test execution time (ms):6¶A6NoStarImports did not pass completely:%0.96¶¶Test execution time (ms):3¶A6PackageDeclarations did not pass completely:%0.96¶¶Test execution time (ms):4¶F21A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0¶¶Test execution time (ms):1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1465" _type="PauseCommand" date="Mon Nov 29 14:20:57 EST 2021" range="10s-20s" starttimestamp="1638212009072" timestamp="1648177">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[10580]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1464" _type="ShellCommand" date="Mon Nov 29 14:20:57 EST 2021" starttimestamp="1638212009072" timestamp="1648177" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1467" _type="PauseCommand" date="Mon Nov 29 14:21:22 EST 2021" range="20s-30s" starttimestamp="1638212009072" timestamp="1673862">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[25685]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1466" _type="SelectTextCommand" caretOffset="1445" date="Mon Nov 29 14:21:22 EST 2021" end="1971" start="1445" starttimestamp="1638212009072" timestamp="1673862" />
  <Command __id="1529" _type="PauseCommand" date="Mon Nov 29 14:21:40 EST 2021" range="5s-10s" starttimestamp="1638212009072" timestamp="1691880">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[6274]]></pause>
    <nextType><![CDATA[Debug]]></nextType>
    <next><![CDATA[RunCommand]]></next>
  </Command>
  <Command __id="1528" _type="RunCommand" className="/a5/src/a5/LocalChecks.java" date="Mon Nov 29 14:21:40 EST 2021" kind="HitBreakPoint" projectName="a5" starttimestamp="1638212009072" timestamp="1691880" type="Run" />
  <Command __id="1530" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:21:41 EST 2021" starttimestamp="1638212009072" timestamp="1691931" />
  <Command __id="1531" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:21:41 EST 2021" starttimestamp="1638212009072" timestamp="1691934" />
  <Command __id="1532" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:21:41 EST 2021" starttimestamp="1638212009072" timestamp="1691934" />
  <Command __id="1533" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:21:41 EST 2021" starttimestamp="1638212009072" timestamp="1691935" />
  <Command __id="1534" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:21:41 EST 2021" starttimestamp="1638212009072" timestamp="1691935" />
  <Command __id="1535" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:21:41 EST 2021" starttimestamp="1638212009072" timestamp="1691936" />
  <Command __id="1536" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:21:41 EST 2021" starttimestamp="1638212009072" timestamp="1691936" />
  <Command __id="1537" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:21:41 EST 2021" starttimestamp="1638212009072" timestamp="1691938" />
  <Command __id="1539" _type="PauseCommand" date="Mon Nov 29 14:21:43 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="1694153">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2215]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1538" _type="ShellCommand" date="Mon Nov 29 14:21:43 EST 2021" starttimestamp="1638212009072" timestamp="1694153" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1541" _type="PauseCommand" date="Mon Nov 29 14:21:44 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="1695394">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1241]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1540" _type="ConsoleOutput" date="Mon Nov 29 14:21:44 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="1695394" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
Test execution time (ms):9
Test execution time (ms):13
Test execution time (ms):73
Test execution time (ms):74
Test execution time (ms):0
Test execution time (ms):0
Test execution time (ms):1
Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"A6Encapsulation did not pass completely:%0.96¶¶Test execution time (ms):4¶A6NoHiddenFields did not pass completely:%0.96¶"), Diff(INSERT,"Test execution time (ms):1"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"4"), Diff(INSERT,"9"), Diff(EQUAL,"¶"), Diff(DELETE,"A6NonPublicAccessModifiersMatched did not pass completely:See console trace about lines failing  this check%0.8¶¶Test execution time (ms):6¶A6PublicMethodsOverride did not pass completely:%0.96¶¶Test execution time (ms):6¶A6NoStarImports did not pass completely:%0.96¶¶Test execution time (ms):3¶A6PackageDeclarations did not pass completely:%0.96¶"), Diff(INSERT,"Test execution time (ms):13¶Test execution time (ms):73¶Test execution time (ms):74¶Test execution time (ms):0"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"4"), Diff(INSERT,"0"), Diff(EQUAL,"¶"), Diff(DELETE,"F21A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0¶"), Diff(INSERT,"Test execution time (ms):1"), Diff(EQUAL,"¶Test execution time (ms):1¶")]]]></diff>
  </Command>
  <Command __id="1542" _type="ExceptionCommand" date="Mon Nov 29 14:21:44 EST 2021" starttimestamp="1638212009072" timestamp="1695498" type="Exception">
    <exceptionString><![CDATA[java.lang.IllegalStateException: Expression does not start with an operator
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:50)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:23)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at expression.CondEvaluator.eval(CondEvaluator.java:21)
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:48)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:23)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at expression.EvalEvaluator.eval(EvalEvaluator.java:10)
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:48)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:23)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at expression.EvalEvaluator.eval(EvalEvaluator.java:10)
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:48)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:23)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:226)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:106)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:301)
	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)
	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)
	at grader.basics.testcase.PassFailJUnitTestCase.possiblyRunAndCheckPrecedingTests(PassFailJUnitTestCase.java:166)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:221)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:106)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1543" _type="ConsoleOutput" date="Mon Nov 29 14:21:44 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="1695555" type="ConsoleOutput">
    <outputString><![CDATA[Building symbol table and running first pass checks:Mon Nov 29 14:21:44 EST 2021
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):1¶Test execution time (ms):9¶Test execution time (ms):13¶Test execution time (ms):73¶Test execution time (ms):74¶Test execution time (ms):0¶Test execution time (ms):0¶Test execution time (ms):1¶Test execution time (ms):"), Diff(INSERT,"Building symbol table and running first pass checks:Mon Nov 29 14:21:44 EST 202"), Diff(EQUAL,"1¶")]]]></diff>
  </Command>
  <Command __id="1545" _type="PauseCommand" date="Mon Nov 29 14:21:45 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="1696927">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1372]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1544" _type="ConsoleOutput" date="Mon Nov 29 14:21:45 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="1696927" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:39
Running second pass checks Mon Nov 29 14:21:45 EST 2021
Start O(n2) inter- and intra class method calls:Mon Nov 29 14:21:45 EST 2021
End O(n2) inter- and intra class method calls:Mon Nov 29 14:21:45 EST 2021
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Building s"), Diff(INSERT,"S"), Diff(EQUAL,"ymbol table "), Diff(DELETE,"and r"), Diff(INSERT,"size:39¶R"), Diff(EQUAL,"unning "), Diff(DELETE,"first"), Diff(INSERT,"second"), Diff(EQUAL," pass checks"), Diff(DELETE,":Mon Nov 29 14:21:44"), Diff(INSERT," Mon Nov 29 14:21:45 EST 2021¶Start O(n2) inter- and intra class method calls:Mon Nov 29 14:21:45 EST 2021¶End O(n2) inter- and intra class method calls:Mon Nov 29 14:21:45"), Diff(EQUAL," EST 2021¶")]]]></diff>
  </Command>
  <Command __id="1546" _type="ConsoleOutput" date="Mon Nov 29 14:21:46 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="1697691" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Mon Nov 29 14:21:46 EST 2021
Generating checks:Mon Nov 29 14:21:46 EST 2021
Finished Generating checks:Mon Nov 29 14:21:46 EST 2021
Generating externals:Mon Nov 29 14:21:46 EST 2021
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:39¶Running"), Diff(INSERT,"Finished"), Diff(EQUAL," second pass checks"), Diff(DELETE," "), Diff(INSERT,":"), Diff(EQUAL,"Mon Nov 29 14:21:4"), Diff(DELETE,"5"), Diff(INSERT,"6"), Diff(EQUAL," EST 2021¶"), Diff(DELETE,"Start O(n2) inter- and intra class method call"), Diff(INSERT,"Generating checks:Mon Nov 29 14:21:46 EST 2021¶Finished Generating check"), Diff(EQUAL,"s:Mon Nov 29 14:21:4"), Diff(DELETE,"5"), Diff(INSERT,"6"), Diff(EQUAL," EST 2021¶"), Diff(DELETE,"End O(n2) inter- and intra class method cal"), Diff(INSERT,"Generating externa"), Diff(EQUAL,"ls:Mon Nov 29 14:21:4"), Diff(DELETE,"5"), Diff(INSERT,"6"), Diff(EQUAL," EST 2021¶")]]]></diff>
  </Command>
  <Command __id="1547" _type="ConsoleOutput" date="Mon Nov 29 14:21:46 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="1697793" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Mon Nov 29 14:21:46 EST 2021
A6CommonPropertiesInherited did not pass completely:See console trace about lines failing  this check%0.0

Test execution time (ms):2265
A6CommonSignaturesAreInherited did not pass completely:See console trace about lines failing  this check%0.7304347826086957

Test execution time (ms):6
A6Encapsulation did not pass completely:%0.96

Test execution time (ms):3
A6NoHiddenFields did not pass completely:%0.96

Test execution time (ms):3
A6NonPublicAccessModifiersMatched did not pass completely:See console trace about lines failing  this check%0.768

Test execution time (ms):6
A6PublicMethodsOverride did not pass completely:%0.96

Test execution time (ms):5
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass check"), Diff(INSERT,"Generating external"), Diff(EQUAL,"s:Mon Nov 29 14:21:46 EST 2021¶"), Diff(DELETE,"Generating checks:Mon Nov 29 14:21:46 EST 2021¶Finished Generating checks:Mon Nov 29 14:21:46 EST 2021¶Generating externals:Mon Nov 29 14:21:46 EST 2021"), Diff(INSERT,"A6CommonPropertiesInherited did not pass completely:See console trace about lines failing  this check%0.0¶¶Test execution time (ms):2265¶A6CommonSignaturesAreInherited did not pass completely:See console trace about lines failing  this check%0.7304347826086957¶¶Test execution time (ms):6¶A6Encapsulation did not pass completely:%0.96¶¶Test execution time (ms):3¶A6NoHiddenFields did not pass completely:%0.96¶¶Test execution time (ms):3¶A6NonPublicAccessModifiersMatched did not pass completely:See console trace about lines failing  this check%0.768¶¶Test execution time (ms):6¶A6PublicMethodsOverride did not pass completely:%0.96¶¶Test execution time (ms):5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1548" _type="ConsoleOutput" date="Mon Nov 29 14:21:46 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="1697849" type="ConsoleOutput">
    <outputString><![CDATA[A6NoStarImports did not pass completely:%0.96

Test execution time (ms):4
A6PackageDeclarations did not pass completely:%0.96

Test execution time (ms):3
F21A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0

Test execution time (ms):2
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Mon Nov 29 14:21:46 EST 2021¶A6CommonPropertiesInherited did not pass completely:See console trace about lines failing  this check"), Diff(INSERT,"A6NoStarImports did not pass completely:"), Diff(EQUAL,"%0."), Diff(DELETE,"0"), Diff(INSERT,"96"), Diff(EQUAL,"¶¶Test execution time (ms):"), Diff(DELETE,"2265¶A6CommonSignaturesAreInherited did not pass completely:See console trace about lines failing  this check%0.7304347826086957¶¶Test execution time (ms):6¶A6Encapsul"), Diff(INSERT,"4¶A6PackageDeclar"), Diff(EQUAL,"ation"), Diff(INSERT,"s"), Diff(EQUAL," did not pass completely:%0.96¶¶Test execution time (ms):3¶"), Diff(INSERT,"F21"), Diff(EQUAL,"A6No"), Diff(DELETE,"HiddenFields did not pass completely:%0.96¶¶Test execution time (ms):3¶A6NonPublicAccessModifiersMatched did not pass completely:See console trace about l"), Diff(INSERT,"CheckstyleWarnings did not pass completely:Warn"), Diff(EQUAL,"in"), Diff(DELETE,"e"), Diff(INSERT,"g"), Diff(EQUAL,"s f"), Diff(DELETE,"ailing  this check%0.768¶¶Test execution time (ms):6¶A6PublicMethodsOverride did not pass completely:"), Diff(INSERT,"ound in checkstyle text, see traced console output"), Diff(EQUAL,"%0."), Diff(DELETE,"96"), Diff(INSERT,"0"), Diff(EQUAL,"¶¶Test execution time (ms):"), Diff(DELETE,"5"), Diff(INSERT,"2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1550" _type="PauseCommand" date="Mon Nov 29 14:21:52 EST 2021" range="5s-10s" starttimestamp="1638212009072" timestamp="1703550">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5701]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1549" _type="ShellCommand" date="Mon Nov 29 14:21:52 EST 2021" starttimestamp="1638212009072" timestamp="1703550" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1552" _type="PauseCommand" date="Mon Nov 29 14:22:43 EST 2021" range="30s-1m" starttimestamp="1638212009072" timestamp="1754257">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[50707]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1553" _type="SelectTextCommand" caretOffset="1752" date="Mon Nov 29 14:22:43 EST 2021" end="1752" start="1671" starttimestamp="1638212009072" timestamp="1754339" />
  <Command __id="1555" _type="PauseCommand" date="Mon Nov 29 14:22:44 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="1755919">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1580]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1554" _type="MoveCaretCommand" caretOffset="1761" date="Mon Nov 29 14:22:44 EST 2021" docOffset="2039" starttimestamp="1638212009072" timestamp="1755919" />
  <Command __id="1556" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:22:45 EST 2021" starttimestamp="1638212009072" timestamp="1756041" />
  <Command __id="1557" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:22:45 EST 2021" starttimestamp="1638212009072" timestamp="1756044" />
  <Command __id="1558" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:22:45 EST 2021" starttimestamp="1638212009072" timestamp="1756045" />
  <Command __id="1559" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:22:45 EST 2021" starttimestamp="1638212009072" timestamp="1756046" />
  <Command __id="1560" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:22:45 EST 2021" starttimestamp="1638212009072" timestamp="1756046" />
  <Command __id="1561" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:22:45 EST 2021" starttimestamp="1638212009072" timestamp="1756047" />
  <Command __id="1562" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:22:45 EST 2021" starttimestamp="1638212009072" timestamp="1756047" />
  <Command __id="1563" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:22:45 EST 2021" starttimestamp="1638212009072" timestamp="1756050" />
  <Command __id="1564" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:22:45 EST 2021" starttimestamp="1638212009072" timestamp="1756050" />
  <Command __id="1565" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:22:45 EST 2021" starttimestamp="1638212009072" timestamp="1756051" />
  <Command __id="1567" _type="PauseCommand" date="Mon Nov 29 14:22:46 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="1757860">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1809]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1568" _type="MoveCaretCommand" caretOffset="1454" date="Mon Nov 29 14:22:47 EST 2021" docOffset="1781" starttimestamp="1638212009072" timestamp="1757937" />
  <Command __id="1570" _type="PauseCommand" date="Mon Nov 29 14:23:03 EST 2021" range="10s-20s" starttimestamp="1638212009072" timestamp="1774612">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[16675]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1572" _type="MoveCaretCommand" caretOffset="1124" date="Mon Nov 29 14:23:03 EST 2021" docOffset="1405" starttimestamp="1638212009072" timestamp="1774815" />
  <Command __id="1574" _type="PauseCommand" date="Mon Nov 29 14:23:05 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="1776783">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1968]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1573" _type="ShellCommand" date="Mon Nov 29 14:23:05 EST 2021" starttimestamp="1638212009072" timestamp="1776783" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1576" _type="PauseCommand" date="Mon Nov 29 14:23:12 EST 2021" range="5s-10s" starttimestamp="1638212009072" timestamp="1783804">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[7021]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1575" _type="ConsoleOutput" date="Mon Nov 29 14:23:12 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="1783804" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"A6NoStarImports did not pass completely:%0.96¶¶Test execution time (ms):4¶A6PackageDeclarations did not pass completely:%0.96¶¶Test execution time (ms):3¶F21A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0¶¶Test execution time (ms):2"), Diff(INSERT,"Test execution time (ms):0¶Test execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1577" _type="ExceptionCommand" date="Mon Nov 29 14:23:13 EST 2021" starttimestamp="1638212009072" timestamp="1784759" type="Exception">
    <exceptionString><![CDATA[LispIsListChecker did not pass completely:Expected strings:Tactual string NIL%0.0

Test execution time (ms):1
LispIsListChecker2 did not pass completely:Expected strings:Tactual string NIL%0.0

Test execution time (ms):1
Test execution time (ms):0
Test execution time (ms):0
java.lang.NullPointerException
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.propertyChange(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:48)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.firePropertyChange(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:102)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:93)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:226)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:106)
	at jdk.internal.reflect.GeneratedMethodAccessor17.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:301)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1579" _type="PauseCommand" date="Mon Nov 29 14:23:15 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="1786216">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[1457]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="1578" _type="ExceptionCommand" date="Mon Nov 29 14:23:15 EST 2021" starttimestamp="1638212009072" timestamp="1786216" type="Exception">
    <exceptionString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'CURRY'
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:46)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:23)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at functional.FuncallEvaluator.eval(FuncallEvaluator.java:21)
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:48)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:23)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:226)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:106)
	at jdk.internal.reflect.GeneratedMethodAccessor17.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:301)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1581" _type="PauseCommand" date="Mon Nov 29 14:23:17 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="1787994">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[1778]]></pause>
    <nextType><![CDATA[Exception]]></nextType>
    <next><![CDATA[ExceptionCommand]]></next>
  </Command>
  <Command __id="1580" _type="ExceptionCommand" date="Mon Nov 29 14:23:17 EST 2021" starttimestamp="1638212009072" timestamp="1787994" type="Exception">
    <exceptionString><![CDATA[java.lang.IllegalStateException: No evaluator registered for operator 'LET'
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:46)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:23)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:226)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:106)
	at jdk.internal.reflect.GeneratedMethodAccessor17.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:301)
	at grader.basics.junit.AGradableJUnitSuite.test(AGradableJUnitSuite.java:325)
	at grader.basics.junit.AGradableJUnitSuite.open(AGradableJUnitSuite.java:187)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1538)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1531)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1406)
	at bus.uigen.controller.MethodInvocationManager.invokeDoubleClickMethod(MethodInvocationManager.java:1357)
	at bus.uigen.editors.TreeAdapter.mouseClicked(TreeAdapter.java:469)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:278)
	at java.desktop/java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:277)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1583" _type="PauseCommand" date="Mon Nov 29 14:23:18 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="1789796">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[1802]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1582" _type="ConsoleOutput" date="Mon Nov 29 14:23:18 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="1789796" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):1
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"0¶Test execution time (ms):0"), Diff(INSERT,"1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1585" _type="PauseCommand" date="Mon Nov 29 14:23:20 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="1791246">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1450]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1584" _type="ConsoleOutput" date="Mon Nov 29 14:23:20 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="1791246" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):0
Test execution time (ms):0
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"1"), Diff(INSERT,"0¶Test execution time (ms):0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1589" _type="PauseCommand" date="Mon Nov 29 14:23:29 EST 2021" range="5s-10s" starttimestamp="1638212009072" timestamp="1799938">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[6955]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ProgramExecutionEvent]]></next>
  </Command>
  <Command __id="1588" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Nov 29 14:23:29 EST 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1638212009072" timestamp="1799938" type="Debug" />
  <Command __id="1590" _type="ProgramExecutionEvent" className="/a5/src/a5/LocalChecks.java" date="Mon Nov 29 14:23:29 EST 2021" kind="HitBreakPoint" projectName="a5" starttimestamp="1638212009072" timestamp="1799938" type="Run" />
  <Command __id="1591" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Nov 29 14:23:29 EST 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1638212009072" timestamp="1799938" type="Debug" />
  <Command __id="1592" _type="ProgramExecutionEvent" className="/a5/src/a5/LocalChecks.java" date="Mon Nov 29 14:23:29 EST 2021" kind="HitBreakPoint" projectName="a5" starttimestamp="1638212009072" timestamp="1799938" type="Run" />
  <Command __id="1593" _type="ShellCommand" date="Mon Nov 29 14:23:29 EST 2021" starttimestamp="1638212009072" timestamp="1799990" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1602" _type="PauseCommand" date="Mon Nov 29 14:23:35 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="1806712">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[3132]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ProgramExecutionEvent]]></next>
  </Command>
  <Command __id="1601" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Nov 29 14:23:35 EST 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1638212009072" timestamp="1806712" type="Debug" />
  <Command __id="1603" _type="ProgramExecutionEvent" className="/a5/src/a5/LocalChecks.java" date="Mon Nov 29 14:23:35 EST 2021" kind="HitBreakPoint" projectName="a5" starttimestamp="1638212009072" timestamp="1806712" type="Run" />
  <Command __id="1604" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Nov 29 14:23:35 EST 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1638212009072" timestamp="1806712" type="Debug" />
  <Command __id="1605" _type="ProgramExecutionEvent" className="/a5/src/a5/LocalChecks.java" date="Mon Nov 29 14:23:35 EST 2021" kind="HitBreakPoint" projectName="a5" starttimestamp="1638212009072" timestamp="1806712" type="Run" />
  <Command __id="1607" _type="PauseCommand" date="Mon Nov 29 14:24:01 EST 2021" range="20s-30s" starttimestamp="1638212009072" timestamp="1831959">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[25247]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1606" _type="ShellCommand" date="Mon Nov 29 14:24:01 EST 2021" starttimestamp="1638212009072" timestamp="1831959" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1609" _type="PauseCommand" date="Mon Nov 29 14:24:11 EST 2021" range="10s-20s" starttimestamp="1638212009072" timestamp="1842211">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[10252]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1610" _type="MoveCaretCommand" caretOffset="0" date="Mon Nov 29 14:24:11 EST 2021" docOffset="0" starttimestamp="1638212009072" timestamp="1842280" />
  <Command __id="1612" _type="PauseCommand" date="Mon Nov 29 14:24:13 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="1844102">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1822]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1611" _type="ShellCommand" date="Mon Nov 29 14:24:13 EST 2021" starttimestamp="1638212009072" timestamp="1844102" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1614" _type="PauseCommand" date="Mon Nov 29 14:25:06 EST 2021" range="30s-1m" starttimestamp="1638212009072" timestamp="1897676">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[53574]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1613" _type="ShellCommand" date="Mon Nov 29 14:25:06 EST 2021" starttimestamp="1638212009072" timestamp="1897676" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1616" _type="PauseCommand" date="Mon Nov 29 14:25:12 EST 2021" range="5s-10s" starttimestamp="1638212009072" timestamp="1903565">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[5889]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1617" _type="MoveCaretCommand" caretOffset="1124" date="Mon Nov 29 14:25:12 EST 2021" docOffset="1405" starttimestamp="1638212009072" timestamp="1903726" />
  <Command __id="1619" _type="PauseCommand" date="Mon Nov 29 14:25:38 EST 2021" range="20s-30s" starttimestamp="1638212009072" timestamp="1929292">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[25565]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1620" _type="MoveCaretCommand" caretOffset="325" date="Mon Nov 29 14:25:38 EST 2021" docOffset="524" starttimestamp="1638212009072" timestamp="1929358" />
  <Command __id="1622" _type="PauseCommand" date="Mon Nov 29 14:25:41 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="1932212">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2854]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1621" _type="SelectTextCommand" caretOffset="726" date="Mon Nov 29 14:25:41 EST 2021" end="726" start="325" starttimestamp="1638212009072" timestamp="1932212" />
  <Command __id="1624" _type="PauseCommand" date="Mon Nov 29 14:25:45 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="1936595">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[4383]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1623" _type="SelectTextCommand" caretOffset="730" date="Mon Nov 29 14:25:45 EST 2021" end="730" start="325" starttimestamp="1638212009072" timestamp="1936595" />
  <DocumentChange __id="1353" _type="Insert" date="Mon Nov 29 14:19:49 EST 2021" docASTNodeCount="291" docActiveCodeLength="1945" docExpressionCount="204" docLength="2048" length="5" offset="968" repeat="5" starttimestamp="1638212009072" timestamp="1580206" timestamp2="1580655">
    <text><![CDATA[ivate]]></text>
  </DocumentChange>
  <DocumentChange __id="1376" _type="Replace" date="Mon Nov 29 14:19:53 EST 2021" docASTNodeCount="293" docActiveCodeLength="1938" docExpressionCount="205" docLength="2041" endLine="40" insertionLength="1" int_docASTNodeCount="293" int_docActiveCodeLength="1937" int_docExpressionCount="205" int_docLength="2040" length="8" offset="1487" startLine="40" starttimestamp="1638212009072" timestamp="1584224">
    <deletedText><![CDATA[rotected]]></deletedText>
    <insertedText><![CDATA[r]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1378" _type="Insert" date="Mon Nov 29 14:19:53 EST 2021" docASTNodeCount="291" docActiveCodeLength="1943" docExpressionCount="204" docLength="2046" length="5" offset="1488" repeat="5" starttimestamp="1638212009072" timestamp="1584374" timestamp2="1584801">
    <text><![CDATA[ivate]]></text>
  </DocumentChange>
  <Command __id="1399" _type="DiffBasedFileOpenCommand" date="Mon Nov 29 14:20:03 EST 2021" docASTNodeCount="441" docActiveCodeLength="2812" docExpressionCount="319" docLength="2812" projectName="a5" starttimestamp="1638212009072" timestamp="1594446">
    <filePath><![CDATA[C:\Users\rarael\OneDrive\Documents\COMPSCIENCE\COMP 524\a5\src\functional\FuncallEvaluator.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package functional;¶¶import java.util.Optional;¶¶import main.lisp.evaluator.BuiltinOperationManagerSingleton;¶import main.lisp.evaluator.Environment;¶import main.lisp.evaluator.Evaluator;¶import main.lisp.evaluator.function.Function;¶import main.lisp.evaluator.function.Lambda;¶import main.lisp.parser.terms.IdentifierAtom;¶import main.lisp.parser.terms.SExpression;¶¶public class FuncallEvaluator implements Evaluator {¶¶	@Override¶	public SExpression eval(SExpression arg0, Environment arg1) {¶		SExpression current = arg0.getTail();¶		¶		SExpression lambdaOrFunction = null;¶		if (!current.getHead().isAtom()) {¶			lambdaOrFunction = current.getHead().eval(arg1);¶		}¶		if (lambdaOrFunction instanceof Lambda) {¶			Environment childEnvironment = arg1.newChild();¶			return evaluateLambda((Lambda) lambdaOrFunction, childEnvironment, arg1, current.getTail());¶		} else if(lambdaOrFunction instanceof Function) {¶			return evaluateLambda (((Function) lambdaOrFunction).getLambda(), ((Function) lambdaOrFunction).getEnvironment().newChild(), ((Function) lambdaOrFunction).getEnvironment(),current.getTail() );¶		} else {¶			final Optional<SExpression> isLambda = arg1.lookup((IdentifierAtom) current.getHead());¶			if (!isLambda.isEmpty() && isLambda.get() instanceof Lambda) {¶				Environment childEnvironment = arg1.newChild();¶				return evaluateLambda((Lambda) isLambda.get(), childEnvironment, arg1, current.getTail());¶			} else if (!isLambda.isEmpty() && isLambda.get() instanceof Function) {¶				¶				return evaluateLambda (((Function) isLambda.get()).getLambda(), ((Function) isLambda.get()).getEnvironment().newChild(), ((Function) isLambda.get()).getEnvironment(),current.getTail() ); ¶			}¶			¶			return null;¶		}¶	}¶	¶	pr"), Diff(DELETE,"otec"), Diff(INSERT,"iva"), Diff(EQUAL,"te"), Diff(DELETE,"d"), Diff(EQUAL," SExpression basicEvaluator(SExpression expr, Environment environment) {¶		if (expr instanceof IdentifierAtom) {¶			String operator = ((IdentifierAtom)expr).getValue();¶			Evaluator eval = BuiltinOperationManagerSingleton.get().getEvaluator(operator);¶			if (eval == null) {¶				throw new IllegalStateException("No evaluator registered for operator '" + operator + "'");¶			}¶			return eval.eval(expr, environment);¶		} else {¶			throw new IllegalStateException("Expression does not start with an operator");¶		}¶	}¶	¶	pr"), Diff(DELETE,"otec"), Diff(INSERT,"iva"), Diff(EQUAL,"te"), Diff(DELETE,"d"), Diff(EQUAL," SExpression evaluateLambda(Lambda lambda, Environment childEnvironment, Environment environment, SExpression current) {¶		IdentifierAtom[] argNames = lambda.getArgumentNames();¶		for(int i = 0; i < argNames.length; i++) {¶			if (current.isAtom()) {¶				childEnvironment.assign(argNames[i], current);¶			} else {¶				childEnvironment.assign(argNames[i], current.getHead().eval(environment));¶				current = current.getTail();¶			}¶		}¶	return lambda.eval(childEnvironment);¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package functional;

import java.util.Optional;

import main.lisp.evaluator.BuiltinOperationManagerSingleton;
import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.evaluator.function.Function;
import main.lisp.evaluator.function.Lambda;
import main.lisp.parser.terms.IdentifierAtom;
import main.lisp.parser.terms.SExpression;

public class FuncallEvaluator implements Evaluator {

	@Override
	public SExpression eval(SExpression arg0, Environment arg1) {
		SExpression current = arg0.getTail();
		
		SExpression lambdaOrFunction = null;
		if (!current.getHead().isAtom()) {
			lambdaOrFunction = current.getHead().eval(arg1);
		}
		if (lambdaOrFunction instanceof Lambda) {
			Environment childEnvironment = arg1.newChild();
			return evaluateLambda((Lambda) lambdaOrFunction, childEnvironment, arg1, current.getTail());
		} else if(lambdaOrFunction instanceof Function) {
			return evaluateLambda (((Function) lambdaOrFunction).getLambda(), ((Function) lambdaOrFunction).getEnvironment().newChild(), ((Function) lambdaOrFunction).getEnvironment(),current.getTail() );
		} else {
			final Optional<SExpression> isLambda = arg1.lookup((IdentifierAtom) current.getHead());
			if (!isLambda.isEmpty() && isLambda.get() instanceof Lambda) {
				Environment childEnvironment = arg1.newChild();
				return evaluateLambda((Lambda) isLambda.get(), childEnvironment, arg1, current.getTail());
			} else if (!isLambda.isEmpty() && isLambda.get() instanceof Function) {
				
				return evaluateLambda (((Function) isLambda.get()).getLambda(), ((Function) isLambda.get()).getEnvironment().newChild(), ((Function) isLambda.get()).getEnvironment(),current.getTail() ); 
			}
			
			return null;
		}
	}
	
	private SExpression basicEvaluator(SExpression expr, Environment environment) {
		if (expr instanceof IdentifierAtom) {
			String operator = ((IdentifierAtom)expr).getValue();
			Evaluator eval = BuiltinOperationManagerSingleton.get().getEvaluator(operator);
			if (eval == null) {
				throw new IllegalStateException("No evaluator registered for operator '" + operator + "'");
			}
			return eval.eval(expr, environment);
		} else {
			throw new IllegalStateException("Expression does not start with an operator");
		}
	}
	
	private SExpression evaluateLambda(Lambda lambda, Environment childEnvironment, Environment environment, SExpression current) {
		IdentifierAtom[] argNames = lambda.getArgumentNames();
		for(int i = 0; i < argNames.length; i++) {
			if (current.isAtom()) {
				childEnvironment.assign(argNames[i], current);
			} else {
				childEnvironment.assign(argNames[i], current.getHead().eval(environment));
				current = current.getTail();
			}
		}
	return lambda.eval(childEnvironment);
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="1412" _type="Delete" date="Mon Nov 29 14:20:32 EST 2021" docASTNodeCount="440" docActiveCodeLength="2804" docExpressionCount="319" docLength="2804" endLine="41" length="8" offset="1773" startLine="41" starttimestamp="1638212009072" timestamp="1623779">
    <text><![CDATA[private ]]></text>
  </DocumentChange>
  <DocumentChange __id="1428" _type="Delete" date="Mon Nov 29 14:20:37 EST 2021" docASTNodeCount="439" docActiveCodeLength="2796" docExpressionCount="319" docLength="2796" endLine="54" length="8" offset="2304" startLine="54" starttimestamp="1638212009072" timestamp="1628339">
    <text><![CDATA[private ]]></text>
  </DocumentChange>
  <DocumentChange __id="1470" _type="Delete" date="Mon Nov 29 14:21:29 EST 2021" docASTNodeCount="372" docActiveCodeLength="2265" docExpressionCount="277" docLength="2265" endLine="52" length="531" offset="1767" repeat="4" startLine="39" starttimestamp="1638212009072" timestamp="1680033" timestamp2="1681222">
    <text><![CDATA[
	
	SExpression basicEvaluator(SExpression expr, Environment environment) {
		if (expr instanceof IdentifierAtom) {
			String operator = ((IdentifierAtom)expr).getValue();
			Evaluator eval = BuiltinOperationManagerSingleton.get().getEvaluator(operator);
			if (eval == null) {
				throw new IllegalStateException("No evaluator registered for operator '" + operator + "'");
			}
			return eval.eval(expr, environment);
		} else {
			throw new IllegalStateException("Expression does not start with an operator");
		}
	}]]></text>
  </DocumentChange>
  <DocumentChange __id="1501" _type="Insert" date="Mon Nov 29 14:21:33 EST 2021" docASTNodeCount="373" docActiveCodeLength="2273" docExpressionCount="277" docLength="2273" length="8" offset="1773" repeat="8" starttimestamp="1638212009072" timestamp="1684168" timestamp2="1684878">
    <text><![CDATA[private ]]></text>
  </DocumentChange>
  <Command __id="1551" _type="DiffBasedFileOpenCommand" date="Mon Nov 29 14:22:43 EST 2021" docASTNodeCount="291" docActiveCodeLength="1943" docExpressionCount="204" docLength="2046" projectName="a5" starttimestamp="1638212009072" timestamp="1754257">
    <filePath><![CDATA[C:\Users\rarael\OneDrive\Documents\COMPSCIENCE\COMP 524\a5\src\evaluators\LambdaSExpressionEvaluator.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package evaluators;¶¶import main.lisp.evaluator.BasicExpressionEvaluator;¶import main.lisp.evaluator.BuiltinOperationManagerSingleton;¶import main.lisp.evaluator.Environment;¶import main.lisp.evaluator.Evaluator;¶import main.lisp.evaluator.function.Lambda;¶import main.lisp.parser.terms.IdentifierAtom;¶import main.lisp.parser.terms.SExpression;¶¶public class LambdaSExpressionEvaluator extends BasicExpressionEvaluator {¶	@Override¶	public SExpression eval(SExpression expr, Environment environment) {¶		// evaluates lambda first¶		if (!expr.getHead().isAtom()) {¶			SExpression eval = basicEvaluator(expr.getHead(), environment);¶			if (eval instanceof Lambda) {¶				Environment childEnvironment = environment.newChild();¶				return evaluateLambda((Lambda) eval, childEnvironment, environment, expr.getTail());¶			}¶		}¶			// when it is not a lambda¶			return basicEvaluator(expr, environment);¶		}¶	¶	// produces your lambda evaluation¶	pr"), Diff(DELETE,"otec"), Diff(INSERT,"iva"), Diff(EQUAL,"te"), Diff(DELETE,"d"), Diff(EQUAL," SExpression evaluateLambda(Lambda lambda, Environment childEnvironment, Environment environment, SExpression current) {¶		IdentifierAtom[] argNames = lambda.getArgumentNames();¶		for(int i = 0; i < argNames.length; i++) {¶			if (current.isAtom()) {¶				childEnvironment.assign(argNames[i], current);¶			} else {¶				childEnvironment.assign(argNames[i], current.getHead().eval(environment));¶				current = current.getTail();¶			}¶		}¶	return lambda.eval(childEnvironment);¶	}¶	¶	// basic evaluator¶	pr"), Diff(DELETE,"otec"), Diff(INSERT,"iva"), Diff(EQUAL,"te"), Diff(DELETE,"d"), Diff(EQUAL," SExpression basicEvaluator(SExpression expr, Environment environment) {¶		if (expr.getHead() instanceof IdentifierAtom) {¶			String operator = ((IdentifierAtom)expr.getHead()).getValue();¶			Evaluator eval = BuiltinOperationManagerSingleton.get().getEvaluator(operator);¶			if (eval == null) {¶				throw new IllegalStateException("No evaluator registered for operator '" + operator + "'");¶			}¶			return eval.eval(expr, environment);¶		} else {¶			throw new IllegalStateException("Expression does not start with an operator");¶		}¶	}¶}¶¶")]]]></diff>
    <snapshot><![CDATA[package evaluators;

import main.lisp.evaluator.BasicExpressionEvaluator;
import main.lisp.evaluator.BuiltinOperationManagerSingleton;
import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.evaluator.function.Lambda;
import main.lisp.parser.terms.IdentifierAtom;
import main.lisp.parser.terms.SExpression;

public class LambdaSExpressionEvaluator extends BasicExpressionEvaluator {
	@Override
	public SExpression eval(SExpression expr, Environment environment) {
		// evaluates lambda first
		if (!expr.getHead().isAtom()) {
			SExpression eval = basicEvaluator(expr.getHead(), environment);
			if (eval instanceof Lambda) {
				Environment childEnvironment = environment.newChild();
				return evaluateLambda((Lambda) eval, childEnvironment, environment, expr.getTail());
			}
		}
			// when it is not a lambda
			return basicEvaluator(expr, environment);
		}
	
	// produces your lambda evaluation
	private SExpression evaluateLambda(Lambda lambda, Environment childEnvironment, Environment environment, SExpression current) {
		IdentifierAtom[] argNames = lambda.getArgumentNames();
		for(int i = 0; i < argNames.length; i++) {
			if (current.isAtom()) {
				childEnvironment.assign(argNames[i], current);
			} else {
				childEnvironment.assign(argNames[i], current.getHead().eval(environment));
				current = current.getTail();
			}
		}
	return lambda.eval(childEnvironment);
	}
	
	// basic evaluator
	private SExpression basicEvaluator(SExpression expr, Environment environment) {
		if (expr.getHead() instanceof IdentifierAtom) {
			String operator = ((IdentifierAtom)expr.getHead()).getValue();
			Evaluator eval = BuiltinOperationManagerSingleton.get().getEvaluator(operator);
			if (eval == null) {
				throw new IllegalStateException("No evaluator registered for operator '" + operator + "'");
			}
			return eval.eval(expr, environment);
		} else {
			throw new IllegalStateException("Expression does not start with an operator");
		}
	}
}

]]></snapshot>
  </Command>
  <Command __id="1566" _type="DiffBasedFileOpenCommand" date="Mon Nov 29 14:22:46 EST 2021" docASTNodeCount="373" docActiveCodeLength="2273" docExpressionCount="277" docLength="2273" projectName="a5" starttimestamp="1638212009072" timestamp="1757860">
    <filePath><![CDATA[C:\Users\rarael\OneDrive\Documents\COMPSCIENCE\COMP 524\a5\src\functional\FuncallEvaluator.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package functional;¶¶import java.util.Optional;¶¶import main.lisp.evaluator.BuiltinOperationManagerSingleton;¶import main.lisp.evaluator.Environment;¶import main.lisp.evaluator.Evaluator;¶import main.lisp.evaluator.function.Function;¶import main.lisp.evaluator.function.Lambda;¶import main.lisp.parser.terms.IdentifierAtom;¶import main.lisp.parser.terms.SExpression;¶¶public class FuncallEvaluator implements Evaluator {¶¶	@Override¶	public SExpression eval(SExpression arg0, Environment arg1) {¶		SExpression current = arg0.getTail();¶		¶		SExpression lambdaOrFunction = null;¶		if (!current.getHead().isAtom()) {¶			lambdaOrFunction = current.getHead().eval(arg1);¶		}¶		if (lambdaOrFunction instanceof Lambda) {¶			Environment childEnvironment = arg1.newChild();¶			return evaluateLambda((Lambda) lambdaOrFunction, childEnvironment, arg1, current.getTail());¶		} else if(lambdaOrFunction instanceof Function) {¶			return evaluateLambda (((Function) lambdaOrFunction).getLambda(), ((Function) lambdaOrFunction).getEnvironment().newChild(), ((Function) lambdaOrFunction).getEnvironment(),current.getTail() );¶		} else {¶			final Optional<SExpression> isLambda = arg1.lookup((IdentifierAtom) current.getHead());¶			if (!isLambda.isEmpty() && isLambda.get() instanceof Lambda) {¶				Environment childEnvironment = arg1.newChild();¶				return evaluateLambda((Lambda) isLambda.get(), childEnvironment, arg1, current.getTail());¶			} else if (!isLambda.isEmpty() && isLambda.get() instanceof Function) {¶				¶				return evaluateLambda (((Function) isLambda.get()).getLambda(), ((Function) isLambda.get()).getEnvironment().newChild(), ((Function) isLambda.get()).getEnvironment(),current.getTail() ); ¶			}¶			¶			return null;¶		}¶	}¶	¶	"), Diff(DELETE,"private SExpression basicEvaluator(SExpression expr, Environment environment) {¶		if (expr instanceof IdentifierAtom) {¶			String operator = ((IdentifierAtom)expr).getValue();¶			Evaluator eval = BuiltinOperationManagerSingleton.get().getEvaluator(operator);¶			if (eval == null) {¶				throw new IllegalStateException("No evaluator registered for operator '" + operator + "'");¶			}¶			return eval.eval(expr, environment);¶		} else {¶			throw new IllegalStateException("Expression does not start with an operator");¶		}¶	}¶	¶	"), Diff(EQUAL,"private SExpression evaluateLambda(Lambda lambda, Environment childEnvironment, Environment environment, SExpression current) {¶		IdentifierAtom[] argNames = lambda.getArgumentNames();¶		for(int i = 0; i < argNames.length; i++) {¶			if (current.isAtom()) {¶				childEnvironment.assign(argNames[i], current);¶			} else {¶				childEnvironment.assign(argNames[i], current.getHead().eval(environment));¶				current = current.getTail();¶			}¶		}¶	return lambda.eval(childEnvironment);¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package functional;

import java.util.Optional;

import main.lisp.evaluator.BuiltinOperationManagerSingleton;
import main.lisp.evaluator.Environment;
import main.lisp.evaluator.Evaluator;
import main.lisp.evaluator.function.Function;
import main.lisp.evaluator.function.Lambda;
import main.lisp.parser.terms.IdentifierAtom;
import main.lisp.parser.terms.SExpression;

public class FuncallEvaluator implements Evaluator {

	@Override
	public SExpression eval(SExpression arg0, Environment arg1) {
		SExpression current = arg0.getTail();
		
		SExpression lambdaOrFunction = null;
		if (!current.getHead().isAtom()) {
			lambdaOrFunction = current.getHead().eval(arg1);
		}
		if (lambdaOrFunction instanceof Lambda) {
			Environment childEnvironment = arg1.newChild();
			return evaluateLambda((Lambda) lambdaOrFunction, childEnvironment, arg1, current.getTail());
		} else if(lambdaOrFunction instanceof Function) {
			return evaluateLambda (((Function) lambdaOrFunction).getLambda(), ((Function) lambdaOrFunction).getEnvironment().newChild(), ((Function) lambdaOrFunction).getEnvironment(),current.getTail() );
		} else {
			final Optional<SExpression> isLambda = arg1.lookup((IdentifierAtom) current.getHead());
			if (!isLambda.isEmpty() && isLambda.get() instanceof Lambda) {
				Environment childEnvironment = arg1.newChild();
				return evaluateLambda((Lambda) isLambda.get(), childEnvironment, arg1, current.getTail());
			} else if (!isLambda.isEmpty() && isLambda.get() instanceof Function) {
				
				return evaluateLambda (((Function) isLambda.get()).getLambda(), ((Function) isLambda.get()).getEnvironment().newChild(), ((Function) isLambda.get()).getEnvironment(),current.getTail() ); 
			}
			
			return null;
		}
	}
	
	private SExpression evaluateLambda(Lambda lambda, Environment childEnvironment, Environment environment, SExpression current) {
		IdentifierAtom[] argNames = lambda.getArgumentNames();
		for(int i = 0; i < argNames.length; i++) {
			if (current.isAtom()) {
				childEnvironment.assign(argNames[i], current);
			} else {
				childEnvironment.assign(argNames[i], current.getHead().eval(environment));
				current = current.getTail();
			}
		}
	return lambda.eval(childEnvironment);
	}

}
]]></snapshot>
  </Command>
  <Command __id="1569" _type="DiffBasedFileOpenCommand" date="Mon Nov 29 14:23:03 EST 2021" docASTNodeCount="233" docActiveCodeLength="1509" docExpressionCount="173" docLength="1683" projectName="a5" starttimestamp="1638212009072" timestamp="1774612">
    <filePath><![CDATA[C:\Users\rarael\OneDrive\Documents\COMPSCIENCE\COMP 524\a5\src\evaluators\StringFormats.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package evaluators;¶import main.lisp.parser.terms.AbstractSExpression;¶import main.lisp.parser.terms.BasicExpression;¶import main.lisp.parser.terms.SExpression;¶public class StringFormats extends BasicExpression{¶¶	public StringFormats(SExpression head, SExpression tail) {¶		super(head, tail);¶	}¶	@Override¶	public String toString() {¶		if(this.isNIL()) {¶			return this.toStringAsSExpression();¶		}¶		return this.isList()? this.toStringAsList() : this.toStringAsSExpression();¶	}¶	@Override¶	public String toStringAsSExpressionDeep() {¶		return "(" + this.getHead().toStringAsSExpressionDeep() + " . " + this.getTail().toStringAsSExpressionDeep() + ")";¶	}¶	¶	@Override¶	public String toStringAsSExpression() {¶		return "(" + this.getHead().toString() + " . " + this.getTail().toString() + ")";¶	}¶	@Override¶	public String toStringAsListHelperPublic() {¶		if (this.getTail().isNIL()) {¶			return this.getHead().toString();¶		}else {¶			return this.getHead().toString() + " " + ((AbstractSExpression) this.getTail()).toStringAsListHelperPublic();¶		}¶		¶	}¶	@Override¶	public String toStringAsList() {¶			// does the same thing as toStringas list deep....need to change¶			return "(" + this.toStringAsListHelperPublic() + ")";¶	}¶¶	@Override¶	public boolean isList() {¶		// if head is a non nil atom and tail is nil, is a list¶		if(this.getHead().isAtom() && !(this.getHead().isNIL()) && this.getTail().isNIL()) {¶			return true;¶			// if the tail is an atom but not nil, it is not a list¶		} else if (this.getTail().isAtom() && !(this.getTail().isNIL())) {¶			return false;¶		} else ¶			return this.getTail().isList();¶		}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1571" _type="DiffBasedFileOpenCommand" date="Mon Nov 29 14:23:03 EST 2021" docASTNodeCount="296" docActiveCodeLength="1628" docExpressionCount="214" docLength="1755" projectName="a5" starttimestamp="1638212009072" timestamp="1774696">
    <filePath><![CDATA[C:\Users\rarael\OneDrive\Documents\COMPSCIENCE\COMP 524\a5\src\functional\FunctionEvaluator.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package functional;¶¶import main.lisp.evaluator.Environment;¶import main.lisp.evaluator.Evaluator;¶import main.lisp.evaluator.function.FunctionFactory;¶import main.lisp.evaluator.function.Lambda;¶import main.lisp.evaluator.function.LambdaFactory;¶import main.lisp.parser.terms.IdentifierAtom;¶import main.lisp.parser.terms.SExpression;¶¶public class FunctionEvaluator implements Evaluator{¶¶	@Override¶	public SExpression eval(SExpression arg0, Environment arg1) {¶		IdentifierAtom[] argNames1 = new IdentifierAtom[1];¶		SExpression current = arg0.getTail().getHead().getTail().getHead();¶		int index = 0;¶		if(current.isAtom()) {¶			argNames1 = new IdentifierAtom[0];¶			return LambdaFactory.newInstance(argNames1, arg0.getTail().getTail());¶		}¶		while(!current.getTail().isNIL()) {¶			// expand size if you still need to add arg names¶			argNames1 = expandArray(argNames1, index);¶			argNames1[index] = (IdentifierAtom) current.getHead();¶			current = current.getTail();¶			index++;¶		}¶		//add last argument (the last argument has nil as its tail)¶		if (!current.getHead().isNIL()) {¶			argNames1 = expandArray(argNames1, index);¶			argNames1[index] = (IdentifierAtom) current.getHead();¶		}¶		¶		Lambda lambda =  LambdaFactory.newInstance(argNames1, arg0.getTail().getHead().getTail().getTail());¶		return FunctionFactory.newInstance(lambda, arg1);¶	}¶	¶	private IdentifierAtom[] expandArray(IdentifierAtom[] array, int index) {¶		if (index == array.length) {¶			int size = array.length+ 1;¶			IdentifierAtom[] newArray = new IdentifierAtom[size];¶			for (int i = 0; i < array.length; i++) {¶				newArray[i] = array[i];¶			}¶			//array = newArray;¶			return newArray;¶		}¶		return array;¶		¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1608" _type="DiffBasedFileOpenCommand" date="Mon Nov 29 14:24:11 EST 2021" docASTNodeCount="154" docActiveCodeLength="934" docExpressionCount="118" docLength="934" projectName="a5" starttimestamp="1638212009072" timestamp="1842211">
    <filePath><![CDATA[C:\Users\rarael\OneDrive\Documents\COMPSCIENCE\COMP 524\a5\src\expression\CondEvaluator.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package expression;¶¶import main.lisp.evaluator.Environment;¶import main.lisp.evaluator.Evaluator;¶import main.lisp.parser.terms.NilAtomicExpressionFactory;¶import main.lisp.parser.terms.SExpression;¶import main.lisp.parser.terms.TAtomicExpressionFactory;¶¶public class CondEvaluator implements Evaluator{¶¶	@Override¶	public SExpression eval(SExpression arg0, Environment arg1) {¶		SExpression condition = arg0.getTail();¶		if(condition.isNIL()) {¶				return NilAtomicExpressionFactory.newInstance();¶		}¶		if (!condition.getHead().isAtom() &&!condition.getHead().getHead().isNIL()) {¶			if (condition.getHead().getTail().isNIL()) {¶				return condition.getHead().getHead().eval(arg1);¶			} else {¶				return condition.getHead().getTail().getHead().eval(arg1);¶			}¶		}else if (condition.getHead().isAtom()) {¶			return condition.getHead().eval(arg1);¶		}else {¶			return eval(condition, arg1);¶		}¶	}¶}¶")]]]></diff>
  </Command>
  <Command __id="1615" _type="DiffBasedFileOpenCommand" date="Mon Nov 29 14:25:12 EST 2021" docASTNodeCount="296" docActiveCodeLength="1628" docExpressionCount="214" docLength="1755" projectName="a5" starttimestamp="1638212009072" timestamp="1903565">
    <filePath><![CDATA[C:\Users\rarael\OneDrive\Documents\COMPSCIENCE\COMP 524\a5\src\functional\FunctionEvaluator.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package functional;¶¶import main.lisp.evaluator.Environment;¶import main.lisp.evaluator.Evaluator;¶import main.lisp.evaluator.function.FunctionFactory;¶import main.lisp.evaluator.function.Lambda;¶import main.lisp.evaluator.function.LambdaFactory;¶import main.lisp.parser.terms.IdentifierAtom;¶import main.lisp.parser.terms.SExpression;¶¶public class FunctionEvaluator implements Evaluator{¶¶	@Override¶	public SExpression eval(SExpression arg0, Environment arg1) {¶		IdentifierAtom[] argNames1 = new IdentifierAtom[1];¶		SExpression current = arg0.getTail().getHead().getTail().getHead();¶		int index = 0;¶		if(current.isAtom()) {¶			argNames1 = new IdentifierAtom[0];¶			return LambdaFactory.newInstance(argNames1, arg0.getTail().getTail());¶		}¶		while(!current.getTail().isNIL()) {¶			// expand size if you still need to add arg names¶			argNames1 = expandArray(argNames1, index);¶			argNames1[index] = (IdentifierAtom) current.getHead();¶			current = current.getTail();¶			index++;¶		}¶		//add last argument (the last argument has nil as its tail)¶		if (!current.getHead().isNIL()) {¶			argNames1 = expandArray(argNames1, index);¶			argNames1[index] = (IdentifierAtom) current.getHead();¶		}¶		¶		Lambda lambda =  LambdaFactory.newInstance(argNames1, arg0.getTail().getHead().getTail().getTail());¶		return FunctionFactory.newInstance(lambda, arg1);¶	}¶	¶	private IdentifierAtom[] expandArray(IdentifierAtom[] array, int index) {¶		if (index == array.length) {¶			int size = array.length+ 1;¶			IdentifierAtom[] newArray = new IdentifierAtom[size];¶			for (int i = 0; i < array.length; i++) {¶				newArray[i] = array[i];¶			}¶			//array = newArray;¶			return newArray;¶		}¶		return array;¶		¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1618" _type="DiffBasedFileOpenCommand" date="Mon Nov 29 14:25:38 EST 2021" docASTNodeCount="154" docActiveCodeLength="934" docExpressionCount="118" docLength="934" projectName="a5" starttimestamp="1638212009072" timestamp="1929291">
    <filePath><![CDATA[C:\Users\rarael\OneDrive\Documents\COMPSCIENCE\COMP 524\a5\src\expression\CondEvaluator.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package expression;¶¶import main.lisp.evaluator.Environment;¶import main.lisp.evaluator.Evaluator;¶import main.lisp.parser.terms.NilAtomicExpressionFactory;¶import main.lisp.parser.terms.SExpression;¶import main.lisp.parser.terms.TAtomicExpressionFactory;¶¶public class CondEvaluator implements Evaluator{¶¶	@Override¶	public SExpression eval(SExpression arg0, Environment arg1) {¶		SExpression condition = arg0.getTail();¶		if(condition.isNIL()) {¶				return NilAtomicExpressionFactory.newInstance();¶		}¶		if (!condition.getHead().isAtom() &&!condition.getHead().getHead().isNIL()) {¶			if (condition.getHead().getTail().isNIL()) {¶				return condition.getHead().getHead().eval(arg1);¶			} else {¶				return condition.getHead().getTail().getHead().eval(arg1);¶			}¶		}else if (condition.getHead().isAtom()) {¶			return condition.getHead().eval(arg1);¶		}else {¶			return eval(condition, arg1);¶		}¶	}¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="1625" _type="Insert" date="Mon Nov 29 14:25:48 EST 2021" docASTNodeCount="133" docActiveCodeLength="855" docExpressionCount="98" docLength="936" length="2" offset="522" starttimestamp="1638212009072" timestamp="1939241">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="1627" _type="Insert" date="Mon Nov 29 14:25:48 EST 2021" docASTNodeCount="109" docActiveCodeLength="808" docExpressionCount="81" docLength="938" length="2" offset="605" starttimestamp="1638212009072" timestamp="1939243">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="1628" _type="Insert" date="Mon Nov 29 14:25:48 EST 2021" docASTNodeCount="100" docActiveCodeLength="756" docExpressionCount="73" docLength="940" length="2" offset="656" starttimestamp="1638212009072" timestamp="1939245">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="1629" _type="Insert" date="Mon Nov 29 14:25:48 EST 2021" docASTNodeCount="98" docActiveCodeLength="745" docExpressionCount="73" docLength="942" length="2" offset="712" starttimestamp="1638212009072" timestamp="1939246">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="1630" _type="Insert" date="Mon Nov 29 14:25:48 EST 2021" docASTNodeCount="87" docActiveCodeLength="683" docExpressionCount="63" docLength="944" length="2" offset="727" starttimestamp="1638212009072" timestamp="1939247">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="1631" _type="Insert" date="Mon Nov 29 14:25:48 EST 2021" docASTNodeCount="103" docActiveCodeLength="679" docExpressionCount="73" docLength="946" length="2" offset="793" starttimestamp="1638212009072" timestamp="1939247">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="1632" _type="Insert" date="Mon Nov 29 14:25:48 EST 2021" docASTNodeCount="101" docActiveCodeLength="636" docExpressionCount="73" docLength="948" length="2" offset="801" starttimestamp="1638212009072" timestamp="1939248">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="1633" _type="Insert" date="Mon Nov 29 14:25:48 EST 2021" docASTNodeCount="94" docActiveCodeLength="595" docExpressionCount="67" docLength="950" length="2" offset="848" starttimestamp="1638212009072" timestamp="1939249">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="1634" _type="Insert" date="Mon Nov 29 14:25:48 EST 2021" docASTNodeCount="92" docActiveCodeLength="586" docExpressionCount="67" docLength="952" length="2" offset="893" starttimestamp="1638212009072" timestamp="1939249">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <Command __id="1626" _type="PauseCommand" date="Mon Nov 29 14:25:48 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="1939241">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[2646]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1638" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.toggle.comment" date="Mon Nov 29 14:25:48 EST 2021" starttimestamp="1638212009072" timestamp="1939261" />
  <Command __id="1640" _type="PauseCommand" date="Mon Nov 29 14:25:49 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="1940644">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1383]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1639" _type="MoveCaretCommand" caretOffset="754" date="Mon Nov 29 14:25:49 EST 2021" docOffset="953" starttimestamp="1638212009072" timestamp="1940644" />
  <Command __id="1641" _type="SelectTextCommand" caretOffset="745" date="Mon Nov 29 14:25:50 EST 2021" end="746" start="745" starttimestamp="1638212009072" timestamp="1941565" />
  <Command __id="1642" _type="MoveCaretCommand" caretOffset="752" date="Mon Nov 29 14:25:51 EST 2021" docOffset="951" starttimestamp="1638212009072" timestamp="1942225" />
  <Command __id="1644" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 29 14:25:51 EST 2021" starttimestamp="1638212009072" timestamp="1942556" />
  <Command __id="1646" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 29 14:25:51 EST 2021" starttimestamp="1638212009072" timestamp="1942738" />
  <DocumentChange __id="1635" _type="Insert" date="Mon Nov 29 14:25:48 EST 2021" docASTNodeCount="87" docActiveCodeLength="554" docExpressionCount="63" docLength="954" length="2" offset="906" starttimestamp="1638212009072" timestamp="1939250">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="1636" _type="Insert" date="Mon Nov 29 14:25:48 EST 2021" docASTNodeCount="87" docActiveCodeLength="551" docExpressionCount="63" docLength="956" length="2" offset="942" starttimestamp="1638212009072" timestamp="1939251">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="1637" _type="Insert" date="Mon Nov 29 14:25:48 EST 2021" docASTNodeCount="87" docActiveCodeLength="549" docExpressionCount="63" docLength="958" length="2" offset="949" starttimestamp="1638212009072" timestamp="1939252">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="1643" _type="Delete" date="Mon Nov 29 14:25:51 EST 2021" docASTNodeCount="87" docActiveCodeLength="551" docExpressionCount="63" docLength="956" endLine="27" length="2" offset="949" repeat="2" startLine="27" starttimestamp="1638212009072" timestamp="1942555" timestamp2="1942737">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <Command __id="1648" _type="PauseCommand" date="Mon Nov 29 14:25:52 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="1943912">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1174]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1647" _type="MoveCaretCommand" caretOffset="748" date="Mon Nov 29 14:25:52 EST 2021" docOffset="947" starttimestamp="1638212009072" timestamp="1943912" />
  <DocumentChange __id="1649" _type="Insert" date="Mon Nov 29 14:25:53 EST 2021" docASTNodeCount="93" docActiveCodeLength="573" docExpressionCount="68" docLength="978" length="22" offset="947" repeat="18" starttimestamp="1638212009072" timestamp="1944298" timestamp2="1950924">
    <text><![CDATA[
		id (condition.evl)]]></text>
  </DocumentChange>
  <Command __id="1650" _type="InsertStringCommand" date="Mon Nov 29 14:25:53 EST 2021" starttimestamp="1638212009072" timestamp="1944302" timestamp2="1944302">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1653" _type="PauseCommand" date="Mon Nov 29 14:25:55 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="1946069">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1767]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="1652" _type="InsertStringCommand" date="Mon Nov 29 14:25:55 EST 2021" starttimestamp="1638212009072" timestamp="1946069" timestamp2="1946069">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1655" _type="InsertStringCommand" date="Mon Nov 29 14:25:55 EST 2021" starttimestamp="1638212009072" timestamp="1946162" timestamp2="1946162">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="1657" _type="InsertStringCommand" date="Mon Nov 29 14:25:55 EST 2021" starttimestamp="1638212009072" timestamp="1946278" timestamp2="1946278">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1659" _type="InsertStringCommand" date="Mon Nov 29 14:25:55 EST 2021" starttimestamp="1638212009072" timestamp="1946555" timestamp2="1946555">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="1661" _type="InsertStringCommand" date="Mon Nov 29 14:25:56 EST 2021" starttimestamp="1638212009072" timestamp="1947252" timestamp2="1947252">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="1663" _type="InsertStringCommand" date="Mon Nov 29 14:25:56 EST 2021" starttimestamp="1638212009072" timestamp="1947349" timestamp2="1947349">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1665" _type="InsertStringCommand" date="Mon Nov 29 14:25:56 EST 2021" starttimestamp="1638212009072" timestamp="1947462" timestamp2="1947462">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1667" _type="InsertStringCommand" date="Mon Nov 29 14:25:57 EST 2021" starttimestamp="1638212009072" timestamp="1947947" timestamp2="1947947">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="1669" _type="InsertStringCommand" date="Mon Nov 29 14:25:57 EST 2021" starttimestamp="1638212009072" timestamp="1948078" timestamp2="1948078">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1671" _type="InsertStringCommand" date="Mon Nov 29 14:25:57 EST 2021" starttimestamp="1638212009072" timestamp="1948218" timestamp2="1948218">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1673" _type="InsertStringCommand" date="Mon Nov 29 14:25:57 EST 2021" starttimestamp="1638212009072" timestamp="1948317" timestamp2="1948317">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1675" _type="InsertStringCommand" date="Mon Nov 29 14:25:57 EST 2021" starttimestamp="1638212009072" timestamp="1948412" timestamp2="1948412">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1677" _type="InsertStringCommand" date="Mon Nov 29 14:25:57 EST 2021" starttimestamp="1638212009072" timestamp="1948514" timestamp2="1948514">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1679" _type="InsertStringCommand" date="Mon Nov 29 14:25:58 EST 2021" starttimestamp="1638212009072" timestamp="1949161" timestamp2="1949161">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1680" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 29 14:25:58 EST 2021" start_end="START" starttimestamp="1638212009072" timestamp="1949163" />
  <Command __id="1685" _type="PauseCommand" date="Mon Nov 29 14:26:00 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="1951402">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[2239]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <DocumentChange __id="1684" _type="Delete" date="Mon Nov 29 14:26:00 EST 2021" docASTNodeCount="91" docActiveCodeLength="570" docExpressionCount="66" docLength="975" endLine="27" length="3" offset="965" repeat="3" startLine="27" starttimestamp="1638212009072" timestamp="1951402" timestamp2="1952012">
    <text><![CDATA[evl]]></text>
  </DocumentChange>
  <DocumentChange __id="1688" _type="Insert" date="Mon Nov 29 14:26:01 EST 2021" docASTNodeCount="93" docActiveCodeLength="573" docExpressionCount="68" docLength="978" length="3" offset="965" repeat="3" starttimestamp="1638212009072" timestamp="1952397" timestamp2="1952598">
    <text><![CDATA[get]]></text>
  </DocumentChange>
  <Command __id="1692" _type="PauseCommand" date="Mon Nov 29 14:26:02 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="1953688">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1291]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="1691" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 29 14:26:02 EST 2021" start_end="END" starttimestamp="1638212009072" timestamp="1953688" />
  <DocumentChange __id="1693" _type="Replace" date="Mon Nov 29 14:26:02 EST 2021" docASTNodeCount="93" docActiveCodeLength="579" docExpressionCount="68" docLength="984" endLine="27" insertionLength="9" int_docASTNodeCount="91" int_docActiveCodeLength="570" int_docExpressionCount="66" int_docLength="975" length="3" offset="965" startLine="27" starttimestamp="1638212009072" timestamp="1953690">
    <deletedText><![CDATA[get]]></deletedText>
    <insertedText><![CDATA[getHead()]]></insertedText>
  </DocumentChange>
  <Command __id="1694" _type="InsertStringCommand" date="Mon Nov 29 14:26:02 EST 2021" starttimestamp="1638212009072" timestamp="1953694" timestamp2="1953694">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="1695" _type="Insert" date="Mon Nov 29 14:26:03 EST 2021" docASTNodeCount="95" docActiveCodeLength="582" docExpressionCount="70" docLength="987" length="3" offset="974" repeat="3" starttimestamp="1638212009072" timestamp="1954538" timestamp2="1954974">
    <text><![CDATA[.ev]]></text>
  </DocumentChange>
  <Command __id="1696" _type="InsertStringCommand" date="Mon Nov 29 14:26:03 EST 2021" starttimestamp="1638212009072" timestamp="1954539" timestamp2="1954539">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1697" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 29 14:26:03 EST 2021" start_end="START" starttimestamp="1638212009072" timestamp="1954541" />
  <Command __id="1701" _type="PauseCommand" date="Mon Nov 29 14:26:04 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="1955655">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[1114]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="1700" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 29 14:26:04 EST 2021" start_end="END" starttimestamp="1638212009072" timestamp="1955655" />
  <DocumentChange __id="1702" _type="Replace" date="Mon Nov 29 14:26:04 EST 2021" docASTNodeCount="96" docActiveCodeLength="590" docExpressionCount="71" docLength="995" endLine="27" insertionLength="10" int_docASTNodeCount="93" int_docActiveCodeLength="580" int_docExpressionCount="68" int_docLength="985" length="2" offset="975" startLine="27" starttimestamp="1638212009072" timestamp="1955657">
    <deletedText><![CDATA[ev]]></deletedText>
    <insertedText><![CDATA[eval(arg0)]]></insertedText>
  </DocumentChange>
  <Command __id="1703" _type="InsertStringCommand" date="Mon Nov 29 14:26:04 EST 2021" starttimestamp="1638212009072" timestamp="1955695" timestamp2="1955695">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="1704" _type="Replace" date="Mon Nov 29 14:26:05 EST 2021" docASTNodeCount="96" docActiveCodeLength="587" docExpressionCount="71" docLength="992" endLine="27" insertionLength="1" int_docASTNodeCount="95" int_docActiveCodeLength="586" int_docExpressionCount="70" int_docLength="991" length="4" offset="980" startLine="27" starttimestamp="1638212009072" timestamp="1956058">
    <deletedText><![CDATA[arg0]]></deletedText>
    <insertedText><![CDATA[a]]></insertedText>
  </DocumentChange>
  <Command __id="1705" _type="InsertStringCommand" date="Mon Nov 29 14:26:05 EST 2021" starttimestamp="1638212009072" timestamp="1956062" timestamp2="1956062">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1707" _type="InsertStringCommand" date="Mon Nov 29 14:26:05 EST 2021" starttimestamp="1638212009072" timestamp="1956141" timestamp2="1956141">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1709" _type="InsertStringCommand" date="Mon Nov 29 14:26:05 EST 2021" starttimestamp="1638212009072" timestamp="1956254" timestamp2="1956254">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="1711" _type="InsertStringCommand" date="Mon Nov 29 14:26:05 EST 2021" starttimestamp="1638212009072" timestamp="1956419" timestamp2="1956419">
    <data><![CDATA[1]]></data>
  </Command>
  <Command __id="1713" _type="PauseCommand" date="Mon Nov 29 14:26:07 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="1958037">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1617]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="1712" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Nov 29 14:26:07 EST 2021" starttimestamp="1638212009072" timestamp="1958036" />
  <Command __id="1715" _type="PauseCommand" date="Mon Nov 29 14:26:08 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="1959209">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1173]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1716" _type="InsertStringCommand" date="Mon Nov 29 14:26:08 EST 2021" starttimestamp="1638212009072" timestamp="1959211" timestamp2="1959211">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1717" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 29 14:26:08 EST 2021" start_end="START" starttimestamp="1638212009072" timestamp="1959213" />
  <Command __id="1721" _type="PauseCommand" date="Mon Nov 29 14:26:11 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="1962042">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[2829]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="1725" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 29 14:26:11 EST 2021" start_end="END" starttimestamp="1638212009072" timestamp="1962879" />
  <Command __id="1727" _type="InsertStringCommand" date="Mon Nov 29 14:26:12 EST 2021" starttimestamp="1638212009072" timestamp="1963045" timestamp2="1963045">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1729" _type="InsertStringCommand" date="Mon Nov 29 14:26:12 EST 2021" starttimestamp="1638212009072" timestamp="1963157" timestamp2="1963157">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1731" _type="InsertStringCommand" date="Mon Nov 29 14:26:12 EST 2021" starttimestamp="1638212009072" timestamp="1963160" timestamp2="1963160">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1733" _type="InsertStringCommand" date="Mon Nov 29 14:26:12 EST 2021" starttimestamp="1638212009072" timestamp="1963279" timestamp2="1963279">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1735" _type="InsertStringCommand" date="Mon Nov 29 14:26:12 EST 2021" starttimestamp="1638212009072" timestamp="1963399" timestamp2="1963399">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1737" _type="InsertStringCommand" date="Mon Nov 29 14:26:12 EST 2021" starttimestamp="1638212009072" timestamp="1963551" timestamp2="1963551">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1739" _type="InsertStringCommand" date="Mon Nov 29 14:26:12 EST 2021" starttimestamp="1638212009072" timestamp="1963655" timestamp2="1963655">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="1741" _type="InsertStringCommand" date="Mon Nov 29 14:26:12 EST 2021" starttimestamp="1638212009072" timestamp="1963759" timestamp2="1963759">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1743" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 29 14:26:13 EST 2021" starttimestamp="1638212009072" timestamp="1964064" />
  <Command __id="1745" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 29 14:26:13 EST 2021" starttimestamp="1638212009072" timestamp="1964563" />
  <Command __id="1747" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 29 14:26:13 EST 2021" starttimestamp="1638212009072" timestamp="1964596" />
  <Command __id="1749" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 29 14:26:13 EST 2021" starttimestamp="1638212009072" timestamp="1964629" />
  <Command __id="1751" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 29 14:26:13 EST 2021" starttimestamp="1638212009072" timestamp="1964662" />
  <Command __id="1753" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 29 14:26:13 EST 2021" starttimestamp="1638212009072" timestamp="1964804" />
  <Command __id="1755" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 29 14:26:14 EST 2021" starttimestamp="1638212009072" timestamp="1964986" />
  <Command __id="1757" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 29 14:26:14 EST 2021" starttimestamp="1638212009072" timestamp="1965165" />
  <Command __id="1759" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 29 14:26:14 EST 2021" starttimestamp="1638212009072" timestamp="1965336" />
  <Command __id="1761" _type="InsertStringCommand" date="Mon Nov 29 14:26:14 EST 2021" starttimestamp="1638212009072" timestamp="1965835" timestamp2="1965835">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="1763" _type="InsertStringCommand" date="Mon Nov 29 14:26:15 EST 2021" starttimestamp="1638212009072" timestamp="1966109" timestamp2="1966109">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1765" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 29 14:26:15 EST 2021" starttimestamp="1638212009072" timestamp="1966455" />
  <Command __id="1767" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 29 14:26:15 EST 2021" starttimestamp="1638212009072" timestamp="1966641" />
  <Command __id="1769" _type="InsertStringCommand" date="Mon Nov 29 14:26:16 EST 2021" starttimestamp="1638212009072" timestamp="1967125" timestamp2="1967125">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1770" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 29 14:26:16 EST 2021" start_end="START" starttimestamp="1638212009072" timestamp="1967127" />
  <Command __id="1774" _type="PauseCommand" date="Mon Nov 29 14:26:17 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="1968711">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[1584]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="1773" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 29 14:26:17 EST 2021" start_end="END" starttimestamp="1638212009072" timestamp="1968711" />
  <Command __id="1776" _type="InsertStringCommand" date="Mon Nov 29 14:26:17 EST 2021" starttimestamp="1638212009072" timestamp="1968716" timestamp2="1968716">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1778" _type="PauseCommand" date="Mon Nov 29 14:26:19 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="1970157">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1441]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1777" _type="SelectTextCommand" caretOffset="756" date="Mon Nov 29 14:26:19 EST 2021" end="757" start="756" starttimestamp="1638212009072" timestamp="1970157" />
  <Command __id="1780" _type="PauseCommand" date="Mon Nov 29 14:26:20 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="1971335">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1178]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1779" _type="MoveCaretCommand" caretOffset="755" date="Mon Nov 29 14:26:20 EST 2021" docOffset="954" starttimestamp="1638212009072" timestamp="1971335" />
  <Command __id="1781" _type="MoveCaretCommand" caretOffset="756" date="Mon Nov 29 14:26:21 EST 2021" docOffset="955" starttimestamp="1638212009072" timestamp="1972116" />
  <Command __id="1783" _type="InsertStringCommand" date="Mon Nov 29 14:26:21 EST 2021" starttimestamp="1638212009072" timestamp="1972527" timestamp2="1972527">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="1784" _type="MoveCaretCommand" caretOffset="754" date="Mon Nov 29 14:26:22 EST 2021" docOffset="953" starttimestamp="1638212009072" timestamp="1973357" />
  <Command __id="1786" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 29 14:26:22 EST 2021" starttimestamp="1638212009072" timestamp="1973639" />
  <Command __id="1788" _type="InsertStringCommand" date="Mon Nov 29 14:26:22 EST 2021" starttimestamp="1638212009072" timestamp="1973743" timestamp2="1973743">
    <data><![CDATA[f]]></data>
  </Command>
  <DocumentChange __id="1706" _type="Insert" date="Mon Nov 29 14:26:05 EST 2021" docASTNodeCount="96" docActiveCodeLength="590" docExpressionCount="71" docLength="995" length="3" offset="981" repeat="3" starttimestamp="1638212009072" timestamp="1956139" timestamp2="1956418">
    <text><![CDATA[rg1]]></text>
  </DocumentChange>
  <DocumentChange __id="1714" _type="Insert" date="Mon Nov 29 14:26:08 EST 2021" docASTNodeCount="98" docActiveCodeLength="593" docExpressionCount="73" docLength="998" length="3" offset="985" repeat="3" starttimestamp="1638212009072" timestamp="1959209" timestamp2="1960082">
    <text><![CDATA[.is]]></text>
  </DocumentChange>
  <DocumentChange __id="1720" _type="Delete" date="Mon Nov 29 14:26:11 EST 2021" docASTNodeCount="96" docActiveCodeLength="590" docExpressionCount="71" docLength="995" endLine="27" length="3" offset="985" repeat="3" startLine="27" starttimestamp="1638212009072" timestamp="1962042" timestamp2="1962655">
    <text><![CDATA[.is]]></text>
  </DocumentChange>
  <DocumentChange __id="1724" _type="Insert" date="Mon Nov 29 14:26:11 EST 2021" docASTNodeCount="91" docActiveCodeLength="599" docExpressionCount="66" docLength="1004" length="9" offset="985" repeat="9" starttimestamp="1638212009072" timestamp="1962842" timestamp2="1963758">
    <text><![CDATA[ instance]]></text>
  </DocumentChange>
  <DocumentChange __id="1742" _type="Delete" date="Mon Nov 29 14:26:13 EST 2021" docASTNodeCount="96" docActiveCodeLength="590" docExpressionCount="71" docLength="995" endLine="27" length="9" offset="985" repeat="9" startLine="27" starttimestamp="1638212009072" timestamp="1964063" timestamp2="1965335">
    <text><![CDATA[ instance]]></text>
  </DocumentChange>
  <DocumentChange __id="1760" _type="Insert" date="Mon Nov 29 14:26:14 EST 2021" docASTNodeCount="97" docActiveCodeLength="592" docExpressionCount="72" docLength="997" length="2" offset="985" repeat="2" starttimestamp="1638212009072" timestamp="1965834" timestamp2="1966107">
    <text><![CDATA[,i]]></text>
  </DocumentChange>
  <DocumentChange __id="1764" _type="Delete" date="Mon Nov 29 14:26:15 EST 2021" docASTNodeCount="96" docActiveCodeLength="590" docExpressionCount="71" docLength="995" endLine="27" length="2" offset="985" repeat="2" startLine="27" starttimestamp="1638212009072" timestamp="1966454" timestamp2="1966640">
    <text><![CDATA[,i]]></text>
  </DocumentChange>
  <DocumentChange __id="1768" _type="Insert" date="Mon Nov 29 14:26:16 EST 2021" docASTNodeCount="98" docActiveCodeLength="593" docExpressionCount="73" docLength="998" length="3" offset="985" repeat="3" starttimestamp="1638212009072" timestamp="1967123" timestamp2="1967425">
    <text><![CDATA[.is]]></text>
  </DocumentChange>
  <DocumentChange __id="1775" _type="Replace" date="Mon Nov 29 14:26:17 EST 2021" docASTNodeCount="98" docActiveCodeLength="598" docExpressionCount="73" docLength="1003" endLine="27" insertionLength="7" int_docASTNodeCount="96" int_docActiveCodeLength="591" int_docExpressionCount="71" int_docLength="996" length="2" offset="986" startLine="27" starttimestamp="1638212009072" timestamp="1968713">
    <deletedText><![CDATA[is]]></deletedText>
    <insertedText><![CDATA[isNIL()]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1782" _type="Insert" date="Mon Nov 29 14:26:21 EST 2021" docASTNodeCount="99" docActiveCodeLength="599" docExpressionCount="74" docLength="1004" length="1" offset="955" starttimestamp="1638212009072" timestamp="1972525">
    <text><![CDATA[!]]></text>
  </DocumentChange>
  <DocumentChange __id="1785" _type="Delete" date="Mon Nov 29 14:26:22 EST 2021" docASTNodeCount="99" docActiveCodeLength="598" docExpressionCount="74" docLength="1003" endLine="27" length="1" offset="952" startLine="27" starttimestamp="1638212009072" timestamp="1973636">
    <text><![CDATA[d]]></text>
  </DocumentChange>
  <DocumentChange __id="1787" _type="Insert" date="Mon Nov 29 14:26:22 EST 2021" docASTNodeCount="98" docActiveCodeLength="599" docExpressionCount="72" docLength="1004" length="1" offset="952" starttimestamp="1638212009072" timestamp="1973740">
    <text><![CDATA[f]]></text>
  </DocumentChange>
  <Command __id="1790" _type="PauseCommand" date="Mon Nov 29 14:26:24 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="1974960">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1217]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1789" _type="MoveCaretCommand" caretOffset="796" date="Mon Nov 29 14:26:24 EST 2021" docOffset="995" starttimestamp="1638212009072" timestamp="1974960" />
  <Command __id="1792" _type="InsertStringCommand" date="Mon Nov 29 14:26:24 EST 2021" starttimestamp="1638212009072" timestamp="1975444" timestamp2="1975444">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1794" _type="InsertStringCommand" date="Mon Nov 29 14:26:24 EST 2021" starttimestamp="1638212009072" timestamp="1975710" timestamp2="1975710">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="1796" _type="InsertStringCommand" date="Mon Nov 29 14:26:24 EST 2021" starttimestamp="1638212009072" timestamp="1975918" timestamp2="1975918">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1799" _type="PauseCommand" date="Mon Nov 29 14:26:26 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="1977492">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1574]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="1798" _type="InsertStringCommand" date="Mon Nov 29 14:26:26 EST 2021" starttimestamp="1638212009072" timestamp="1977492" timestamp2="1977492">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1801" _type="InsertStringCommand" date="Mon Nov 29 14:26:26 EST 2021" starttimestamp="1638212009072" timestamp="1977587" timestamp2="1977587">
    <data><![CDATA[e]]></data>
  </Command>
  <DocumentChange __id="1791" _type="Insert" date="Mon Nov 29 14:26:24 EST 2021" docASTNodeCount="100" docActiveCodeLength="613" docExpressionCount="73" docLength="1018" length="14" offset="995" repeat="5" starttimestamp="1638212009072" timestamp="1975442" timestamp2="1977585">
    <text><![CDATA[ {
			re
		}]]></text>
  </DocumentChange>
  <DocumentChange __id="1802" _type="Insert" date="Mon Nov 29 14:26:29 EST 2021" docASTNodeCount="70" docActiveCodeLength="632" docExpressionCount="52" docLength="1037" length="19" offset="1004" repeat="19" starttimestamp="1638212009072" timestamp="1980578" timestamp2="1983880">
    <text><![CDATA[turn condition.get']]></text>
  </DocumentChange>
  <DocumentChange __id="1838" _type="Delete" date="Mon Nov 29 14:26:33 EST 2021" docASTNodeCount="102" docActiveCodeLength="631" docExpressionCount="75" docLength="1036" endLine="28" length="1" offset="1022" startLine="28" starttimestamp="1638212009072" timestamp="1984397">
    <text><![CDATA[']]></text>
  </DocumentChange>
  <Command __id="1803" _type="PauseCommand" date="Mon Nov 29 14:26:29 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="1980578">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2991]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1804" _type="InsertStringCommand" date="Mon Nov 29 14:26:29 EST 2021" starttimestamp="1638212009072" timestamp="1980588" timestamp2="1980588">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1806" _type="InsertStringCommand" date="Mon Nov 29 14:26:29 EST 2021" starttimestamp="1638212009072" timestamp="1980693" timestamp2="1980693">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="1808" _type="InsertStringCommand" date="Mon Nov 29 14:26:29 EST 2021" starttimestamp="1638212009072" timestamp="1980806" timestamp2="1980806">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1810" _type="InsertStringCommand" date="Mon Nov 29 14:26:30 EST 2021" starttimestamp="1638212009072" timestamp="1981303" timestamp2="1981303">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1812" _type="InsertStringCommand" date="Mon Nov 29 14:26:30 EST 2021" starttimestamp="1638212009072" timestamp="1981683" timestamp2="1981683">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1814" _type="InsertStringCommand" date="Mon Nov 29 14:26:30 EST 2021" starttimestamp="1638212009072" timestamp="1981878" timestamp2="1981878">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="1816" _type="InsertStringCommand" date="Mon Nov 29 14:26:31 EST 2021" starttimestamp="1638212009072" timestamp="1981968" timestamp2="1981968">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1818" _type="InsertStringCommand" date="Mon Nov 29 14:26:31 EST 2021" starttimestamp="1638212009072" timestamp="1982063" timestamp2="1982063">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1820" _type="InsertStringCommand" date="Mon Nov 29 14:26:31 EST 2021" starttimestamp="1638212009072" timestamp="1982182" timestamp2="1982182">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="1822" _type="InsertStringCommand" date="Mon Nov 29 14:26:31 EST 2021" starttimestamp="1638212009072" timestamp="1982334" timestamp2="1982334">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1824" _type="InsertStringCommand" date="Mon Nov 29 14:26:31 EST 2021" starttimestamp="1638212009072" timestamp="1982449" timestamp2="1982449">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1826" _type="InsertStringCommand" date="Mon Nov 29 14:26:31 EST 2021" starttimestamp="1638212009072" timestamp="1982569" timestamp2="1982569">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1828" _type="InsertStringCommand" date="Mon Nov 29 14:26:31 EST 2021" starttimestamp="1638212009072" timestamp="1982649" timestamp2="1982649">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1830" _type="InsertStringCommand" date="Mon Nov 29 14:26:31 EST 2021" starttimestamp="1638212009072" timestamp="1982734" timestamp2="1982734">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1832" _type="InsertStringCommand" date="Mon Nov 29 14:26:31 EST 2021" starttimestamp="1638212009072" timestamp="1982922" timestamp2="1982922">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1833" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 29 14:26:31 EST 2021" start_end="START" starttimestamp="1638212009072" timestamp="1982924" />
  <Command __id="1839" _type="PauseCommand" date="Mon Nov 29 14:26:33 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="1984397">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[1473]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="1847" _type="PauseCommand" date="Mon Nov 29 14:26:36 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="1987418">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[2347]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="1846" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 29 14:26:36 EST 2021" start_end="START" starttimestamp="1638212009072" timestamp="1987418" />
  <Command __id="1852" _type="PauseCommand" date="Mon Nov 29 14:26:37 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="1988486">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[1068]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="1851" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 29 14:26:37 EST 2021" start_end="END" starttimestamp="1638212009072" timestamp="1988486" />
  <Command __id="1854" _type="InsertStringCommand" date="Mon Nov 29 14:26:37 EST 2021" starttimestamp="1638212009072" timestamp="1988521" timestamp2="1988521">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1856" _type="InsertStringCommand" date="Mon Nov 29 14:26:38 EST 2021" starttimestamp="1638212009072" timestamp="1988957" timestamp2="1988957">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1858" _type="InsertStringCommand" date="Mon Nov 29 14:26:38 EST 2021" starttimestamp="1638212009072" timestamp="1989071" timestamp2="1989071">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1860" _type="InsertStringCommand" date="Mon Nov 29 14:26:38 EST 2021" starttimestamp="1638212009072" timestamp="1989209" timestamp2="1989209">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="1862" _type="InsertStringCommand" date="Mon Nov 29 14:26:38 EST 2021" starttimestamp="1638212009072" timestamp="1989336" timestamp2="1989336">
    <data><![CDATA[1]]></data>
  </Command>
  <Command __id="1863" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Nov 29 14:26:38 EST 2021" starttimestamp="1638212009072" timestamp="1989762" />
  <Command __id="1865" _type="InsertStringCommand" date="Mon Nov 29 14:26:39 EST 2021" starttimestamp="1638212009072" timestamp="1990676" timestamp2="1990676">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="1867" _type="PauseCommand" date="Mon Nov 29 14:26:41 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="1992051">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1375]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1866" _type="MoveCaretCommand" caretOffset="846" date="Mon Nov 29 14:26:41 EST 2021" docOffset="1045" starttimestamp="1638212009072" timestamp="1992051" />
  <DocumentChange __id="1840" _type="Insert" date="Mon Nov 29 14:26:34 EST 2021" docASTNodeCount="104" docActiveCodeLength="641" docExpressionCount="77" docLength="1046" length="10" offset="1022" repeat="9" starttimestamp="1638212009072" timestamp="1985071" timestamp2="1987999">
    <text><![CDATA[Head().eva]]></text>
  </DocumentChange>
  <DocumentChange __id="1853" _type="Replace" date="Mon Nov 29 14:26:37 EST 2021" docASTNodeCount="105" docActiveCodeLength="648" docExpressionCount="78" docLength="1053" endLine="28" insertionLength="10" int_docASTNodeCount="102" int_docActiveCodeLength="638" int_docExpressionCount="75" int_docLength="1043" length="3" offset="1029" startLine="28" starttimestamp="1638212009072" timestamp="1988488">
    <deletedText><![CDATA[eva]]></deletedText>
    <insertedText><![CDATA[eval(arg0)]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1855" _type="Replace" date="Mon Nov 29 14:26:38 EST 2021" docASTNodeCount="105" docActiveCodeLength="645" docExpressionCount="78" docLength="1050" endLine="28" insertionLength="1" int_docASTNodeCount="104" int_docActiveCodeLength="644" int_docExpressionCount="77" int_docLength="1049" length="4" offset="1034" startLine="28" starttimestamp="1638212009072" timestamp="1988953">
    <deletedText><![CDATA[arg0]]></deletedText>
    <insertedText><![CDATA[a]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1857" _type="Insert" date="Mon Nov 29 14:26:38 EST 2021" docASTNodeCount="105" docActiveCodeLength="648" docExpressionCount="78" docLength="1053" length="3" offset="1035" repeat="3" starttimestamp="1638212009072" timestamp="1989070" timestamp2="1989335">
    <text><![CDATA[rg1]]></text>
  </DocumentChange>
  <DocumentChange __id="1864" _type="Insert" date="Mon Nov 29 14:26:39 EST 2021" docASTNodeCount="105" docActiveCodeLength="649" docExpressionCount="78" docLength="1054" length="1" offset="1039" starttimestamp="1638212009072" timestamp="1990673">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <Command __id="1869" _type="PauseCommand" date="Mon Nov 29 14:26:42 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="1993241">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1190]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1870" _type="InsertStringCommand" date="Mon Nov 29 14:26:42 EST 2021" starttimestamp="1638212009072" timestamp="1993244" timestamp2="1993244">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1872" _type="InsertStringCommand" date="Mon Nov 29 14:26:42 EST 2021" starttimestamp="1638212009072" timestamp="1993650" timestamp2="1993650">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1874" _type="InsertStringCommand" date="Mon Nov 29 14:26:42 EST 2021" starttimestamp="1638212009072" timestamp="1993879" timestamp2="1993879">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="1876" _type="InsertStringCommand" date="Mon Nov 29 14:26:43 EST 2021" starttimestamp="1638212009072" timestamp="1994035" timestamp2="1994035">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1878" _type="InsertStringCommand" date="Mon Nov 29 14:26:43 EST 2021" starttimestamp="1638212009072" timestamp="1994095" timestamp2="1994095">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1880" _type="InsertStringCommand" date="Mon Nov 29 14:26:43 EST 2021" starttimestamp="1638212009072" timestamp="1994239" timestamp2="1994239">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1882" _type="InsertStringCommand" date="Mon Nov 29 14:26:43 EST 2021" starttimestamp="1638212009072" timestamp="1994691" timestamp2="1994691">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="1884" _type="InsertStringCommand" date="Mon Nov 29 14:26:43 EST 2021" starttimestamp="1638212009072" timestamp="1994839" timestamp2="1994839">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1886" _type="InsertStringCommand" date="Mon Nov 29 14:26:44 EST 2021" starttimestamp="1638212009072" timestamp="1995152" timestamp2="1995152">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1888" _type="InsertStringCommand" date="Mon Nov 29 14:26:44 EST 2021" starttimestamp="1638212009072" timestamp="1995239" timestamp2="1995239">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1890" _type="InsertStringCommand" date="Mon Nov 29 14:26:44 EST 2021" starttimestamp="1638212009072" timestamp="1995400" timestamp2="1995400">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1892" _type="InsertStringCommand" date="Mon Nov 29 14:26:44 EST 2021" starttimestamp="1638212009072" timestamp="1995534" timestamp2="1995534">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="1894" _type="InsertStringCommand" date="Mon Nov 29 14:26:44 EST 2021" starttimestamp="1638212009072" timestamp="1995622" timestamp2="1995622">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1896" _type="InsertStringCommand" date="Mon Nov 29 14:26:44 EST 2021" starttimestamp="1638212009072" timestamp="1995769" timestamp2="1995769">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1898" _type="InsertStringCommand" date="Mon Nov 29 14:26:45 EST 2021" starttimestamp="1638212009072" timestamp="1995964" timestamp2="1995964">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1901" _type="PauseCommand" date="Mon Nov 29 14:26:46 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="1997126">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1162]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="1900" _type="InsertStringCommand" date="Mon Nov 29 14:26:46 EST 2021" starttimestamp="1638212009072" timestamp="1997126" timestamp2="1997126">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1903" _type="InsertStringCommand" date="Mon Nov 29 14:26:46 EST 2021" starttimestamp="1638212009072" timestamp="1997292" timestamp2="1997292">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="1905" _type="InsertStringCommand" date="Mon Nov 29 14:26:46 EST 2021" starttimestamp="1638212009072" timestamp="1997721" timestamp2="1997721">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1907" _type="InsertStringCommand" date="Mon Nov 29 14:26:46 EST 2021" starttimestamp="1638212009072" timestamp="1997838" timestamp2="1997838">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="1909" _type="InsertStringCommand" date="Mon Nov 29 14:26:47 EST 2021" starttimestamp="1638212009072" timestamp="1998075" timestamp2="1998075">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="1912" _type="PauseCommand" date="Mon Nov 29 14:26:48 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="1999685">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1610]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="1911" _type="InsertStringCommand" date="Mon Nov 29 14:26:48 EST 2021" starttimestamp="1638212009072" timestamp="1999685" timestamp2="1999685">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="1914" _type="InsertStringCommand" date="Mon Nov 29 14:26:48 EST 2021" starttimestamp="1638212009072" timestamp="1999802" timestamp2="1999802">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1916" _type="InsertStringCommand" date="Mon Nov 29 14:26:48 EST 2021" starttimestamp="1638212009072" timestamp="1999895" timestamp2="1999895">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1918" _type="InsertStringCommand" date="Mon Nov 29 14:26:49 EST 2021" starttimestamp="1638212009072" timestamp="2000017" timestamp2="2000017">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="1920" _type="InsertStringCommand" date="Mon Nov 29 14:26:49 EST 2021" starttimestamp="1638212009072" timestamp="2000161" timestamp2="2000161">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1922" _type="InsertStringCommand" date="Mon Nov 29 14:26:49 EST 2021" starttimestamp="1638212009072" timestamp="2000309" timestamp2="2000309">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1924" _type="InsertStringCommand" date="Mon Nov 29 14:26:49 EST 2021" starttimestamp="1638212009072" timestamp="2000415" timestamp2="2000415">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1926" _type="InsertStringCommand" date="Mon Nov 29 14:26:49 EST 2021" starttimestamp="1638212009072" timestamp="2000475" timestamp2="2000475">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1928" _type="InsertStringCommand" date="Mon Nov 29 14:26:49 EST 2021" starttimestamp="1638212009072" timestamp="2000561" timestamp2="2000561">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1931" _type="PauseCommand" date="Mon Nov 29 14:26:51 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="2002269">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1708]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="1930" _type="InsertStringCommand" date="Mon Nov 29 14:26:51 EST 2021" starttimestamp="1638212009072" timestamp="2002269" timestamp2="2002269">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="1933" _type="InsertStringCommand" date="Mon Nov 29 14:26:52 EST 2021" starttimestamp="1638212009072" timestamp="2003225" timestamp2="2003225">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1935" _type="InsertStringCommand" date="Mon Nov 29 14:26:52 EST 2021" starttimestamp="1638212009072" timestamp="2003291" timestamp2="2003291">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1937" _type="InsertStringCommand" date="Mon Nov 29 14:26:52 EST 2021" starttimestamp="1638212009072" timestamp="2003378" timestamp2="2003378">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1939" _type="InsertStringCommand" date="Mon Nov 29 14:26:52 EST 2021" starttimestamp="1638212009072" timestamp="2003483" timestamp2="2003483">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="1941" _type="InsertStringCommand" date="Mon Nov 29 14:26:52 EST 2021" starttimestamp="1638212009072" timestamp="2003565" timestamp2="2003565">
    <data><![CDATA[1]]></data>
  </Command>
  <Command __id="1942" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Nov 29 14:26:53 EST 2021" starttimestamp="1638212009072" timestamp="2003976" />
  <Command __id="1944" _type="InsertStringCommand" date="Mon Nov 29 14:26:53 EST 2021" starttimestamp="1638212009072" timestamp="2004899" timestamp2="2004899">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="1958" _type="PauseCommand" date="Mon Nov 29 14:27:05 EST 2021" range="5s-10s" starttimestamp="1638212009072" timestamp="2016599">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[5349]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ProgramExecutionEvent]]></next>
  </Command>
  <Command __id="1957" _type="ProgramExecutionEvent" className="/a5/src/a5/RunLisp.java" date="Mon Nov 29 14:27:05 EST 2021" kind="HitBreakPoint" projectName="a5" starttimestamp="1638212009072" timestamp="2016599" type="Run" />
  <Command __id="1959" _type="RunCommand" className="/a5/src/a5/RunLisp.java" date="Mon Nov 29 14:27:05 EST 2021" kind="HitBreakPoint" projectName="a5" starttimestamp="1638212009072" timestamp="2016599" type="Run" />
  <Command __id="1960" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:27:05 EST 2021" starttimestamp="1638212009072" timestamp="2016682" />
  <Command __id="1961" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:27:05 EST 2021" starttimestamp="1638212009072" timestamp="2016686" />
  <Command __id="1962" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:27:05 EST 2021" starttimestamp="1638212009072" timestamp="2016686" />
  <Command __id="1963" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:27:05 EST 2021" starttimestamp="1638212009072" timestamp="2016687" />
  <Command __id="1964" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:27:05 EST 2021" starttimestamp="1638212009072" timestamp="2016687" />
  <Command __id="1965" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:27:05 EST 2021" starttimestamp="1638212009072" timestamp="2016688" />
  <Command __id="1966" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:27:05 EST 2021" starttimestamp="1638212009072" timestamp="2016689" />
  <Command __id="1967" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:27:05 EST 2021" starttimestamp="1638212009072" timestamp="2016691" />
  <Command __id="1969" _type="PauseCommand" date="Mon Nov 29 14:27:10 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="2021428">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[4737]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="1968" _type="ConsoleInput" date="Mon Nov 29 14:27:10 EST 2021" starttimestamp="1638212009072" timestamp="2021428" type="Exception">
    <outputString><![CDATA[(cond T)
]]></outputString>
  </Command>
  <Command __id="1970" _type="ConsoleOutput" date="Mon Nov 29 14:27:10 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="2021487" type="ConsoleOutput">
    <outputString><![CDATA[T
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"T"), Diff(DELETE,"est execution time (ms):21¶Test execution time (ms):9¶Test execution time (ms):10¶FuncallCallsExpressionFactory did not pass completely:Checkstyle output does not match:.*INFO.*BasicFuncallEvaluator(.*)main.lisp.parser.terms.ExpressionFactory!newInstance:main.lisp.parser.terms.SExpression;main.lisp.parser.terms.SExpression->SExpression(.*)\[MissingMethodCall\].*. Is your class named or tagged properly and checkstyle file upto date?%0.0¶¶Test execution time (ms):9¶Test execution time (ms):8¶Test execution time (ms):6¶Test execution time (ms):8"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1972" _type="PauseCommand" date="Mon Nov 29 14:27:18 EST 2021" range="5s-10s" starttimestamp="1638212009072" timestamp="2029853">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[8366]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="1971" _type="ConsoleInput" date="Mon Nov 29 14:27:18 EST 2021" starttimestamp="1638212009072" timestamp="2029853" type="Exception">
    <outputString><![CDATA[(cond T (+ 3 4))
]]></outputString>
  </Command>
  <Command __id="1973" _type="ConsoleOutput" date="Mon Nov 29 14:27:19 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="2029955" type="ConsoleOutput">
    <outputString><![CDATA[T
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"T¶")]]]></diff>
  </Command>
  <Command __id="1975" _type="PauseCommand" date="Mon Nov 29 14:27:32 EST 2021" range="10s-20s" starttimestamp="1638212009072" timestamp="2043320">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[13365]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1974" _type="MoveCaretCommand" caretOffset="798" date="Mon Nov 29 14:27:32 EST 2021" docOffset="997" starttimestamp="1638212009072" timestamp="2043320" />
  <Command __id="1977" _type="InsertStringCommand" date="Mon Nov 29 14:27:33 EST 2021" starttimestamp="1638212009072" timestamp="2044156" timestamp2="2044156">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1979" _type="InsertStringCommand" date="Mon Nov 29 14:27:34 EST 2021" starttimestamp="1638212009072" timestamp="2044962" timestamp2="2044962">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1981" _type="InsertStringCommand" date="Mon Nov 29 14:27:34 EST 2021" starttimestamp="1638212009072" timestamp="2045013" timestamp2="2045013">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="1983" _type="InsertStringCommand" date="Mon Nov 29 14:27:34 EST 2021" starttimestamp="1638212009072" timestamp="2045135" timestamp2="2045135">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1985" _type="InsertStringCommand" date="Mon Nov 29 14:27:34 EST 2021" starttimestamp="1638212009072" timestamp="2045335" timestamp2="2045335">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="1987" _type="InsertStringCommand" date="Mon Nov 29 14:27:35 EST 2021" starttimestamp="1638212009072" timestamp="2046030" timestamp2="2046030">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="1989" _type="InsertStringCommand" date="Mon Nov 29 14:27:35 EST 2021" starttimestamp="1638212009072" timestamp="2046091" timestamp2="2046091">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1991" _type="InsertStringCommand" date="Mon Nov 29 14:27:35 EST 2021" starttimestamp="1638212009072" timestamp="2046195" timestamp2="2046195">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1993" _type="InsertStringCommand" date="Mon Nov 29 14:27:35 EST 2021" starttimestamp="1638212009072" timestamp="2046315" timestamp2="2046315">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="1995" _type="InsertStringCommand" date="Mon Nov 29 14:27:35 EST 2021" starttimestamp="1638212009072" timestamp="2046446" timestamp2="2046446">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1997" _type="InsertStringCommand" date="Mon Nov 29 14:27:35 EST 2021" starttimestamp="1638212009072" timestamp="2046567" timestamp2="2046567">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1999" _type="InsertStringCommand" date="Mon Nov 29 14:27:35 EST 2021" starttimestamp="1638212009072" timestamp="2046646" timestamp2="2046646">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2001" _type="InsertStringCommand" date="Mon Nov 29 14:27:35 EST 2021" starttimestamp="1638212009072" timestamp="2046733" timestamp2="2046733">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2003" _type="InsertStringCommand" date="Mon Nov 29 14:27:35 EST 2021" starttimestamp="1638212009072" timestamp="2046809" timestamp2="2046809">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2005" _type="InsertStringCommand" date="Mon Nov 29 14:27:36 EST 2021" starttimestamp="1638212009072" timestamp="2046989" timestamp2="2046989">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2006" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 29 14:27:36 EST 2021" start_end="START" starttimestamp="1638212009072" timestamp="2046991" />
  <Command __id="2011" _type="PauseCommand" date="Mon Nov 29 14:27:38 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="2048973">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[1982]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="2010" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 29 14:27:38 EST 2021" start_end="END" starttimestamp="1638212009072" timestamp="2048973" />
  <Command __id="2013" _type="InsertStringCommand" date="Mon Nov 29 14:27:38 EST 2021" starttimestamp="1638212009072" timestamp="2048979" timestamp2="2048979">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2015" _type="InsertStringCommand" date="Mon Nov 29 14:27:38 EST 2021" starttimestamp="1638212009072" timestamp="2049279" timestamp2="2049279">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2016" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 29 14:27:38 EST 2021" start_end="START" starttimestamp="1638212009072" timestamp="2049281" />
  <Command __id="2019" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 29 14:27:39 EST 2021" start_end="END" starttimestamp="1638212009072" timestamp="2050190" />
  <Command __id="2021" _type="InsertStringCommand" date="Mon Nov 29 14:27:39 EST 2021" starttimestamp="1638212009072" timestamp="2050224" timestamp2="2050224">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2023" _type="InsertStringCommand" date="Mon Nov 29 14:27:39 EST 2021" starttimestamp="1638212009072" timestamp="2050893" timestamp2="2050893">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2025" _type="InsertStringCommand" date="Mon Nov 29 14:27:40 EST 2021" starttimestamp="1638212009072" timestamp="2051073" timestamp2="2051073">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="2027" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 29 14:27:40 EST 2021" starttimestamp="1638212009072" timestamp="2051640" />
  <Command __id="2029" _type="InsertStringCommand" date="Mon Nov 29 14:27:40 EST 2021" starttimestamp="1638212009072" timestamp="2051817" timestamp2="2051817">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2031" _type="InsertStringCommand" date="Mon Nov 29 14:27:41 EST 2021" starttimestamp="1638212009072" timestamp="2051957" timestamp2="2051957">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="2033" _type="InsertStringCommand" date="Mon Nov 29 14:27:41 EST 2021" starttimestamp="1638212009072" timestamp="2052062" timestamp2="2052062">
    <data><![CDATA[1]]></data>
  </Command>
  <Command __id="2034" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Nov 29 14:27:41 EST 2021" starttimestamp="1638212009072" timestamp="2052435" />
  <Command __id="2036" _type="InsertStringCommand" date="Mon Nov 29 14:27:41 EST 2021" starttimestamp="1638212009072" timestamp="2052849" timestamp2="2052849">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2038" _type="InsertStringCommand" date="Mon Nov 29 14:27:42 EST 2021" starttimestamp="1638212009072" timestamp="2053011" timestamp2="2053011">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2040" _type="InsertStringCommand" date="Mon Nov 29 14:27:42 EST 2021" starttimestamp="1638212009072" timestamp="2053133" timestamp2="2053133">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2042" _type="InsertStringCommand" date="Mon Nov 29 14:27:42 EST 2021" starttimestamp="1638212009072" timestamp="2053136" timestamp2="2053136">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2044" _type="InsertStringCommand" date="Mon Nov 29 14:27:42 EST 2021" starttimestamp="1638212009072" timestamp="2053260" timestamp2="2053260">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2046" _type="InsertStringCommand" date="Mon Nov 29 14:27:42 EST 2021" starttimestamp="1638212009072" timestamp="2053354" timestamp2="2053354">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2048" _type="InsertStringCommand" date="Mon Nov 29 14:27:42 EST 2021" starttimestamp="1638212009072" timestamp="2053450" timestamp2="2053450">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2050" _type="InsertStringCommand" date="Mon Nov 29 14:27:42 EST 2021" starttimestamp="1638212009072" timestamp="2053527" timestamp2="2053527">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="2052" _type="InsertStringCommand" date="Mon Nov 29 14:27:43 EST 2021" starttimestamp="1638212009072" timestamp="2053997" timestamp2="2053997">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2054" _type="InsertStringCommand" date="Mon Nov 29 14:27:43 EST 2021" starttimestamp="1638212009072" timestamp="2054122" timestamp2="2054122">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2056" _type="InsertStringCommand" date="Mon Nov 29 14:27:43 EST 2021" starttimestamp="1638212009072" timestamp="2054272" timestamp2="2054272">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2058" _type="InsertStringCommand" date="Mon Nov 29 14:27:43 EST 2021" starttimestamp="1638212009072" timestamp="2054368" timestamp2="2054368">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="2060" _type="InsertStringCommand" date="Mon Nov 29 14:27:44 EST 2021" starttimestamp="1638212009072" timestamp="2054941" timestamp2="2054941">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2062" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 29 14:27:44 EST 2021" starttimestamp="1638212009072" timestamp="2055436" />
  <Command __id="2064" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 29 14:27:44 EST 2021" starttimestamp="1638212009072" timestamp="2055598" />
  <Command __id="2066" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 29 14:27:44 EST 2021" starttimestamp="1638212009072" timestamp="2055739" />
  <Command __id="2068" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 29 14:27:44 EST 2021" starttimestamp="1638212009072" timestamp="2055910" />
  <Command __id="2070" _type="InsertStringCommand" date="Mon Nov 29 14:27:45 EST 2021" starttimestamp="1638212009072" timestamp="2056239" timestamp2="2056239">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2072" _type="InsertStringCommand" date="Mon Nov 29 14:27:45 EST 2021" starttimestamp="1638212009072" timestamp="2056343" timestamp2="2056343">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="2074" _type="InsertStringCommand" date="Mon Nov 29 14:27:45 EST 2021" starttimestamp="1638212009072" timestamp="2056543" timestamp2="2056543">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2076" _type="InsertStringCommand" date="Mon Nov 29 14:27:45 EST 2021" starttimestamp="1638212009072" timestamp="2056814" timestamp2="2056814">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="2078" _type="InsertStringCommand" date="Mon Nov 29 14:27:46 EST 2021" starttimestamp="1638212009072" timestamp="2057429" timestamp2="2057429">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="2080" _type="InsertStringCommand" date="Mon Nov 29 14:27:46 EST 2021" starttimestamp="1638212009072" timestamp="2057687" timestamp2="2057687">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="2082" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 29 14:27:47 EST 2021" starttimestamp="1638212009072" timestamp="2058397" />
  <Command __id="2084" _type="InsertStringCommand" date="Mon Nov 29 14:27:47 EST 2021" starttimestamp="1638212009072" timestamp="2058684" timestamp2="2058684">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2086" _type="InsertStringCommand" date="Mon Nov 29 14:27:47 EST 2021" starttimestamp="1638212009072" timestamp="2058779" timestamp2="2058779">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2088" _type="InsertStringCommand" date="Mon Nov 29 14:27:47 EST 2021" starttimestamp="1638212009072" timestamp="2058813" timestamp2="2058813">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="2090" _type="PauseCommand" date="Mon Nov 29 14:27:49 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="2060770">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1957]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2089" _type="SelectTextCommand" caretOffset="830" date="Mon Nov 29 14:27:49 EST 2021" end="830" start="790" starttimestamp="1638212009072" timestamp="2060770" />
  <Command __id="2091" _type="MoveCaretCommand" caretOffset="837" date="Mon Nov 29 14:27:50 EST 2021" docOffset="1036" starttimestamp="1638212009072" timestamp="2061243" />
  <Command __id="2093" _type="PauseCommand" date="Mon Nov 29 14:27:52 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="2063423">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2180]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2092" _type="SelectTextCommand" caretOffset="826" date="Mon Nov 29 14:27:52 EST 2021" end="837" start="826" starttimestamp="1638212009072" timestamp="2063423" />
  <Command __id="2095" _type="PauseCommand" date="Mon Nov 29 14:27:53 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="2064452">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1029]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="2096" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 29 14:27:53 EST 2021" starttimestamp="1638212009072" timestamp="2064455" />
  <Command __id="2098" _type="PauseCommand" date="Mon Nov 29 14:27:54 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="2065772">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1317]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2097" _type="MoveCaretCommand" caretOffset="844" date="Mon Nov 29 14:27:54 EST 2021" docOffset="1043" starttimestamp="1638212009072" timestamp="2065772" />
  <Command __id="2100" _type="InsertStringCommand" date="Mon Nov 29 14:27:55 EST 2021" starttimestamp="1638212009072" timestamp="2066088" timestamp2="2066088">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2102" _type="InsertStringCommand" date="Mon Nov 29 14:27:55 EST 2021" starttimestamp="1638212009072" timestamp="2066445" timestamp2="2066445">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="2104" _type="InsertStringCommand" date="Mon Nov 29 14:27:55 EST 2021" starttimestamp="1638212009072" timestamp="2066605" timestamp2="2066605">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2106" _type="PauseCommand" date="Mon Nov 29 14:27:59 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="2070808">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[4202]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2105" _type="ShellCommand" date="Mon Nov 29 14:27:59 EST 2021" starttimestamp="1638212009072" timestamp="2070807" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2107" _type="ShellCommand" date="Mon Nov 29 14:27:59 EST 2021" starttimestamp="1638212009072" timestamp="2070881" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2111" _type="PauseCommand" date="Mon Nov 29 14:28:05 EST 2021" range="5s-10s" starttimestamp="1638212009072" timestamp="2075946">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[5026]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2110" _type="MoveCaretCommand" caretOffset="842" date="Mon Nov 29 14:28:05 EST 2021" docOffset="1079" starttimestamp="1638212009072" timestamp="2075946" />
  <DocumentChange __id="1868" _type="Insert" date="Mon Nov 29 14:26:42 EST 2021" docASTNodeCount="111" docActiveCodeLength="695" docExpressionCount="82" docLength="1100" length="46" offset="1045" repeat="36" starttimestamp="1638212009072" timestamp="1993241" timestamp2="2004896">
    <text><![CDATA[ else {
			return eval(condition, arg1);
		}]]></text>
  </DocumentChange>
  <DocumentChange __id="1976" _type="Insert" date="Mon Nov 29 14:27:33 EST 2021" docASTNodeCount="115" docActiveCodeLength="718" docExpressionCount="85" docLength="1123" length="23" offset="997" repeat="18" starttimestamp="1638212009072" timestamp="2044152" timestamp2="2047403">
    <text><![CDATA[
			if (condition.get)]]></text>
  </DocumentChange>
  <DocumentChange __id="2012" _type="Replace" date="Mon Nov 29 14:27:38 EST 2021" docASTNodeCount="115" docActiveCodeLength="724" docExpressionCount="85" docLength="1129" endLine="28" insertionLength="9" int_docASTNodeCount="115" int_docActiveCodeLength="715" int_docExpressionCount="84" int_docLength="1120" length="3" offset="1016" startLine="28" starttimestamp="1638212009072" timestamp="2048975">
    <deletedText><![CDATA[get]]></deletedText>
    <insertedText><![CDATA[getHead()]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2014" _type="Insert" date="Mon Nov 29 14:27:38 EST 2021" docASTNodeCount="117" docActiveCodeLength="727" docExpressionCount="87" docLength="1132" length="3" offset="1025" repeat="3" starttimestamp="1638212009072" timestamp="2049278" timestamp2="2049611">
    <text><![CDATA[.ev]]></text>
  </DocumentChange>
  <DocumentChange __id="2020" _type="Replace" date="Mon Nov 29 14:27:39 EST 2021" docASTNodeCount="118" docActiveCodeLength="735" docExpressionCount="88" docLength="1140" endLine="28" insertionLength="10" int_docASTNodeCount="117" int_docActiveCodeLength="725" int_docExpressionCount="87" int_docLength="1130" length="2" offset="1026" startLine="28" starttimestamp="1638212009072" timestamp="2050192">
    <deletedText><![CDATA[ev]]></deletedText>
    <insertedText><![CDATA[eval(arg0)]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2022" _type="Replace" date="Mon Nov 29 14:27:39 EST 2021" docASTNodeCount="118" docActiveCodeLength="732" docExpressionCount="88" docLength="1137" endLine="28" insertionLength="1" int_docASTNodeCount="117" int_docActiveCodeLength="731" int_docExpressionCount="87" int_docLength="1136" length="4" offset="1031" startLine="28" starttimestamp="1638212009072" timestamp="2050889">
    <deletedText><![CDATA[arg0]]></deletedText>
    <insertedText><![CDATA[a]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2024" _type="Insert" date="Mon Nov 29 14:27:40 EST 2021" docASTNodeCount="118" docActiveCodeLength="733" docExpressionCount="88" docLength="1138" length="1" offset="1032" starttimestamp="1638212009072" timestamp="2051072">
    <text><![CDATA[g]]></text>
  </DocumentChange>
  <DocumentChange __id="2026" _type="Delete" date="Mon Nov 29 14:27:40 EST 2021" docASTNodeCount="118" docActiveCodeLength="732" docExpressionCount="88" docLength="1137" endLine="28" length="1" offset="1032" startLine="28" starttimestamp="1638212009072" timestamp="2051639">
    <text><![CDATA[g]]></text>
  </DocumentChange>
  <DocumentChange __id="2028" _type="Insert" date="Mon Nov 29 14:27:40 EST 2021" docASTNodeCount="118" docActiveCodeLength="735" docExpressionCount="88" docLength="1140" length="3" offset="1032" repeat="3" starttimestamp="1638212009072" timestamp="2051815" timestamp2="2052061">
    <text><![CDATA[rg1]]></text>
  </DocumentChange>
  <DocumentChange __id="2035" _type="Insert" date="Mon Nov 29 14:27:41 EST 2021" docASTNodeCount="121" docActiveCodeLength="748" docExpressionCount="90" docLength="1153" length="13" offset="1036" repeat="13" starttimestamp="1638212009072" timestamp="2052847" timestamp2="2054940">
    <text><![CDATA[ instance of ]]></text>
  </DocumentChange>
  <DocumentChange __id="2061" _type="Delete" date="Mon Nov 29 14:27:44 EST 2021" docASTNodeCount="118" docActiveCodeLength="744" docExpressionCount="88" docLength="1149" endLine="28" length="4" offset="1045" repeat="4" startLine="28" starttimestamp="1638212009072" timestamp="2055435" timestamp2="2055908">
    <text><![CDATA[ of ]]></text>
  </DocumentChange>
  <DocumentChange __id="2069" _type="Insert" date="Mon Nov 29 14:27:45 EST 2021" docASTNodeCount="121" docActiveCodeLength="750" docExpressionCount="90" docLength="1155" length="6" offset="1045" repeat="6" starttimestamp="1638212009072" timestamp="2056237" timestamp2="2057686">
    <text><![CDATA[of TAT]]></text>
  </DocumentChange>
  <DocumentChange __id="2081" _type="Delete" date="Mon Nov 29 14:27:47 EST 2021" docASTNodeCount="121" docActiveCodeLength="749" docExpressionCount="90" docLength="1154" endLine="28" length="1" offset="1050" startLine="28" starttimestamp="1638212009072" timestamp="2058395">
    <text><![CDATA[T]]></text>
  </DocumentChange>
  <DocumentChange __id="2083" _type="Insert" date="Mon Nov 29 14:27:47 EST 2021" docASTNodeCount="121" docActiveCodeLength="752" docExpressionCount="90" docLength="1157" length="3" offset="1050" repeat="3" starttimestamp="1638212009072" timestamp="2058683" timestamp2="2058812">
    <text><![CDATA[tom]]></text>
  </DocumentChange>
  <DocumentChange __id="2094" _type="Delete" date="Mon Nov 29 14:27:53 EST 2021" docASTNodeCount="118" docActiveCodeLength="741" docExpressionCount="87" docLength="1146" endLine="28" length="11" offset="1025" startLine="28" starttimestamp="1638212009072" timestamp="2064452">
    <text><![CDATA[.eval(arg1)]]></text>
  </DocumentChange>
  <DocumentChange __id="2099" _type="Insert" date="Mon Nov 29 14:27:55 EST 2021" docASTNodeCount="119" docActiveCodeLength="755" docExpressionCount="87" docLength="1160" length="14" offset="1043" repeat="3" starttimestamp="1638212009072" timestamp="2066085" timestamp2="2066603">
    <text><![CDATA[ {
				
			}]]></text>
  </DocumentChange>
  <DocumentChange __id="2108" _type="Insert" date="Mon Nov 29 14:27:59 EST 2021" docASTNodeCount="129" docActiveCodeLength="793" docExpressionCount="96" docLength="1198" length="38" offset="204" repeat="2" starttimestamp="1638212009072" timestamp="2070920" timestamp2="2070921">
    <text><![CDATA[
import main.lisp.parser.terms.TAtom;]]></text>
  </DocumentChange>
  <Command __id="2113" _type="PauseCommand" date="Mon Nov 29 14:28:06 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="2077374">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1428]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2112" _type="MoveCaretCommand" caretOffset="843" date="Mon Nov 29 14:28:06 EST 2021" docOffset="1080" starttimestamp="1638212009072" timestamp="2077374" />
  <Command __id="2115" _type="InsertStringCommand" date="Mon Nov 29 14:28:07 EST 2021" starttimestamp="1638212009072" timestamp="2078321" timestamp2="2078321">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2117" _type="InsertStringCommand" date="Mon Nov 29 14:28:07 EST 2021" starttimestamp="1638212009072" timestamp="2078630" timestamp2="2078630">
    <data><![CDATA[&]]></data>
  </Command>
  <Command __id="2119" _type="InsertStringCommand" date="Mon Nov 29 14:28:07 EST 2021" starttimestamp="1638212009072" timestamp="2078770" timestamp2="2078770">
    <data><![CDATA[&]]></data>
  </Command>
  <Command __id="2121" _type="InsertStringCommand" date="Mon Nov 29 14:28:08 EST 2021" starttimestamp="1638212009072" timestamp="2079493" timestamp2="2079493">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2123" _type="InsertStringCommand" date="Mon Nov 29 14:28:09 EST 2021" starttimestamp="1638212009072" timestamp="2080482" timestamp2="2080482">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="2125" _type="InsertStringCommand" date="Mon Nov 29 14:28:09 EST 2021" starttimestamp="1638212009072" timestamp="2080581" timestamp2="2080581">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2127" _type="InsertStringCommand" date="Mon Nov 29 14:28:09 EST 2021" starttimestamp="1638212009072" timestamp="2080648" timestamp2="2080648">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2129" _type="InsertStringCommand" date="Mon Nov 29 14:28:09 EST 2021" starttimestamp="1638212009072" timestamp="2080741" timestamp2="2080741">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="2131" _type="InsertStringCommand" date="Mon Nov 29 14:28:10 EST 2021" starttimestamp="1638212009072" timestamp="2080933" timestamp2="2080933">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2133" _type="InsertStringCommand" date="Mon Nov 29 14:28:10 EST 2021" starttimestamp="1638212009072" timestamp="2081050" timestamp2="2081050">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2135" _type="InsertStringCommand" date="Mon Nov 29 14:28:10 EST 2021" starttimestamp="1638212009072" timestamp="2081146" timestamp2="2081146">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2137" _type="InsertStringCommand" date="Mon Nov 29 14:28:10 EST 2021" starttimestamp="1638212009072" timestamp="2081217" timestamp2="2081217">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2139" _type="InsertStringCommand" date="Mon Nov 29 14:28:10 EST 2021" starttimestamp="1638212009072" timestamp="2081283" timestamp2="2081283">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2141" _type="InsertStringCommand" date="Mon Nov 29 14:28:10 EST 2021" starttimestamp="1638212009072" timestamp="2081472" timestamp2="2081472">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2142" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 29 14:28:10 EST 2021" start_end="START" starttimestamp="1638212009072" timestamp="2081474" />
  <Command __id="2147" _type="PauseCommand" date="Mon Nov 29 14:28:13 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="2084490">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[AssistCommand]]></prev>
    <pause><![CDATA[3016]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="2146" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 29 14:28:13 EST 2021" start_end="END" starttimestamp="1638212009072" timestamp="2084490" />
  <Command __id="2149" _type="InsertStringCommand" date="Mon Nov 29 14:28:13 EST 2021" starttimestamp="1638212009072" timestamp="2084496" timestamp2="2084496">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2151" _type="InsertStringCommand" date="Mon Nov 29 14:28:13 EST 2021" starttimestamp="1638212009072" timestamp="2084816" timestamp2="2084816">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2152" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 29 14:28:13 EST 2021" start_end="START" starttimestamp="1638212009072" timestamp="2084818" />
  <Command __id="2158" _type="PauseCommand" date="Mon Nov 29 14:28:16 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="2087009">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1163]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="2157" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 29 14:28:16 EST 2021" start_end="END" starttimestamp="1638212009072" timestamp="2087009" />
  <Command __id="2160" _type="InsertStringCommand" date="Mon Nov 29 14:28:16 EST 2021" starttimestamp="1638212009072" timestamp="2087017" timestamp2="2087017">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2162" _type="PauseCommand" date="Mon Nov 29 14:28:17 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="2088467">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1450]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2161" _type="SelectTextCommand" caretOffset="838" date="Mon Nov 29 14:28:17 EST 2021" end="883" start="838" starttimestamp="1638212009072" timestamp="2088467" />
  <Command __id="2164" _type="PauseCommand" date="Mon Nov 29 14:28:18 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="2089569">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1102]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2163" _type="MoveCaretCommand" caretOffset="848" date="Mon Nov 29 14:28:18 EST 2021" docOffset="1085" starttimestamp="1638212009072" timestamp="2089569" />
  <Command __id="2165" _type="MoveCaretCommand" caretOffset="847" date="Mon Nov 29 14:28:19 EST 2021" docOffset="1084" starttimestamp="1638212009072" timestamp="2090466" />
  <Command __id="2167" _type="InsertStringCommand" date="Mon Nov 29 14:28:19 EST 2021" starttimestamp="1638212009072" timestamp="2090745" timestamp2="2090745">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="2168" _type="MoveCaretCommand" caretOffset="884" date="Mon Nov 29 14:28:20 EST 2021" docOffset="1121" starttimestamp="1638212009072" timestamp="2091624" />
  <Command __id="2170" _type="InsertStringCommand" date="Mon Nov 29 14:28:20 EST 2021" starttimestamp="1638212009072" timestamp="2091845" timestamp2="2091845">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2172" _type="InsertStringCommand" date="Mon Nov 29 14:28:21 EST 2021" starttimestamp="1638212009072" timestamp="2091942" timestamp2="2091942">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2174" _type="InsertStringCommand" date="Mon Nov 29 14:28:21 EST 2021" starttimestamp="1638212009072" timestamp="2092080" timestamp2="2092080">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2176" _type="InsertStringCommand" date="Mon Nov 29 14:28:21 EST 2021" starttimestamp="1638212009072" timestamp="2092202" timestamp2="2092202">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="2178" _type="InsertStringCommand" date="Mon Nov 29 14:28:21 EST 2021" starttimestamp="1638212009072" timestamp="2092317" timestamp2="2092317">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2180" _type="InsertStringCommand" date="Mon Nov 29 14:28:21 EST 2021" starttimestamp="1638212009072" timestamp="2092393" timestamp2="2092393">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2182" _type="InsertStringCommand" date="Mon Nov 29 14:28:21 EST 2021" starttimestamp="1638212009072" timestamp="2092526" timestamp2="2092526">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2184" _type="InsertStringCommand" date="Mon Nov 29 14:28:21 EST 2021" starttimestamp="1638212009072" timestamp="2092627" timestamp2="2092627">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2186" _type="InsertStringCommand" date="Mon Nov 29 14:28:21 EST 2021" starttimestamp="1638212009072" timestamp="2092776" timestamp2="2092776">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="2188" _type="InsertStringCommand" date="Mon Nov 29 14:28:21 EST 2021" starttimestamp="1638212009072" timestamp="2092898" timestamp2="2092898">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2190" _type="InsertStringCommand" date="Mon Nov 29 14:28:22 EST 2021" starttimestamp="1638212009072" timestamp="2093005" timestamp2="2093005">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2192" _type="InsertStringCommand" date="Mon Nov 29 14:28:22 EST 2021" starttimestamp="1638212009072" timestamp="2093236" timestamp2="2093236">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="2194" _type="InsertStringCommand" date="Mon Nov 29 14:28:22 EST 2021" starttimestamp="1638212009072" timestamp="2093461" timestamp2="2093461">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="2196" _type="InsertStringCommand" date="Mon Nov 29 14:28:22 EST 2021" starttimestamp="1638212009072" timestamp="2093541" timestamp2="2093541">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2198" _type="InsertStringCommand" date="Mon Nov 29 14:28:22 EST 2021" starttimestamp="1638212009072" timestamp="2093616" timestamp2="2093616">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2200" _type="InsertStringCommand" date="Mon Nov 29 14:28:22 EST 2021" starttimestamp="1638212009072" timestamp="2093761" timestamp2="2093761">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="2202" _type="InsertStringCommand" date="Mon Nov 29 14:28:22 EST 2021" starttimestamp="1638212009072" timestamp="2093874" timestamp2="2093874">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2204" _type="InsertStringCommand" date="Mon Nov 29 14:28:23 EST 2021" starttimestamp="1638212009072" timestamp="2093970" timestamp2="2093970">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2206" _type="InsertStringCommand" date="Mon Nov 29 14:28:23 EST 2021" starttimestamp="1638212009072" timestamp="2094049" timestamp2="2094049">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2208" _type="InsertStringCommand" date="Mon Nov 29 14:28:23 EST 2021" starttimestamp="1638212009072" timestamp="2094126" timestamp2="2094126">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2210" _type="InsertStringCommand" date="Mon Nov 29 14:28:23 EST 2021" starttimestamp="1638212009072" timestamp="2094185" timestamp2="2094185">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2212" _type="InsertStringCommand" date="Mon Nov 29 14:28:23 EST 2021" starttimestamp="1638212009072" timestamp="2094357" timestamp2="2094357">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2213" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Mon Nov 29 14:28:23 EST 2021" start_end="START" starttimestamp="1638212009072" timestamp="2094359" />
  <Command __id="2214" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Mon Nov 29 14:28:23 EST 2021" start_end="END" starttimestamp="1638212009072" timestamp="2094664" />
  <Command __id="2216" _type="InsertStringCommand" date="Mon Nov 29 14:28:23 EST 2021" starttimestamp="1638212009072" timestamp="2094698" timestamp2="2094698">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2218" _type="InsertStringCommand" date="Mon Nov 29 14:28:23 EST 2021" starttimestamp="1638212009072" timestamp="2094778" timestamp2="2094778">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2220" _type="InsertStringCommand" date="Mon Nov 29 14:28:23 EST 2021" starttimestamp="1638212009072" timestamp="2094856" timestamp2="2094856">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2222" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 29 14:28:24 EST 2021" starttimestamp="1638212009072" timestamp="2095124" />
  <Command __id="2224" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 29 14:28:24 EST 2021" starttimestamp="1638212009072" timestamp="2095291" />
  <Command __id="2226" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 29 14:28:24 EST 2021" starttimestamp="1638212009072" timestamp="2095850" />
  <Command __id="2228" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 29 14:28:25 EST 2021" starttimestamp="1638212009072" timestamp="2095993" />
  <Command __id="2230" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 29 14:28:25 EST 2021" starttimestamp="1638212009072" timestamp="2096146" />
  <Command __id="2232" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 29 14:28:25 EST 2021" starttimestamp="1638212009072" timestamp="2096296" />
  <Command __id="2234" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 29 14:28:25 EST 2021" starttimestamp="1638212009072" timestamp="2096448" />
  <Command __id="2236" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 29 14:28:25 EST 2021" starttimestamp="1638212009072" timestamp="2096635" />
  <Command __id="2238" _type="InsertStringCommand" date="Mon Nov 29 14:28:26 EST 2021" starttimestamp="1638212009072" timestamp="2096929" timestamp2="2096929">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="2240" _type="InsertStringCommand" date="Mon Nov 29 14:28:26 EST 2021" starttimestamp="1638212009072" timestamp="2097070" timestamp2="2097070">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2242" _type="InsertStringCommand" date="Mon Nov 29 14:28:26 EST 2021" starttimestamp="1638212009072" timestamp="2097171" timestamp2="2097171">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2244" _type="InsertStringCommand" date="Mon Nov 29 14:28:26 EST 2021" starttimestamp="1638212009072" timestamp="2097259" timestamp2="2097259">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2246" _type="InsertStringCommand" date="Mon Nov 29 14:28:26 EST 2021" starttimestamp="1638212009072" timestamp="2097336" timestamp2="2097336">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="2248" _type="InsertStringCommand" date="Mon Nov 29 14:28:26 EST 2021" starttimestamp="1638212009072" timestamp="2097510" timestamp2="2097510">
    <data><![CDATA[1]]></data>
  </Command>
  <Command __id="2249" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Mon Nov 29 14:28:27 EST 2021" starttimestamp="1638212009072" timestamp="2097961" />
  <Command __id="2250" _type="ShellCommand" date="Mon Nov 29 14:28:27 EST 2021" starttimestamp="1638212009072" timestamp="2098076" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2252" _type="PauseCommand" date="Mon Nov 29 14:28:28 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="2099596">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1520]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2251" _type="ShellCommand" date="Mon Nov 29 14:28:28 EST 2021" starttimestamp="1638212009072" timestamp="2099596" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2253" _type="MoveCaretCommand" caretOffset="913" date="Mon Nov 29 14:28:29 EST 2021" docOffset="1150" starttimestamp="1638212009072" timestamp="2100332" />
  <Command __id="2255" _type="InsertStringCommand" date="Mon Nov 29 14:28:29 EST 2021" starttimestamp="1638212009072" timestamp="2100827" timestamp2="2100827">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="2256" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:28:30 EST 2021" starttimestamp="1638212009072" timestamp="2101641" />
  <Command __id="2257" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:28:30 EST 2021" starttimestamp="1638212009072" timestamp="2101644" />
  <Command __id="2258" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:28:30 EST 2021" starttimestamp="1638212009072" timestamp="2101644" />
  <Command __id="2259" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:28:30 EST 2021" starttimestamp="1638212009072" timestamp="2101645" />
  <Command __id="2260" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:28:30 EST 2021" starttimestamp="1638212009072" timestamp="2101645" />
  <Command __id="2261" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:28:30 EST 2021" starttimestamp="1638212009072" timestamp="2101645" />
  <Command __id="2262" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:28:30 EST 2021" starttimestamp="1638212009072" timestamp="2101645" />
  <Command __id="2263" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:28:30 EST 2021" starttimestamp="1638212009072" timestamp="2101648" />
  <Command __id="2264" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:28:30 EST 2021" starttimestamp="1638212009072" timestamp="2101648" />
  <Command __id="2265" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 29 14:28:30 EST 2021" starttimestamp="1638212009072" timestamp="2101652" />
  <Command __id="2266" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:28:30 EST 2021" starttimestamp="1638212009072" timestamp="2101659" />
  <Command __id="2268" _type="PauseCommand" date="Mon Nov 29 14:28:33 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="2104538">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2879]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2267" _type="ShellCommand" date="Mon Nov 29 14:28:33 EST 2021" starttimestamp="1638212009072" timestamp="2104538" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2269" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:28:33 EST 2021" starttimestamp="1638212009072" timestamp="2104619" />
  <Command __id="2270" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:28:33 EST 2021" starttimestamp="1638212009072" timestamp="2104622" />
  <Command __id="2271" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:28:33 EST 2021" starttimestamp="1638212009072" timestamp="2104622" />
  <Command __id="2272" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:28:33 EST 2021" starttimestamp="1638212009072" timestamp="2104622" />
  <Command __id="2273" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:28:33 EST 2021" starttimestamp="1638212009072" timestamp="2104623" />
  <Command __id="2274" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:28:33 EST 2021" starttimestamp="1638212009072" timestamp="2104623" />
  <Command __id="2275" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:28:33 EST 2021" starttimestamp="1638212009072" timestamp="2104624" />
  <Command __id="2276" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:28:33 EST 2021" starttimestamp="1638212009072" timestamp="2104626" />
  <Command __id="2278" _type="PauseCommand" date="Mon Nov 29 14:28:35 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="2106425">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1799]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2277" _type="ShellCommand" date="Mon Nov 29 14:28:35 EST 2021" starttimestamp="1638212009072" timestamp="2106425" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2296" _type="PauseCommand" date="Mon Nov 29 14:28:41 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="2112921">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2248]]></pause>
    <nextType><![CDATA[Debug]]></nextType>
    <next><![CDATA[RunCommand]]></next>
  </Command>
  <Command __id="2295" _type="RunCommand" className="/a5/src/a5/RunLisp.java" date="Mon Nov 29 14:28:41 EST 2021" kind="HitBreakPoint" projectName="a5" starttimestamp="1638212009072" timestamp="2112921" type="Run" />
  <Command __id="2297" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:28:42 EST 2021" starttimestamp="1638212009072" timestamp="2113020" />
  <Command __id="2298" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:28:42 EST 2021" starttimestamp="1638212009072" timestamp="2113025" />
  <Command __id="2299" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:28:42 EST 2021" starttimestamp="1638212009072" timestamp="2113025" />
  <Command __id="2300" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:28:42 EST 2021" starttimestamp="1638212009072" timestamp="2113026" />
  <Command __id="2301" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:28:42 EST 2021" starttimestamp="1638212009072" timestamp="2113026" />
  <Command __id="2302" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:28:42 EST 2021" starttimestamp="1638212009072" timestamp="2113027" />
  <Command __id="2303" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:28:42 EST 2021" starttimestamp="1638212009072" timestamp="2113028" />
  <Command __id="2304" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:28:42 EST 2021" starttimestamp="1638212009072" timestamp="2113030" />
  <Command __id="2306" _type="PauseCommand" date="Mon Nov 29 14:28:44 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="2115194">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2164]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="2305" _type="ConsoleInput" date="Mon Nov 29 14:28:44 EST 2021" starttimestamp="1638212009072" timestamp="2115194" type="Exception">
    <outputString><![CDATA[(cond T)
]]></outputString>
  </Command>
  <Command __id="2307" _type="ConsoleOutput" date="Mon Nov 29 14:28:44 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="2115296" type="ConsoleOutput">
    <outputString><![CDATA[T
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"T¶")]]]></diff>
  </Command>
  <Command __id="2309" _type="PauseCommand" date="Mon Nov 29 14:28:46 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="2117274">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1978]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="2308" _type="ConsoleInput" date="Mon Nov 29 14:28:46 EST 2021" starttimestamp="1638212009072" timestamp="2117274" type="Exception">
    <outputString><![CDATA[(cond nil)
]]></outputString>
  </Command>
  <Command __id="2310" _type="ConsoleOutput" date="Mon Nov 29 14:28:46 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="2117377" type="ConsoleOutput">
    <outputString><![CDATA[NIL
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"T"), Diff(INSERT,"NIL"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2312" _type="PauseCommand" date="Mon Nov 29 14:28:51 EST 2021" range="5s-10s" starttimestamp="1638212009072" timestamp="2122622">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5245]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ConsoleInput]]></next>
  </Command>
  <Command __id="2311" _type="ConsoleInput" date="Mon Nov 29 14:28:51 EST 2021" starttimestamp="1638212009072" timestamp="2122622" type="Exception">
    <outputString><![CDATA[(cond T (+ 3 4))
]]></outputString>
  </Command>
  <Command __id="2313" _type="ConsoleOutput" date="Mon Nov 29 14:28:51 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="2122725" type="ConsoleOutput">
    <outputString><![CDATA[7
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"NIL"), Diff(INSERT,"7"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2325" _type="PauseCommand" date="Mon Nov 29 14:29:18 EST 2021" range="5s-10s" starttimestamp="1638212009072" timestamp="2149276">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[5137]]></pause>
    <nextType><![CDATA[Debug]]></nextType>
    <next><![CDATA[RunCommand]]></next>
  </Command>
  <Command __id="2324" _type="RunCommand" className="/a5/src/a5/LocalChecks.java" date="Mon Nov 29 14:29:18 EST 2021" kind="HitBreakPoint" projectName="a5" starttimestamp="1638212009072" timestamp="2149276" type="Run" />
  <Command __id="2327" _type="PauseCommand" date="Mon Nov 29 14:29:20 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="2151542">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[2266]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2326" _type="ShellCommand" date="Mon Nov 29 14:29:20 EST 2021" starttimestamp="1638212009072" timestamp="2151542" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2329" _type="PauseCommand" date="Mon Nov 29 14:29:24 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="2155859">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4317]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2328" _type="ConsoleOutput" date="Mon Nov 29 14:29:24 EST 2021" overflow="false" starttimestamp="1638212009072" timestamp="2155859" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):2
Test execution time (ms):10
Test execution time (ms):13
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"7"), Diff(INSERT,"Test execution time (ms):2¶Test execution time (ms):10¶Test execution time (ms):13"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2330" _type="ExceptionCommand" date="Mon Nov 29 14:29:25 EST 2021" starttimestamp="1638212009072" timestamp="2155959" type="Exception">
    <exceptionString><![CDATA[java.lang.IllegalStateException: Expression does not start with an operator
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:50)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:23)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at expression.CondEvaluator.eval(CondEvaluator.java:29)
	at expression.CondEvaluator.eval(CondEvaluator.java:35)
	at expression.CondEvaluator.eval(CondEvaluator.java:35)
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:48)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:23)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.evaluator.function.BasicLambda.doEval(BasicLambda.java:75)
	at main.lisp.parser.terms.AbstractAtom.eval(AbstractAtom.java:22)
	at functional.FuncallEvaluator.evaluateLambda(FuncallEvaluator.java:52)
	at functional.FuncallEvaluator.eval(FuncallEvaluator.java:32)
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:48)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:23)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at expression.LoadEvaluator.eval(LoadEvaluator.java:31)
	at evaluators.LambdaSExpressionEvaluator.basicEvaluator(LambdaSExpressionEvaluator.java:48)
	at evaluators.LambdaSExpressionEvaluator.eval(LambdaSExpressionEvaluator.java:23)
	at main.lisp.parser.terms.BasicExpression.eval(BasicExpression.java:26)
	at main.lisp.interpreter.ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.newInput(ObservableLispInterpreterWithEnvironmentAndLazyEvaluation.java:92)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.provideInput(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:100)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:133)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionInputterAndEvaluatorRegisterer.evaluate(AbstractLispExpressionInputterAndEvaluatorRegisterer.java:65)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.compareOutput(AbstractLispExpressionChecker.java:21)
	at gradingTools.comp524f19.assignment2.testcases.AbstractLispExpressionChecker.test(AbstractLispExpressionChecker.java:47)
	at grader.basics.testcase.PassFailJUnitTestCase.passfailDefaultTest(PassFailJUnitTestCase.java:226)
	at grader.basics.testcase.PassFailJUnitTestCase.defaultTest(PassFailJUnitTestCase.java:106)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at grader.basics.junit.AGradableJUnitTest.test(AGradableJUnitTest.java:301)
	at grader.basics.junit.AJUnitTestContext.getAndPossiblyRunJUnitPassFailTestCase(AJUnitTestContext.java:52)
	at grader.basics.junit.JUnitTestsEnvironment.getAndPossiblyRunGradableJUnitTest(JUnitTestsEnvironment.java:62)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="2332" _type="PauseCommand" date="Mon Nov 29 14:29:29 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="2160533">
    <prevType><![CDATA[Exception]]></prevType>
    <prev><![CDATA[ExceptionCommand]]></prev>
    <pause><![CDATA[4574]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2331" _type="ShellCommand" date="Mon Nov 29 14:29:29 EST 2021" starttimestamp="1638212009072" timestamp="2160533" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2333" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Nov 29 14:29:30 EST 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1638212009072" timestamp="2161198" type="Debug" />
  <Command __id="2334" _type="ProgramExecutionEvent" className="/a5/src/a5/LocalChecks.java" date="Mon Nov 29 14:29:30 EST 2021" kind="HitBreakPoint" projectName="a5" starttimestamp="1638212009072" timestamp="2161198" type="Run" />
  <Command __id="2335" _type="ProgramExecutionEvent" className="(Unknown)" date="Mon Nov 29 14:29:30 EST 2021" kind="HitBreakPoint" projectName="(Unknown)" starttimestamp="1638212009072" timestamp="2161198" type="Debug" />
  <Command __id="2336" _type="ProgramExecutionEvent" className="/a5/src/a5/LocalChecks.java" date="Mon Nov 29 14:29:30 EST 2021" kind="HitBreakPoint" projectName="a5" starttimestamp="1638212009072" timestamp="2161198" type="Run" />
  <Command __id="2338" _type="PauseCommand" date="Mon Nov 29 14:30:19 EST 2021" range="30s-1m" starttimestamp="1638212009072" timestamp="2210361">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[49163]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2337" _type="ShellCommand" date="Mon Nov 29 14:30:19 EST 2021" starttimestamp="1638212009072" timestamp="2210361" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2340" _type="PauseCommand" date="Mon Nov 29 14:31:17 EST 2021" range="30s-1m" starttimestamp="1638212009072" timestamp="2268380">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[58019]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2339" _type="ShellCommand" date="Mon Nov 29 14:31:17 EST 2021" starttimestamp="1638212009072" timestamp="2268380" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2341" _type="MoveCaretCommand" caretOffset="905" date="Mon Nov 29 14:31:17 EST 2021" docOffset="1142" starttimestamp="1638212009072" timestamp="2268428" />
  <Command __id="2343" _type="PauseCommand" date="Mon Nov 29 14:31:21 EST 2021" range="2s-5s" starttimestamp="1638212009072" timestamp="2272910">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4482]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2342" _type="MoveCaretCommand" caretOffset="1000" date="Mon Nov 29 14:31:21 EST 2021" docOffset="1237" starttimestamp="1638212009072" timestamp="2272910" />
  <Command __id="2345" _type="PauseCommand" date="Mon Nov 29 14:31:48 EST 2021" range="20s-30s" starttimestamp="1638212009072" timestamp="2299849">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[26939]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2344" _type="SelectTextCommand" caretOffset="750" date="Mon Nov 29 14:31:48 EST 2021" end="1017" start="750" starttimestamp="1638212009072" timestamp="2299849" />
  <Command __id="2347" _type="PauseCommand" date="Mon Nov 29 14:31:50 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="2301273">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1424]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="2356" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.toggle.comment" date="Mon Nov 29 14:31:50 EST 2021" starttimestamp="1638212009072" timestamp="2301286" />
  <Command __id="2358" _type="PauseCommand" date="Mon Nov 29 14:31:51 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="2302424">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1138]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2357" _type="MoveCaretCommand" caretOffset="712" date="Mon Nov 29 14:31:51 EST 2021" docOffset="949" starttimestamp="1638212009072" timestamp="2302424" />
  <DocumentChange __id="2114" _type="Insert" date="Mon Nov 29 14:28:07 EST 2021" docASTNodeCount="133" docActiveCodeLength="810" docExpressionCount="100" docLength="1215" length="17" offset="1080" repeat="17" starttimestamp="1638212009072" timestamp="2078319" timestamp2="2082880">
    <text><![CDATA[ && condition.get]]></text>
  </DocumentChange>
  <DocumentChange __id="2148" _type="Replace" date="Mon Nov 29 14:28:13 EST 2021" docASTNodeCount="133" docActiveCodeLength="816" docExpressionCount="100" docLength="1221" endLine="29" insertionLength="9" int_docASTNodeCount="133" int_docActiveCodeLength="807" int_docExpressionCount="99" int_docLength="1212" length="3" offset="1094" startLine="29" starttimestamp="1638212009072" timestamp="2084492">
    <deletedText><![CDATA[get]]></deletedText>
    <insertedText><![CDATA[getTail()]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2150" _type="Insert" date="Mon Nov 29 14:28:13 EST 2021" docASTNodeCount="135" docActiveCodeLength="818" docExpressionCount="102" docLength="1223" length="2" offset="1103" repeat="2" starttimestamp="1638212009072" timestamp="2084814" timestamp2="2085246">
    <text><![CDATA[.s]]></text>
  </DocumentChange>
  <DocumentChange __id="2154" _type="Delete" date="Mon Nov 29 14:28:14 EST 2021" docASTNodeCount="135" docActiveCodeLength="817" docExpressionCount="102" docLength="1222" endLine="29" length="1" offset="1104" startLine="29" starttimestamp="1638212009072" timestamp="2085561">
    <text><![CDATA[s]]></text>
  </DocumentChange>
  <DocumentChange __id="2155" _type="Insert" date="Mon Nov 29 14:28:14 EST 2021" docASTNodeCount="135" docActiveCodeLength="819" docExpressionCount="102" docLength="1224" length="2" offset="1104" repeat="2" starttimestamp="1638212009072" timestamp="2085846" timestamp2="2085976">
    <text><![CDATA[is]]></text>
  </DocumentChange>
  <DocumentChange __id="2159" _type="Replace" date="Mon Nov 29 14:28:16 EST 2021" docASTNodeCount="135" docActiveCodeLength="824" docExpressionCount="102" docLength="1229" endLine="29" insertionLength="7" int_docASTNodeCount="135" int_docActiveCodeLength="817" int_docExpressionCount="102" int_docLength="1222" length="2" offset="1104" startLine="29" starttimestamp="1638212009072" timestamp="2087011">
    <deletedText><![CDATA[is]]></deletedText>
    <insertedText><![CDATA[isNIL()]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2166" _type="Insert" date="Mon Nov 29 14:28:19 EST 2021" docASTNodeCount="136" docActiveCodeLength="825" docExpressionCount="103" docLength="1230" length="1" offset="1084" starttimestamp="1638212009072" timestamp="2090742">
    <text><![CDATA[!]]></text>
  </DocumentChange>
  <DocumentChange __id="2169" _type="Insert" date="Mon Nov 29 14:28:20 EST 2021" docASTNodeCount="143" docActiveCodeLength="858" docExpressionCount="109" docLength="1263" length="33" offset="1121" repeat="23" starttimestamp="1638212009072" timestamp="2091843" timestamp2="2094667">
    <text><![CDATA[return eval(condition.eval(arg0))]]></text>
  </DocumentChange>
  <DocumentChange __id="2217" _type="Replace" date="Mon Nov 29 14:28:23 EST 2021" docASTNodeCount="143" docActiveCodeLength="855" docExpressionCount="109" docLength="1260" endLine="30" insertionLength="1" int_docASTNodeCount="142" int_docActiveCodeLength="854" int_docExpressionCount="108" int_docLength="1259" length="4" offset="1148" startLine="30" starttimestamp="1638212009072" timestamp="2094774">
    <deletedText><![CDATA[arg0]]></deletedText>
    <insertedText><![CDATA[a]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2219" _type="Insert" date="Mon Nov 29 14:28:23 EST 2021" docASTNodeCount="143" docActiveCodeLength="856" docExpressionCount="109" docLength="1261" length="1" offset="1149" starttimestamp="1638212009072" timestamp="2094855">
    <text><![CDATA[r]]></text>
  </DocumentChange>
  <DocumentChange __id="2221" _type="Delete" date="Mon Nov 29 14:28:24 EST 2021" docASTNodeCount="140" docActiveCodeLength="848" docExpressionCount="106" docLength="1253" endLine="30" length="8" offset="1142" repeat="8" startLine="30" starttimestamp="1638212009072" timestamp="2095123" timestamp2="2096634">
    <text><![CDATA[.eval(ar]]></text>
  </DocumentChange>
  <DocumentChange __id="2237" _type="Insert" date="Mon Nov 29 14:28:26 EST 2021" docASTNodeCount="141" docActiveCodeLength="854" docExpressionCount="107" docLength="1259" length="6" offset="1142" repeat="6" starttimestamp="1638212009072" timestamp="2096928" timestamp2="2097509">
    <text><![CDATA[, arg1]]></text>
  </DocumentChange>
  <DocumentChange __id="2254" _type="Insert" date="Mon Nov 29 14:28:29 EST 2021" docASTNodeCount="141" docActiveCodeLength="855" docExpressionCount="107" docLength="1260" length="1" offset="1150" starttimestamp="1638212009072" timestamp="2100825">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <DocumentChange __id="2281" _type="Delete" date="Mon Nov 29 14:28:38 EST 2021" docASTNodeCount="141" docActiveCodeLength="854" docExpressionCount="107" docLength="1259" endLine="30" length="1" offset="1149" startLine="30" starttimestamp="1638212009072" timestamp="2109608">
    <text><![CDATA[)]]></text>
  </DocumentChange>
  <DocumentChange __id="2346" _type="Insert" date="Mon Nov 29 14:31:50 EST 2021" docASTNodeCount="131" docActiveCodeLength="806" docExpressionCount="98" docLength="1261" length="2" offset="987" starttimestamp="1638212009072" timestamp="2301273">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="2348" _type="Insert" date="Mon Nov 29 14:31:50 EST 2021" docASTNodeCount="102" docActiveCodeLength="728" docExpressionCount="76" docLength="1263" length="2" offset="1039" starttimestamp="1638212009072" timestamp="2301274">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="2349" _type="Insert" date="Mon Nov 29 14:31:50 EST 2021" docASTNodeCount="97" docActiveCodeLength="695" docExpressionCount="72" docLength="1265" length="2" offset="1121" starttimestamp="1638212009072" timestamp="2301274">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="2350" _type="Insert" date="Mon Nov 29 14:31:50 EST 2021" docASTNodeCount="111" docActiveCodeLength="691" docExpressionCount="82" docLength="1267" length="2" offset="1158" starttimestamp="1638212009072" timestamp="2301275">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="2351" _type="Insert" date="Mon Nov 29 14:31:50 EST 2021" docASTNodeCount="104" docActiveCodeLength="650" docExpressionCount="76" docLength="1269" length="2" offset="1166" starttimestamp="1638212009072" timestamp="2301275">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="2352" _type="Insert" date="Mon Nov 29 14:31:50 EST 2021" docASTNodeCount="102" docActiveCodeLength="640" docExpressionCount="76" docLength="1271" length="2" offset="1211" starttimestamp="1638212009072" timestamp="2301276">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="2353" _type="Insert" date="Mon Nov 29 14:31:50 EST 2021" docASTNodeCount="97" docActiveCodeLength="608" docExpressionCount="72" docLength="1273" length="2" offset="1225" starttimestamp="1638212009072" timestamp="2301277">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="2354" _type="Insert" date="Mon Nov 29 14:31:50 EST 2021" docASTNodeCount="97" docActiveCodeLength="605" docExpressionCount="72" docLength="1275" length="2" offset="1261" starttimestamp="1638212009072" timestamp="2301277">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="2355" _type="Insert" date="Mon Nov 29 14:31:50 EST 2021" docASTNodeCount="97" docActiveCodeLength="603" docExpressionCount="72" docLength="1277" length="2" offset="1268" starttimestamp="1638212009072" timestamp="2301277">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="2361" _type="Delete" date="Mon Nov 29 14:31:53 EST 2021" docASTNodeCount="80" docActiveCodeLength="682" docExpressionCount="61" docLength="1275" endLine="17" length="2" offset="560" startLine="17" starttimestamp="1638212009072" timestamp="2304458">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <Command __id="2386" _type="PauseCommand" date="Mon Nov 29 14:31:56 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="2307177">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1056]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2385" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:31:56 EST 2021" starttimestamp="1638212009072" timestamp="2307177" />
  <Command __id="2387" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:31:56 EST 2021" starttimestamp="1638212009072" timestamp="2307181" />
  <Command __id="2388" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:31:56 EST 2021" starttimestamp="1638212009072" timestamp="2307181" />
  <Command __id="2389" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:31:56 EST 2021" starttimestamp="1638212009072" timestamp="2307182" />
  <Command __id="2390" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:31:56 EST 2021" starttimestamp="1638212009072" timestamp="2307182" />
  <Command __id="2391" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:31:56 EST 2021" starttimestamp="1638212009072" timestamp="2307182" />
  <Command __id="2392" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:31:56 EST 2021" starttimestamp="1638212009072" timestamp="2307182" />
  <Command __id="2393" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:31:56 EST 2021" starttimestamp="1638212009072" timestamp="2307184" />
  <Command __id="2394" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:31:56 EST 2021" starttimestamp="1638212009072" timestamp="2307184" />
  <Command __id="2395" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:31:56 EST 2021" starttimestamp="1638212009072" timestamp="2307184" />
  <Command __id="2397" _type="PauseCommand" date="Mon Nov 29 14:32:05 EST 2021" range="5s-10s" starttimestamp="1638212009072" timestamp="2316041">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[8856]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2396" _type="SelectTextCommand" caretOffset="1009" date="Mon Nov 29 14:32:05 EST 2021" end="1011" start="1009" starttimestamp="1638212009072" timestamp="2316040" />
  <Command __id="2399" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Mon Nov 29 14:32:05 EST 2021" starttimestamp="1638212009072" timestamp="2316365" />
  <Command __id="2400" _type="SelectTextCommand" caretOffset="1007" date="Mon Nov 29 14:32:06 EST 2021" end="1011" start="1007" starttimestamp="1638212009072" timestamp="2317224" />
  <Command __id="2402" _type="PauseCommand" date="Mon Nov 29 14:32:07 EST 2021" range="1s-2s" starttimestamp="1638212009072" timestamp="2318249">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1025]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2401" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Mon Nov 29 14:32:07 EST 2021" starttimestamp="1638212009072" timestamp="2318249" />
  <Command __id="2403" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:32:07 EST 2021" starttimestamp="1638212009072" timestamp="2318345" />
  <Command __id="2404" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:32:07 EST 2021" starttimestamp="1638212009072" timestamp="2318348" />
  <Command __id="2405" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:32:07 EST 2021" starttimestamp="1638212009072" timestamp="2318349" />
  <Command __id="2406" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:32:07 EST 2021" starttimestamp="1638212009072" timestamp="2318349" />
  <Command __id="2407" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:32:07 EST 2021" starttimestamp="1638212009072" timestamp="2318349" />
  <Command __id="2408" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:32:07 EST 2021" starttimestamp="1638212009072" timestamp="2318350" />
  <Command __id="2409" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:32:07 EST 2021" starttimestamp="1638212009072" timestamp="2318350" />
  <Command __id="2410" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:32:07 EST 2021" starttimestamp="1638212009072" timestamp="2318351" />
  <Command __id="2411" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:32:07 EST 2021" starttimestamp="1638212009072" timestamp="2318351" />
  <Command __id="2412" _type="EclipseCommand" commandID="" date="Mon Nov 29 14:32:07 EST 2021" starttimestamp="1638212009072" timestamp="2318360" />
  <Command __id="2413" _type="MoveCaretCommand" caretOffset="867" date="Mon Nov 29 14:32:08 EST 2021" docOffset="1104" starttimestamp="1638212009072" timestamp="2319346" />
  <Command __id="2415" _type="PauseCommand" date="Mon Nov 29 14:32:15 EST 2021" range="5s-10s" starttimestamp="1638212009072" timestamp="2326315">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[6969]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2414" _type="ShellCommand" date="Mon Nov 29 14:32:15 EST 2021" starttimestamp="1638212009072" timestamp="2326315" type="ECLIPSE_LOST_FOCUS" />
</Events>
