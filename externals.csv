Caller Type,Caller Type Words,Caller Tag,Caller Tag Words,Caller Method,Caller Method Words,Caller Super Types,Calling Super Types Words,Called  Type,Called Type Words,Called  Tagged Type,Called Tagged Type Words,Called Method,Called Method Words
relational.GreaterThanEvaluator,greater:than,@GTEvaluator,none,eval,none,Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
relational.GreaterThanEvaluator,greater:than,@GTEvaluator,none,eval,none,Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
relational.GreaterThanEvaluator,greater:than,@GTEvaluator,none,eval,none,Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
relational.GreaterThanEvaluator,greater:than,@GTEvaluator,none,eval,none,Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
relational.GreaterThanEvaluator,greater:than,@GTEvaluator,none,eval,none,Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
relational.GreaterThanEvaluator,greater:than,@GTEvaluator,none,eval,none,Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
relational.GreaterThanEvaluator,greater:than,@GTEvaluator,none,eval,none,Evaluator,none,main.lisp.parser.terms.IntegerAtom,integer:atom,main.lisp.parser.terms.IntegerAtom,integer:atom,getValue,get:value
relational.GreaterThanEvaluator,greater:than,@GTEvaluator,none,eval,none,Evaluator,none,main.lisp.parser.terms.IntegerAtom,integer:atom,main.lisp.parser.terms.IntegerAtom,integer:atom,getValue,get:value
relational.GreaterThanEvaluator,greater:than,@GTEvaluator,none,eval,none,Evaluator,none,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,newInstance,new:instance
relational.GreaterThanEvaluator,greater:than,@GTEvaluator,none,eval,none,Evaluator,none,main.lisp.parser.terms.DecimalAtom,decimal:atom,main.lisp.parser.terms.DecimalAtom,decimal:atom,getValue,get:value
relational.GreaterThanEvaluator,greater:than,@GTEvaluator,none,eval,none,Evaluator,none,main.lisp.parser.terms.DecimalAtom,decimal:atom,main.lisp.parser.terms.DecimalAtom,decimal:atom,getValue,get:value
relational.GreaterThanEvaluator,greater:than,@GTEvaluator,none,eval,none,Evaluator,none,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,newInstance,new:instance
relational.GreaterThanEvaluator,greater:than,@GTEvaluator,none,eval,none,Evaluator,none,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,newInstance,new:instance
relational.LessThanEqualEvaluator,less:than:equal,@LTEEvaluator,none,eval,none,Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
relational.LessThanEqualEvaluator,less:than:equal,@LTEEvaluator,none,eval,none,Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
relational.LessThanEqualEvaluator,less:than:equal,@LTEEvaluator,none,eval,none,Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
relational.LessThanEqualEvaluator,less:than:equal,@LTEEvaluator,none,eval,none,Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
relational.LessThanEqualEvaluator,less:than:equal,@LTEEvaluator,none,eval,none,Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
relational.LessThanEqualEvaluator,less:than:equal,@LTEEvaluator,none,eval,none,Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
relational.LessThanEqualEvaluator,less:than:equal,@LTEEvaluator,none,eval,none,Evaluator:Evaluator,none,main.lisp.parser.terms.IntegerAtom,integer:atom,main.lisp.parser.terms.IntegerAtom,integer:atom,getValue,get:value
relational.LessThanEqualEvaluator,less:than:equal,@LTEEvaluator,none,eval,none,Evaluator:Evaluator,none,main.lisp.parser.terms.IntegerAtom,integer:atom,main.lisp.parser.terms.IntegerAtom,integer:atom,getValue,get:value
relational.LessThanEqualEvaluator,less:than:equal,@LTEEvaluator,none,eval,none,Evaluator:Evaluator,none,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,newInstance,new:instance
relational.LessThanEqualEvaluator,less:than:equal,@LTEEvaluator,none,eval,none,Evaluator:Evaluator,none,main.lisp.parser.terms.DecimalAtom,decimal:atom,main.lisp.parser.terms.DecimalAtom,decimal:atom,getValue,get:value
relational.LessThanEqualEvaluator,less:than:equal,@LTEEvaluator,none,eval,none,Evaluator:Evaluator,none,main.lisp.parser.terms.DecimalAtom,decimal:atom,main.lisp.parser.terms.DecimalAtom,decimal:atom,getValue,get:value
relational.LessThanEqualEvaluator,less:than:equal,@LTEEvaluator,none,eval,none,Evaluator:Evaluator,none,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,newInstance,new:instance
relational.LessThanEqualEvaluator,less:than:equal,@LTEEvaluator,none,eval,none,Evaluator:Evaluator,none,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,newInstance,new:instance
expression.QuoteEvaluator,quote,@QuoteEvaluator,quote,eval,none,Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
expression.QuoteEvaluator,quote,@QuoteEvaluator,quote,eval,none,Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
logical.OrEvaluator,or,@OrEvaluator,or,eval,none,Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
logical.OrEvaluator,or,@OrEvaluator,or,eval,none,Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,isNIL,is:nil
logical.OrEvaluator,or,@OrEvaluator,or,eval,none,Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
logical.OrEvaluator,or,@OrEvaluator,or,eval,none,Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,isNIL,is:nil
logical.OrEvaluator,or,@OrEvaluator,or,eval,none,Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
logical.OrEvaluator,or,@OrEvaluator,or,eval,none,Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
logical.OrEvaluator,or,@OrEvaluator,or,eval,none,Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
logical.OrEvaluator,or,@OrEvaluator,or,eval,none,Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
logical.OrEvaluator,or,@OrEvaluator,or,eval,none,Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
logical.OrEvaluator,or,@OrEvaluator,or,eval,none,Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
logical.OrEvaluator,or,@OrEvaluator,or,eval,none,Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
functional.LetEvaluator,let,LetEvaluator,let,eval,none,Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.evaluator.Environment,environment,main.lisp.evaluator.Environment,environment,newChild,new:child
functional.LetEvaluator,let,LetEvaluator,let,eval,none,Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
functional.LetEvaluator,let,LetEvaluator,let,eval,none,Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
functional.LetEvaluator,let,LetEvaluator,let,eval,none,Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
functional.LetEvaluator,let,LetEvaluator,let,eval,none,Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
functional.LetEvaluator,let,LetEvaluator,let,eval,none,Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,isNIL,is:nil
functional.LetEvaluator,let,LetEvaluator,let,eval,none,Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
functional.LetEvaluator,let,LetEvaluator,let,eval,none,Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.IdentifierAtom,identifier:atom,main.lisp.parser.terms.IdentifierAtom,identifier:atom,assign,assign
functional.LetEvaluator,let,LetEvaluator,let,eval,none,Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
functional.LetEvaluator,let,LetEvaluator,let,eval,none,Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
functional.LetEvaluator,let,LetEvaluator,let,eval,none,Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
functional.LetEvaluator,let,LetEvaluator,let,eval,none,Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
functional.LetEvaluator,let,LetEvaluator,let,eval,none,Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
functional.LetEvaluator,let,LetEvaluator,let,eval,none,Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
functional.LetEvaluator,let,LetEvaluator,let,eval,none,Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,isAtom,is:atom
functional.LetEvaluator,let,LetEvaluator,let,eval,none,Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.IdentifierAtom,identifier:atom,main.lisp.parser.terms.IdentifierAtom,identifier:atom,assign,assign
functional.LetEvaluator,let,LetEvaluator,let,eval,none,Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
functional.LetEvaluator,let,LetEvaluator,let,eval,none,Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
functional.LetEvaluator,let,LetEvaluator,let,eval,none,Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
functional.LetEvaluator,let,LetEvaluator,let,eval,none,Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
functional.LetEvaluator,let,LetEvaluator,let,eval,none,Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
functional.LetEvaluator,let,LetEvaluator,let,eval,none,Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
functional.LetEvaluator,let,LetEvaluator,let,eval,none,Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
functional.LetEvaluator,let,LetEvaluator,let,eval,none,Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
functional.LetEvaluator,let,LetEvaluator,let,eval,none,Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,isNIL,is:nil
functional.LetEvaluator,let,LetEvaluator,let,eval,none,Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
functional.LetEvaluator,let,LetEvaluator,let,eval,none,Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
functional.LetEvaluator,let,LetEvaluator,let,eval,none,Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
functional.LetEvaluator,let,LetEvaluator,let,eval,none,Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
logical.NotEvaluator,not,@NotEvaluator,not,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
logical.NotEvaluator,not,@NotEvaluator,not,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,isNIL,is:nil
logical.NotEvaluator,not,@NotEvaluator,not,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
logical.NotEvaluator,not,@NotEvaluator,not,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,newInstance,new:instance
logical.NotEvaluator,not,@NotEvaluator,not,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,newInstance,new:instance
relational.GreaterThanEqualEvaluator,greater:than:equal,@GTEEvaluator,gte,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
relational.GreaterThanEqualEvaluator,greater:than:equal,@GTEEvaluator,gte,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
relational.GreaterThanEqualEvaluator,greater:than:equal,@GTEEvaluator,gte,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
relational.GreaterThanEqualEvaluator,greater:than:equal,@GTEEvaluator,gte,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
relational.GreaterThanEqualEvaluator,greater:than:equal,@GTEEvaluator,gte,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
relational.GreaterThanEqualEvaluator,greater:than:equal,@GTEEvaluator,gte,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
relational.GreaterThanEqualEvaluator,greater:than:equal,@GTEEvaluator,gte,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.IntegerAtom,integer:atom,main.lisp.parser.terms.IntegerAtom,integer:atom,getValue,get:value
relational.GreaterThanEqualEvaluator,greater:than:equal,@GTEEvaluator,gte,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.IntegerAtom,integer:atom,main.lisp.parser.terms.IntegerAtom,integer:atom,getValue,get:value
relational.GreaterThanEqualEvaluator,greater:than:equal,@GTEEvaluator,gte,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,newInstance,new:instance
relational.GreaterThanEqualEvaluator,greater:than:equal,@GTEEvaluator,gte,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.DecimalAtom,decimal:atom,main.lisp.parser.terms.DecimalAtom,decimal:atom,getValue,get:value
relational.GreaterThanEqualEvaluator,greater:than:equal,@GTEEvaluator,gte,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.DecimalAtom,decimal:atom,main.lisp.parser.terms.DecimalAtom,decimal:atom,getValue,get:value
relational.GreaterThanEqualEvaluator,greater:than:equal,@GTEEvaluator,gte,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,newInstance,new:instance
relational.GreaterThanEqualEvaluator,greater:than:equal,@GTEEvaluator,gte,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,newInstance,new:instance
expression.ListEvaluator,list,@ListEvaluator,list,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
expression.ListEvaluator,list,@ListEvaluator,list,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,isNIL,is:nil
expression.ListEvaluator,list,@ListEvaluator,list,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
expression.ListEvaluator,list,@ListEvaluator,list,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.ExpressionFactory,expression:factory,main.lisp.parser.terms.ExpressionFactory,expression:factory,newInstance,new:instance
expression.ListEvaluator,list,@ListEvaluator,list,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
expression.ListEvaluator,list,@ListEvaluator,list,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
expression.ListEvaluator,list,@ListEvaluator,list,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.NilAtom,nil:atom,main.lisp.parser.terms.NilAtom,nil:atom,NilAtom,nil:atom
expression.ListEvaluator,list,@ListEvaluator,list,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.ExpressionFactory,expression:factory,main.lisp.parser.terms.ExpressionFactory,expression:factory,newInstance,new:instance
expression.ListEvaluator,list,@ListEvaluator,list,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
expression.ListEvaluator,list,@ListEvaluator,list,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
expression.ListEvaluator,list,@ListEvaluator,list,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,expression.ListEvaluator,list,@ListEvaluator,list,helper,helper
expression.ListEvaluator,list,@ListEvaluator,list,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
expression.ListEvaluator,list,@ListEvaluator,list,helper,helper,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,isNIL,is:nil
expression.ListEvaluator,list,@ListEvaluator,list,helper,helper,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
expression.ListEvaluator,list,@ListEvaluator,list,helper,helper,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.ExpressionFactory,expression:factory,main.lisp.parser.terms.ExpressionFactory,expression:factory,newInstance,new:instance
expression.ListEvaluator,list,@ListEvaluator,list,helper,helper,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
expression.ListEvaluator,list,@ListEvaluator,list,helper,helper,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
expression.ListEvaluator,list,@ListEvaluator,list,helper,helper,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.NilAtom,nil:atom,main.lisp.parser.terms.NilAtom,nil:atom,NilAtom,nil:atom
expression.ListEvaluator,list,@ListEvaluator,list,helper,helper,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.ExpressionFactory,expression:factory,main.lisp.parser.terms.ExpressionFactory,expression:factory,newInstance,new:instance
expression.ListEvaluator,list,@ListEvaluator,list,helper,helper,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
expression.ListEvaluator,list,@ListEvaluator,list,helper,helper,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
expression.ListEvaluator,list,@ListEvaluator,list,helper,helper,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,expression.ListEvaluator,list,@ListEvaluator,list,helper,helper
expression.ListEvaluator,list,@ListEvaluator,list,helper,helper,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
a5.RunLisp,run:lisp,@Main,main,main,main,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,evaluators.LispOperationRegisterer,lisp:operation,@CustomOperationRegisterer,custom:operation,LispOperationRegisterer,lisp:operation
a5.RunLisp,run:lisp,@Main,main,main,main,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,evaluators.LispOperationRegisterer,lisp:operation,@CustomOperationRegisterer,custom:operation,registerOperations,register:operations
a5.RunLisp,run:lisp,@Main,main,main,main,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.ExpressionFactory,expression:factory,main.lisp.parser.terms.ExpressionFactory,expression:factory,setClass,set:class
a5.RunLisp,run:lisp,@Main,main,main,main,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.evaluator.environment.EnvironmentFactory,environment:factory,main.lisp.evaluator.environment.EnvironmentFactory,environment:factory,setClass,set:class
a5.RunLisp,run:lisp,@Main,main,main,main,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.IdentifierAtomFactory,identifier:atom:factory,main.lisp.parser.terms.IdentifierAtomFactory,identifier:atom:factory,setClass,set:class
a5.RunLisp,run:lisp,@Main,main,main,main,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.evaluator.ExpressionEvaluatorFactory,expression:factory,main.lisp.evaluator.ExpressionEvaluatorFactory,expression:factory,setClass,set:class
a5.RunLisp,run:lisp,@Main,main,main,main,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.Main,main,main.Main,main,main,main
expression.CondEvaluator,none,@CondEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
expression.CondEvaluator,none,@CondEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,isNIL,is:nil
expression.CondEvaluator,none,@CondEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,newInstance,new:instance
expression.CondEvaluator,none,@CondEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,isAtom,is:atom
expression.CondEvaluator,none,@CondEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
expression.CondEvaluator,none,@CondEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,isNIL,is:nil
expression.CondEvaluator,none,@CondEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
expression.CondEvaluator,none,@CondEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
expression.CondEvaluator,none,@CondEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
expression.CondEvaluator,none,@CondEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,isNIL,is:nil
expression.CondEvaluator,none,@CondEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
expression.CondEvaluator,none,@CondEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
expression.CondEvaluator,none,@CondEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
expression.CondEvaluator,none,@CondEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
expression.CondEvaluator,none,@CondEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
expression.CondEvaluator,none,@CondEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
expression.CondEvaluator,none,@CondEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
expression.CondEvaluator,none,@CondEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
expression.CondEvaluator,none,@CondEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
expression.CondEvaluator,none,@CondEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,isAtom,is:atom
expression.CondEvaluator,none,@CondEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
expression.CondEvaluator,none,@CondEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
expression.CondEvaluator,none,@CondEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
expression.CondEvaluator,none,@CondEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,none,expression.CondEvaluator,none,@CondEvaluator,none,eval,none
a5.VariableEval,variable,@IdentifierAtomWithLookup,identifier:atom:with,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression,identifier:atom:abstract:atom:abstract:expression,main.lisp.parser.terms.IdentifierAtomFactory,identifier:atom:factory,main.lisp.parser.terms.IdentifierAtomFactory,identifier:atom:factory,setClass,set:class
a5.VariableEval,variable,@IdentifierAtomWithLookup,identifier:atom:with,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression,identifier:atom:abstract:atom:abstract:expression,java.lang.Object,object,java.lang.Object,object,getClass,get:class
a5.VariableEval,variable,@IdentifierAtomWithLookup,identifier:atom:with,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression,identifier:atom:abstract:atom:abstract:expression,main.lisp.evaluator.Environment,environment,main.lisp.evaluator.Environment,environment,isEmpty,is:empty
a5.VariableEval,variable,@IdentifierAtomWithLookup,identifier:atom:with,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression,identifier:atom:abstract:atom:abstract:expression,main.lisp.evaluator.Environment,environment,main.lisp.evaluator.Environment,environment,lookup,none
a5.VariableEval,variable,@IdentifierAtomWithLookup,identifier:atom:with,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression,identifier:atom:abstract:atom:abstract:expression,main.lisp.evaluator.Environment,environment,main.lisp.evaluator.Environment,environment,getParent,get:parent
a5.VariableEval,variable,@IdentifierAtomWithLookup,identifier:atom:with,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression,identifier:atom:abstract:atom:abstract:expression,main.lisp.evaluator.Environment,environment,main.lisp.evaluator.Environment,environment,get,get
a5.VariableEval,variable,@IdentifierAtomWithLookup,identifier:atom:with,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression,identifier:atom:abstract:atom:abstract:expression,main.lisp.evaluator.Environment,environment,main.lisp.evaluator.Environment,environment,lookup,none
a5.VariableEval,variable,@IdentifierAtomWithLookup,identifier:atom:with,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression,identifier:atom:abstract:atom:abstract:expression,main.lisp.evaluator.Environment,environment,main.lisp.evaluator.Environment,environment,getParent,get:parent
a5.VariableEval,variable,@IdentifierAtomWithLookup,identifier:atom:with,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression,identifier:atom:abstract:atom:abstract:expression,main.lisp.evaluator.Environment,environment,main.lisp.evaluator.Environment,environment,get,get
a5.VariableEval,variable,@IdentifierAtomWithLookup,identifier:atom:with,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression,identifier:atom:abstract:atom:abstract:expression,main.lisp.evaluator.Environment,environment,main.lisp.evaluator.Environment,environment,lookup,none
evaluators.LispOperationRegisterer,lisp:operation,@CustomOperationRegisterer,custom:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,registerEvaluatorIfNew,register:if:new
evaluators.LispOperationRegisterer,lisp:operation,@CustomOperationRegisterer,custom:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,get,get
evaluators.LispOperationRegisterer,lisp:operation,@CustomOperationRegisterer,custom:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:operation,expression.QuoteEvaluator,quote,@QuoteEvaluator,quote,QuoteEvaluator,quote
evaluators.LispOperationRegisterer,lisp:operation,@CustomOperationRegisterer,custom:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,registerEvaluatorIfNew,register:if:new
evaluators.LispOperationRegisterer,lisp:operation,@CustomOperationRegisterer,custom:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,get,get
evaluators.LispOperationRegisterer,lisp:operation,@CustomOperationRegisterer,custom:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:operation,expression.ListEvaluator,list,@ListEvaluator,list,ListEvaluator,list
evaluators.LispOperationRegisterer,lisp:operation,@CustomOperationRegisterer,custom:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,registerEvaluatorIfNew,register:if:new
evaluators.LispOperationRegisterer,lisp:operation,@CustomOperationRegisterer,custom:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,get,get
evaluators.LispOperationRegisterer,lisp:operation,@CustomOperationRegisterer,custom:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:operation,expression.EvalEvaluator,none,@EvalEvaluator,none,EvalEvaluator,none
evaluators.LispOperationRegisterer,lisp:operation,@CustomOperationRegisterer,custom:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,registerEvaluatorIfNew,register:if:new
evaluators.LispOperationRegisterer,lisp:operation,@CustomOperationRegisterer,custom:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,get,get
evaluators.LispOperationRegisterer,lisp:operation,@CustomOperationRegisterer,custom:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:operation,relational.LessThanEvaluator,less:than,@LTEvaluator,lt,LessThanEvaluator,less:than
evaluators.LispOperationRegisterer,lisp:operation,@CustomOperationRegisterer,custom:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,registerEvaluatorIfNew,register:if:new
evaluators.LispOperationRegisterer,lisp:operation,@CustomOperationRegisterer,custom:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,get,get
evaluators.LispOperationRegisterer,lisp:operation,@CustomOperationRegisterer,custom:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:operation,relational.LessThanEqualEvaluator,less:than:equal,@LTEEvaluator,none,LessThanEqualEvaluator,less:than:equal
evaluators.LispOperationRegisterer,lisp:operation,@CustomOperationRegisterer,custom:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,registerEvaluatorIfNew,register:if:new
evaluators.LispOperationRegisterer,lisp:operation,@CustomOperationRegisterer,custom:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,get,get
evaluators.LispOperationRegisterer,lisp:operation,@CustomOperationRegisterer,custom:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:operation,relational.GreaterThanEvaluator,greater:than,@GTEvaluator,none,GreaterThanEvaluator,greater:than
evaluators.LispOperationRegisterer,lisp:operation,@CustomOperationRegisterer,custom:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,registerEvaluatorIfNew,register:if:new
evaluators.LispOperationRegisterer,lisp:operation,@CustomOperationRegisterer,custom:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,get,get
evaluators.LispOperationRegisterer,lisp:operation,@CustomOperationRegisterer,custom:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:operation,relational.GreaterThanEqualEvaluator,greater:than:equal,@GTEEvaluator,gte,GreaterThanEqualEvaluator,greater:than:equal
evaluators.LispOperationRegisterer,lisp:operation,@CustomOperationRegisterer,custom:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,registerEvaluatorIfNew,register:if:new
evaluators.LispOperationRegisterer,lisp:operation,@CustomOperationRegisterer,custom:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,get,get
evaluators.LispOperationRegisterer,lisp:operation,@CustomOperationRegisterer,custom:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:operation,expression.CondEvaluator,none,@CondEvaluator,none,CondEvaluator,none
evaluators.LispOperationRegisterer,lisp:operation,@CustomOperationRegisterer,custom:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,registerEvaluatorIfNew,register:if:new
evaluators.LispOperationRegisterer,lisp:operation,@CustomOperationRegisterer,custom:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,get,get
evaluators.LispOperationRegisterer,lisp:operation,@CustomOperationRegisterer,custom:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:operation,expression.LoadEvaluator,load,@LoadEvaluator,load,LoadEvaluator,load
evaluators.LispOperationRegisterer,lisp:operation,@CustomOperationRegisterer,custom:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,registerEvaluatorIfNew,register:if:new
evaluators.LispOperationRegisterer,lisp:operation,@CustomOperationRegisterer,custom:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,get,get
evaluators.LispOperationRegisterer,lisp:operation,@CustomOperationRegisterer,custom:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:operation,logical.AndEvaluator,and,@AndEvaluator,and,AndEvaluator,and
evaluators.LispOperationRegisterer,lisp:operation,@CustomOperationRegisterer,custom:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,registerEvaluatorIfNew,register:if:new
evaluators.LispOperationRegisterer,lisp:operation,@CustomOperationRegisterer,custom:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,get,get
evaluators.LispOperationRegisterer,lisp:operation,@CustomOperationRegisterer,custom:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:operation,logical.OrEvaluator,or,@OrEvaluator,or,OrEvaluator,or
evaluators.LispOperationRegisterer,lisp:operation,@CustomOperationRegisterer,custom:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,registerEvaluatorIfNew,register:if:new
evaluators.LispOperationRegisterer,lisp:operation,@CustomOperationRegisterer,custom:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,get,get
evaluators.LispOperationRegisterer,lisp:operation,@CustomOperationRegisterer,custom:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:operation,logical.NotEvaluator,not,@NotEvaluator,not,NotEvaluator,not
evaluators.LispOperationRegisterer,lisp:operation,@CustomOperationRegisterer,custom:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,registerEvaluatorIfNew,register:if:new
evaluators.LispOperationRegisterer,lisp:operation,@CustomOperationRegisterer,custom:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,get,get
evaluators.LispOperationRegisterer,lisp:operation,@CustomOperationRegisterer,custom:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:operation,functional.SetqEvaluator,none,@SetqEvaluator,none,SetqEvaluator,none
evaluators.LispOperationRegisterer,lisp:operation,@CustomOperationRegisterer,custom:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,registerEvaluatorIfNew,register:if:new
evaluators.LispOperationRegisterer,lisp:operation,@CustomOperationRegisterer,custom:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,get,get
evaluators.LispOperationRegisterer,lisp:operation,@CustomOperationRegisterer,custom:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:operation,functional.LambdaEvaluator,lambda,@LambdaEvaluator,lambda,LambdaEvaluator,lambda
evaluators.LispOperationRegisterer,lisp:operation,@CustomOperationRegisterer,custom:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,registerEvaluatorIfNew,register:if:new
evaluators.LispOperationRegisterer,lisp:operation,@CustomOperationRegisterer,custom:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,get,get
evaluators.LispOperationRegisterer,lisp:operation,@CustomOperationRegisterer,custom:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,registerEvaluatorIfNew,register:if:new
evaluators.LispOperationRegisterer,lisp:operation,@CustomOperationRegisterer,custom:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,get,get
evaluators.LispOperationRegisterer,lisp:operation,@CustomOperationRegisterer,custom:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,registerEvaluatorIfNew,register:if:new
evaluators.LispOperationRegisterer,lisp:operation,@CustomOperationRegisterer,custom:operation,registerOperations,register:operations,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer,identifier:atom:abstract:atom:abstract:expression:operation,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,main.lisp.evaluator.BuiltinOperationManagerSingleton,operation:manager:singleton,get,get
evaluators.StringFormats,string:formats,@StringFormattingSExpression,string:formatting:expression,toString,to:string,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.AbstractSExpression,abstract:expression,main.lisp.parser.terms.AbstractSExpression,abstract:expression,isNIL,is:nil
evaluators.StringFormats,string:formats,@StringFormattingSExpression,string:formatting:expression,toString,to:string,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,evaluators.StringFormats,string:formats,@StringFormattingSExpression,string:formatting:expression,toStringAsSExpression,to:string:as:expression
evaluators.StringFormats,string:formats,@StringFormattingSExpression,string:formatting:expression,toString,to:string,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,evaluators.StringFormats,string:formats,@StringFormattingSExpression,string:formatting:expression,isList,is:list
evaluators.StringFormats,string:formats,@StringFormattingSExpression,string:formatting:expression,toString,to:string,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,evaluators.StringFormats,string:formats,@StringFormattingSExpression,string:formatting:expression,toStringAsList,to:string:as:list
evaluators.StringFormats,string:formats,@StringFormattingSExpression,string:formatting:expression,toString,to:string,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,evaluators.StringFormats,string:formats,@StringFormattingSExpression,string:formatting:expression,toStringAsSExpression,to:string:as:expression
evaluators.StringFormats,string:formats,@StringFormattingSExpression,string:formatting:expression,toStringAsSExpressionDeep,to:string:as:expression:deep,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,evaluators.StringFormats,string:formats,@StringFormattingSExpression,string:formatting:expression,toStringAsSExpressionDeep,to:string:as:expression:deep
evaluators.StringFormats,string:formats,@StringFormattingSExpression,string:formatting:expression,toStringAsSExpressionDeep,to:string:as:expression:deep,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.BasicExpression,basic:expression,main.lisp.parser.terms.BasicExpression,basic:expression,getHead,get:head
evaluators.StringFormats,string:formats,@StringFormattingSExpression,string:formatting:expression,toStringAsSExpressionDeep,to:string:as:expression:deep,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,evaluators.StringFormats,string:formats,@StringFormattingSExpression,string:formatting:expression,toStringAsSExpressionDeep,to:string:as:expression:deep
evaluators.StringFormats,string:formats,@StringFormattingSExpression,string:formatting:expression,toStringAsSExpressionDeep,to:string:as:expression:deep,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.BasicExpression,basic:expression,main.lisp.parser.terms.BasicExpression,basic:expression,getTail,get:tail
evaluators.StringFormats,string:formats,@StringFormattingSExpression,string:formatting:expression,toStringAsSExpression,to:string:as:expression,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,evaluators.StringFormats,string:formats,@StringFormattingSExpression,string:formatting:expression,toString,to:string
evaluators.StringFormats,string:formats,@StringFormattingSExpression,string:formatting:expression,toStringAsSExpression,to:string:as:expression,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.BasicExpression,basic:expression,main.lisp.parser.terms.BasicExpression,basic:expression,getHead,get:head
evaluators.StringFormats,string:formats,@StringFormattingSExpression,string:formatting:expression,toStringAsSExpression,to:string:as:expression,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,evaluators.StringFormats,string:formats,@StringFormattingSExpression,string:formatting:expression,toString,to:string
evaluators.StringFormats,string:formats,@StringFormattingSExpression,string:formatting:expression,toStringAsSExpression,to:string:as:expression,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.BasicExpression,basic:expression,main.lisp.parser.terms.BasicExpression,basic:expression,getTail,get:tail
evaluators.StringFormats,string:formats,@StringFormattingSExpression,string:formatting:expression,toStringAsListHelperPublic,to:string:as:list:helper:public,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.AbstractSExpression,abstract:expression,main.lisp.parser.terms.AbstractSExpression,abstract:expression,isNIL,is:nil
evaluators.StringFormats,string:formats,@StringFormattingSExpression,string:formatting:expression,toStringAsListHelperPublic,to:string:as:list:helper:public,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.BasicExpression,basic:expression,main.lisp.parser.terms.BasicExpression,basic:expression,getTail,get:tail
evaluators.StringFormats,string:formats,@StringFormattingSExpression,string:formatting:expression,toStringAsListHelperPublic,to:string:as:list:helper:public,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,evaluators.StringFormats,string:formats,@StringFormattingSExpression,string:formatting:expression,toString,to:string
evaluators.StringFormats,string:formats,@StringFormattingSExpression,string:formatting:expression,toStringAsListHelperPublic,to:string:as:list:helper:public,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.BasicExpression,basic:expression,main.lisp.parser.terms.BasicExpression,basic:expression,getHead,get:head
evaluators.StringFormats,string:formats,@StringFormattingSExpression,string:formatting:expression,toStringAsListHelperPublic,to:string:as:list:helper:public,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,evaluators.StringFormats,string:formats,@StringFormattingSExpression,string:formatting:expression,toString,to:string
evaluators.StringFormats,string:formats,@StringFormattingSExpression,string:formatting:expression,toStringAsListHelperPublic,to:string:as:list:helper:public,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.BasicExpression,basic:expression,main.lisp.parser.terms.BasicExpression,basic:expression,getHead,get:head
evaluators.StringFormats,string:formats,@StringFormattingSExpression,string:formatting:expression,toStringAsListHelperPublic,to:string:as:list:helper:public,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.AbstractSExpression,abstract:expression,main.lisp.parser.terms.AbstractSExpression,abstract:expression,toStringAsListHelperPublic,to:string:as:list:helper:public
evaluators.StringFormats,string:formats,@StringFormattingSExpression,string:formatting:expression,toStringAsListHelperPublic,to:string:as:list:helper:public,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.BasicExpression,basic:expression,main.lisp.parser.terms.BasicExpression,basic:expression,getTail,get:tail
evaluators.StringFormats,string:formats,@StringFormattingSExpression,string:formatting:expression,toStringAsList,to:string:as:list,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,evaluators.StringFormats,string:formats,@StringFormattingSExpression,string:formatting:expression,toStringAsListHelperPublic,to:string:as:list:helper:public
evaluators.StringFormats,string:formats,@StringFormattingSExpression,string:formatting:expression,isList,is:list,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.AbstractSExpression,abstract:expression,main.lisp.parser.terms.AbstractSExpression,abstract:expression,isAtom,is:atom
evaluators.StringFormats,string:formats,@StringFormattingSExpression,string:formatting:expression,isList,is:list,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.BasicExpression,basic:expression,main.lisp.parser.terms.BasicExpression,basic:expression,getHead,get:head
evaluators.StringFormats,string:formats,@StringFormattingSExpression,string:formatting:expression,isList,is:list,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.AbstractSExpression,abstract:expression,main.lisp.parser.terms.AbstractSExpression,abstract:expression,isNIL,is:nil
evaluators.StringFormats,string:formats,@StringFormattingSExpression,string:formatting:expression,isList,is:list,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.BasicExpression,basic:expression,main.lisp.parser.terms.BasicExpression,basic:expression,getTail,get:tail
evaluators.StringFormats,string:formats,@StringFormattingSExpression,string:formatting:expression,isList,is:list,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.AbstractSExpression,abstract:expression,main.lisp.parser.terms.AbstractSExpression,abstract:expression,isAtom,is:atom
evaluators.StringFormats,string:formats,@StringFormattingSExpression,string:formatting:expression,isList,is:list,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.BasicExpression,basic:expression,main.lisp.parser.terms.BasicExpression,basic:expression,getTail,get:tail
evaluators.StringFormats,string:formats,@StringFormattingSExpression,string:formatting:expression,isList,is:list,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.AbstractSExpression,abstract:expression,main.lisp.parser.terms.AbstractSExpression,abstract:expression,isNIL,is:nil
evaluators.StringFormats,string:formats,@StringFormattingSExpression,string:formatting:expression,isList,is:list,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.BasicExpression,basic:expression,main.lisp.parser.terms.BasicExpression,basic:expression,getTail,get:tail
evaluators.StringFormats,string:formats,@StringFormattingSExpression,string:formatting:expression,isList,is:list,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,evaluators.StringFormats,string:formats,@StringFormattingSExpression,string:formatting:expression,isList,is:list
evaluators.StringFormats,string:formats,@StringFormattingSExpression,string:formatting:expression,isList,is:list,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.BasicExpression,basic:expression,main.lisp.parser.terms.BasicExpression,basic:expression,getTail,get:tail
expression.EvalEvaluator,none,@EvalEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,$),none,),none,eval,none
expression.EvalEvaluator,none,@EvalEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
expression.EvalEvaluator,none,@EvalEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
expression.EvalEvaluator,none,@EvalEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
functional.SetqEvaluator,none,@SetqEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
functional.SetqEvaluator,none,@SetqEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
functional.SetqEvaluator,none,@SetqEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
functional.SetqEvaluator,none,@SetqEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
functional.SetqEvaluator,none,@SetqEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.IdentifierAtom,identifier:atom,main.lisp.parser.terms.IdentifierAtom,identifier:atom,assign,assign
functional.SetqEvaluator,none,@SetqEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
functional.CurryEvaluator,curry,CurryEvaluator,curry,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
functional.CurryEvaluator,curry,CurryEvaluator,curry,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
functional.CurryEvaluator,curry,CurryEvaluator,curry,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
functional.CurryEvaluator,curry,CurryEvaluator,curry,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.evaluator.function.Lambda,lambda,main.lisp.evaluator.function.Lambda,lambda,getArgumentNames,get:argument:names
functional.CurryEvaluator,curry,CurryEvaluator,curry,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.ExpressionFactory,expression:factory,main.lisp.parser.terms.ExpressionFactory,expression:factory,newInstance,new:instance
functional.CurryEvaluator,curry,CurryEvaluator,curry,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.QuoteAtom,quote:atom,main.lisp.parser.terms.QuoteAtom,quote:atom,QuoteAtom,quote:atom
functional.CurryEvaluator,curry,CurryEvaluator,curry,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
functional.CurryEvaluator,curry,CurryEvaluator,curry,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.evaluator.function.LambdaFactory,lambda:factory,main.lisp.evaluator.function.LambdaFactory,lambda:factory,newInstance,new:instance
functional.CurryEvaluator,curry,CurryEvaluator,curry,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.evaluator.function.Function,function,main.lisp.evaluator.function.Function,function,getArgumentNames,get:argument:names
functional.CurryEvaluator,curry,CurryEvaluator,curry,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.evaluator.function.Function,function,main.lisp.evaluator.function.Function,function,getLambda,get:lambda
functional.CurryEvaluator,curry,CurryEvaluator,curry,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.ExpressionFactory,expression:factory,main.lisp.parser.terms.ExpressionFactory,expression:factory,newInstance,new:instance
functional.CurryEvaluator,curry,CurryEvaluator,curry,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.QuoteAtom,quote:atom,main.lisp.parser.terms.QuoteAtom,quote:atom,QuoteAtom,quote:atom
functional.CurryEvaluator,curry,CurryEvaluator,curry,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
functional.CurryEvaluator,curry,CurryEvaluator,curry,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.evaluator.function.LambdaFactory,lambda:factory,main.lisp.evaluator.function.LambdaFactory,lambda:factory,newInstance,new:instance
logical.AndEvaluator,and,@AndEvaluator,and,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
logical.AndEvaluator,and,@AndEvaluator,and,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,isNIL,is:nil
logical.AndEvaluator,and,@AndEvaluator,and,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
logical.AndEvaluator,and,@AndEvaluator,and,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,newInstance,new:instance
logical.AndEvaluator,and,@AndEvaluator,and,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,isAtom,is:atom
logical.AndEvaluator,and,@AndEvaluator,and,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,isNIL,is:nil
logical.AndEvaluator,and,@AndEvaluator,and,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
logical.AndEvaluator,and,@AndEvaluator,and,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,isNIL,is:nil
logical.AndEvaluator,and,@AndEvaluator,and,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
logical.AndEvaluator,and,@AndEvaluator,and,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
logical.AndEvaluator,and,@AndEvaluator,and,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,newInstance,new:instance
logical.AndEvaluator,and,@AndEvaluator,and,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
logical.AndEvaluator,and,@AndEvaluator,and,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
logical.AndEvaluator,and,@AndEvaluator,and,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
a5.LocalChecks,local:checks,LocalChecks,local:checks,main,main,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,trace.grader.basics.GraderBasicsTraceUtility,grader:basics:trace:utility,trace.grader.basics.GraderBasicsTraceUtility,grader:basics:trace:utility,setTracerShowInfo,set:tracer:show:info
a5.LocalChecks,local:checks,LocalChecks,local:checks,main,main,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,trace.grader.basics.GraderBasicsTraceUtility,grader:basics:trace:utility,trace.grader.basics.GraderBasicsTraceUtility,grader:basics:trace:utility,setBufferTracedMessages,set:buffer:traced:messages
a5.LocalChecks,local:checks,LocalChecks,local:checks,main,main,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,trace.grader.basics.GraderBasicsTraceUtility,grader:basics:trace:utility,trace.grader.basics.GraderBasicsTraceUtility,grader:basics:trace:utility,setMaxPrintedTraces,set:max:printed:traces
a5.LocalChecks,local:checks,LocalChecks,local:checks,main,main,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,trace.grader.basics.GraderBasicsTraceUtility,grader:basics:trace:utility,trace.grader.basics.GraderBasicsTraceUtility,grader:basics:trace:utility,setMaxTraces,set:max:traces
a5.LocalChecks,local:checks,LocalChecks,local:checks,main,main,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,grader.basics.execution.BasicProjectExecution,basic:project:execution,grader.basics.execution.BasicProjectExecution,basic:project:execution,setProcessTimeOut,set:process:time:out
a5.LocalChecks,local:checks,LocalChecks,local:checks,main,main,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,gradingTools.comp524f21.assignment6.F21Assignment6Suite,assignment:suite,gradingTools.comp524f21.assignment6.F21Assignment6Suite,assignment:suite,main,main
relational.LessThanEvaluator,less:than,@LTEvaluator,lt,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
relational.LessThanEvaluator,less:than,@LTEvaluator,lt,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
relational.LessThanEvaluator,less:than,@LTEvaluator,lt,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
relational.LessThanEvaluator,less:than,@LTEvaluator,lt,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
relational.LessThanEvaluator,less:than,@LTEvaluator,lt,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
relational.LessThanEvaluator,less:than,@LTEvaluator,lt,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
relational.LessThanEvaluator,less:than,@LTEvaluator,lt,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.IntegerAtom,integer:atom,main.lisp.parser.terms.IntegerAtom,integer:atom,getValue,get:value
relational.LessThanEvaluator,less:than,@LTEvaluator,lt,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.IntegerAtom,integer:atom,main.lisp.parser.terms.IntegerAtom,integer:atom,getValue,get:value
relational.LessThanEvaluator,less:than,@LTEvaluator,lt,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,newInstance,new:instance
relational.LessThanEvaluator,less:than,@LTEvaluator,lt,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.DecimalAtom,decimal:atom,main.lisp.parser.terms.DecimalAtom,decimal:atom,getValue,get:value
relational.LessThanEvaluator,less:than,@LTEvaluator,lt,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.DecimalAtom,decimal:atom,main.lisp.parser.terms.DecimalAtom,decimal:atom,getValue,get:value
relational.LessThanEvaluator,less:than,@LTEvaluator,lt,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,main.lisp.parser.terms.TAtomicExpressionFactory,atomic:expression:factory,newInstance,new:instance
relational.LessThanEvaluator,less:than,@LTEvaluator,lt,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,newInstance,new:instance
functional.FuncallEvaluator,none,FuncallEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.ExpressionFactory,expression:factory,main.lisp.parser.terms.ExpressionFactory,expression:factory,newInstance,new:instance
functional.FuncallEvaluator,none,FuncallEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,newInstance,new:instance
functional.FuncallEvaluator,none,FuncallEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,newInstance,new:instance
functional.FuncallEvaluator,none,FuncallEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
functional.FuncallEvaluator,none,FuncallEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,isAtom,is:atom
functional.FuncallEvaluator,none,FuncallEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
functional.FuncallEvaluator,none,FuncallEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
functional.FuncallEvaluator,none,FuncallEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
functional.FuncallEvaluator,none,FuncallEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.evaluator.Environment,environment,main.lisp.evaluator.Environment,environment,newChild,new:child
functional.FuncallEvaluator,none,FuncallEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.evaluator.function.Lambda,lambda,main.lisp.evaluator.function.Lambda,lambda,evaluateLambda,evaluate:lambda
functional.FuncallEvaluator,none,FuncallEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
functional.FuncallEvaluator,none,FuncallEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.evaluator.function.Function,function,main.lisp.evaluator.function.Function,function,evaluateLambda,evaluate:lambda
functional.FuncallEvaluator,none,FuncallEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.evaluator.function.Function,function,main.lisp.evaluator.function.Function,function,getLambda,get:lambda
functional.FuncallEvaluator,none,FuncallEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.evaluator.function.Function,function,main.lisp.evaluator.function.Function,function,newChild,new:child
functional.FuncallEvaluator,none,FuncallEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.evaluator.function.Function,function,main.lisp.evaluator.function.Function,function,getEnvironment,get:environment
functional.FuncallEvaluator,none,FuncallEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.evaluator.function.Function,function,main.lisp.evaluator.function.Function,function,getEnvironment,get:environment
functional.FuncallEvaluator,none,FuncallEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
functional.FuncallEvaluator,none,FuncallEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.IdentifierAtom,identifier:atom,main.lisp.parser.terms.IdentifierAtom,identifier:atom,lookup,none
functional.FuncallEvaluator,none,FuncallEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
functional.FuncallEvaluator,none,FuncallEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,java.util.Optional,optional,java.util.Optional,optional,isEmpty,is:empty
functional.FuncallEvaluator,none,FuncallEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,java.util.Optional,optional,java.util.Optional,optional,get,get
functional.FuncallEvaluator,none,FuncallEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.evaluator.Environment,environment,main.lisp.evaluator.Environment,environment,newChild,new:child
functional.FuncallEvaluator,none,FuncallEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.evaluator.function.Lambda,lambda,main.lisp.evaluator.function.Lambda,lambda,evaluateLambda,evaluate:lambda
functional.FuncallEvaluator,none,FuncallEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,java.util.Optional,optional,java.util.Optional,optional,get,get
functional.FuncallEvaluator,none,FuncallEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
functional.FuncallEvaluator,none,FuncallEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,java.util.Optional,optional,java.util.Optional,optional,isEmpty,is:empty
functional.FuncallEvaluator,none,FuncallEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,java.util.Optional,optional,java.util.Optional,optional,get,get
functional.FuncallEvaluator,none,FuncallEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.evaluator.function.Function,function,main.lisp.evaluator.function.Function,function,evaluateLambda,evaluate:lambda
functional.FuncallEvaluator,none,FuncallEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.evaluator.function.Function,function,main.lisp.evaluator.function.Function,function,getLambda,get:lambda
functional.FuncallEvaluator,none,FuncallEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,java.util.Optional,optional,java.util.Optional,optional,get,get
functional.FuncallEvaluator,none,FuncallEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.evaluator.function.Function,function,main.lisp.evaluator.function.Function,function,newChild,new:child
functional.FuncallEvaluator,none,FuncallEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.evaluator.function.Function,function,main.lisp.evaluator.function.Function,function,getEnvironment,get:environment
functional.FuncallEvaluator,none,FuncallEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,java.util.Optional,optional,java.util.Optional,optional,get,get
functional.FuncallEvaluator,none,FuncallEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.evaluator.function.Function,function,main.lisp.evaluator.function.Function,function,getEnvironment,get:environment
functional.FuncallEvaluator,none,FuncallEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,java.util.Optional,optional,java.util.Optional,optional,get,get
functional.FuncallEvaluator,none,FuncallEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
functional.FuncallEvaluator,none,FuncallEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.ExpressionFactory,expression:factory,main.lisp.parser.terms.ExpressionFactory,expression:factory,newInstance,new:instance
functional.FuncallEvaluator,none,FuncallEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,newInstance,new:instance
functional.FuncallEvaluator,none,FuncallEvaluator,none,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,newInstance,new:instance
functional.FuncallEvaluator,none,FuncallEvaluator,none,evaluateLambda,evaluate:lambda,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.evaluator.function.Lambda,lambda,main.lisp.evaluator.function.Lambda,lambda,getArgumentNames,get:argument:names
functional.FuncallEvaluator,none,FuncallEvaluator,none,evaluateLambda,evaluate:lambda,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,isAtom,is:atom
functional.FuncallEvaluator,none,FuncallEvaluator,none,evaluateLambda,evaluate:lambda,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.evaluator.Environment,environment,main.lisp.evaluator.Environment,environment,assign,assign
functional.FuncallEvaluator,none,FuncallEvaluator,none,evaluateLambda,evaluate:lambda,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.evaluator.Environment,environment,main.lisp.evaluator.Environment,environment,assign,assign
functional.FuncallEvaluator,none,FuncallEvaluator,none,evaluateLambda,evaluate:lambda,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
functional.FuncallEvaluator,none,FuncallEvaluator,none,evaluateLambda,evaluate:lambda,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
functional.FuncallEvaluator,none,FuncallEvaluator,none,evaluateLambda,evaluate:lambda,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
functional.FuncallEvaluator,none,FuncallEvaluator,none,evaluateLambda,evaluate:lambda,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.evaluator.function.Lambda,lambda,main.lisp.evaluator.function.Lambda,lambda,eval,none
expression.LoadEvaluator,load,@LoadEvaluator,load,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,toString,to:string
expression.LoadEvaluator,load,@LoadEvaluator,load,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
expression.LoadEvaluator,load,@LoadEvaluator,load,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
expression.LoadEvaluator,load,@LoadEvaluator,load,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
expression.LoadEvaluator,load,@LoadEvaluator,load,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,String,string,java.lang.String,string,substring,none
expression.LoadEvaluator,load,@LoadEvaluator,load,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,String,string,java.lang.String,string,substring,none
expression.LoadEvaluator,load,@LoadEvaluator,load,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,String,string,java.lang.String,string,length,length
expression.LoadEvaluator,load,@LoadEvaluator,load,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,java.nio.file.Paths,paths,java.nio.file.Paths,paths,get,get
expression.LoadEvaluator,load,@LoadEvaluator,load,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,java.nio.file.Files,files,java.nio.file.Files,files,readAllLines,read:all:lines
expression.LoadEvaluator,load,@LoadEvaluator,load,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,java.nio.charset.Charset,none,java.nio.charset.Charset,none,forName,for:name
expression.LoadEvaluator,load,@LoadEvaluator,load,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.interpreter.InterpreterModelSingleton,interpreter:model:singleton,main.lisp.interpreter.InterpreterModelSingleton,interpreter:model:singleton,newInput,new:input
expression.LoadEvaluator,load,@LoadEvaluator,load,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.interpreter.InterpreterModelSingleton,interpreter:model:singleton,main.lisp.interpreter.InterpreterModelSingleton,interpreter:model:singleton,get,get
expression.LoadEvaluator,load,@LoadEvaluator,load,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.TAtom,atom,main.lisp.parser.terms.TAtom,atom,TAtom,atom
expression.LoadEvaluator,load,@LoadEvaluator,load,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,java.io.IOException,io:exception,java.io.IOException,io:exception,printStackTrace,print:stack:trace
expression.LoadEvaluator,load,@LoadEvaluator,load,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,main.lisp.parser.terms.NilAtomicExpressionFactory,nil:atomic:expression:factory,newInstance,new:instance
environments.EnvironmentImplementation,environment:implementation,@NestedLexicalEnvironment,nested:lexical:environment,assign,assign,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,put,put
environments.EnvironmentImplementation,environment:implementation,@NestedLexicalEnvironment,nested:lexical:environment,assignFun,assign:fun,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,put,put
environments.EnvironmentImplementation,environment:implementation,@NestedLexicalEnvironment,nested:lexical:environment,assignFun,assign:fun,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,getFunctionMap,get:function:map
environments.EnvironmentImplementation,environment:implementation,@NestedLexicalEnvironment,nested:lexical:environment,assignFun,assign:fun,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment,main.lisp.parser.terms.IdentifierAtom,identifier:atom,main.lisp.parser.terms.IdentifierAtom,identifier:atom,toString,to:string
environments.EnvironmentImplementation,environment:implementation,@NestedLexicalEnvironment,nested:lexical:environment,lookup,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment,environments.EnvironmentImplementation,environment:implementation,@NestedLexicalEnvironment,nested:lexical:environment,isEmpty,is:empty
environments.EnvironmentImplementation,environment:implementation,@NestedLexicalEnvironment,nested:lexical:environment,lookup,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,get,get
environments.EnvironmentImplementation,environment:implementation,@NestedLexicalEnvironment,nested:lexical:environment,lookup,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,getParent,get:parent
environments.EnvironmentImplementation,environment:implementation,@NestedLexicalEnvironment,nested:lexical:environment,lookup,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,get,get
environments.EnvironmentImplementation,environment:implementation,@NestedLexicalEnvironment,nested:lexical:environment,lookup,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,getParent,get:parent
environments.EnvironmentImplementation,environment:implementation,@NestedLexicalEnvironment,nested:lexical:environment,lookup,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,get,get
environments.EnvironmentImplementation,environment:implementation,@NestedLexicalEnvironment,nested:lexical:environment,lookupFun,fun,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,main.lisp.evaluator.environment.AbstractEnvironment,abstract:environment,getFun,get:fun
environments.EnvironmentImplementation,environment:implementation,@NestedLexicalEnvironment,nested:lexical:environment,newChild,new:child,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment,environments.EnvironmentImplementation,environment:implementation,@NestedLexicalEnvironment,nested:lexical:environment,EnvironmentImplementation,environment:implementation
evaluators.LambdaSExpressionEvaluator,lambda:expression,LambdaSExpressionEvaluator,lambda:expression,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,isAtom,is:atom
evaluators.LambdaSExpressionEvaluator,lambda:expression,LambdaSExpressionEvaluator,lambda:expression,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
evaluators.LambdaSExpressionEvaluator,lambda:expression,LambdaSExpressionEvaluator,lambda:expression,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
evaluators.LambdaSExpressionEvaluator,lambda:expression,LambdaSExpressionEvaluator,lambda:expression,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,main.lisp.evaluator.Environment,environment,main.lisp.evaluator.Environment,environment,newChild,new:child
evaluators.LambdaSExpressionEvaluator,lambda:expression,LambdaSExpressionEvaluator,lambda:expression,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,main.lisp.evaluator.function.Lambda,lambda,main.lisp.evaluator.function.Lambda,lambda,evaluateLambda,evaluate:lambda
evaluators.LambdaSExpressionEvaluator,lambda:expression,LambdaSExpressionEvaluator,lambda:expression,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
evaluators.LambdaSExpressionEvaluator,lambda:expression,LambdaSExpressionEvaluator,lambda:expression,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
evaluators.LambdaSExpressionEvaluator,lambda:expression,LambdaSExpressionEvaluator,lambda:expression,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
evaluators.LambdaSExpressionEvaluator,lambda:expression,LambdaSExpressionEvaluator,lambda:expression,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,isAtom,is:atom
evaluators.LambdaSExpressionEvaluator,lambda:expression,LambdaSExpressionEvaluator,lambda:expression,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,main.lisp.evaluator.Environment,environment,main.lisp.evaluator.Environment,environment,newChild,new:child
evaluators.LambdaSExpressionEvaluator,lambda:expression,LambdaSExpressionEvaluator,lambda:expression,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,main.lisp.evaluator.function.Lambda,lambda,main.lisp.evaluator.function.Lambda,lambda,evaluateLambda,evaluate:lambda
evaluators.LambdaSExpressionEvaluator,lambda:expression,LambdaSExpressionEvaluator,lambda:expression,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
evaluators.LambdaSExpressionEvaluator,lambda:expression,LambdaSExpressionEvaluator,lambda:expression,evaluateLambda,evaluate:lambda,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,main.lisp.evaluator.function.Lambda,lambda,main.lisp.evaluator.function.Lambda,lambda,getArgumentNames,get:argument:names
evaluators.LambdaSExpressionEvaluator,lambda:expression,LambdaSExpressionEvaluator,lambda:expression,evaluateLambda,evaluate:lambda,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,isAtom,is:atom
evaluators.LambdaSExpressionEvaluator,lambda:expression,LambdaSExpressionEvaluator,lambda:expression,evaluateLambda,evaluate:lambda,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,main.lisp.evaluator.Environment,environment,main.lisp.evaluator.Environment,environment,assign,assign
evaluators.LambdaSExpressionEvaluator,lambda:expression,LambdaSExpressionEvaluator,lambda:expression,evaluateLambda,evaluate:lambda,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,main.lisp.evaluator.Environment,environment,main.lisp.evaluator.Environment,environment,assign,assign
evaluators.LambdaSExpressionEvaluator,lambda:expression,LambdaSExpressionEvaluator,lambda:expression,evaluateLambda,evaluate:lambda,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,eval,none
evaluators.LambdaSExpressionEvaluator,lambda:expression,LambdaSExpressionEvaluator,lambda:expression,evaluateLambda,evaluate:lambda,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
evaluators.LambdaSExpressionEvaluator,lambda:expression,LambdaSExpressionEvaluator,lambda:expression,evaluateLambda,evaluate:lambda,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
evaluators.LambdaSExpressionEvaluator,lambda:expression,LambdaSExpressionEvaluator,lambda:expression,evaluateLambda,evaluate:lambda,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,main.lisp.evaluator.function.Lambda,lambda,main.lisp.evaluator.function.Lambda,lambda,eval,none
functional.LambdaEvaluator,lambda,@LambdaEvaluator,lambda,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
functional.LambdaEvaluator,lambda,@LambdaEvaluator,lambda,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
functional.LambdaEvaluator,lambda,@LambdaEvaluator,lambda,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,isAtom,is:atom
functional.LambdaEvaluator,lambda,@LambdaEvaluator,lambda,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,main.lisp.evaluator.function.LambdaFactory,lambda:factory,main.lisp.evaluator.function.LambdaFactory,lambda:factory,newInstance,new:instance
functional.LambdaEvaluator,lambda,@LambdaEvaluator,lambda,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
functional.LambdaEvaluator,lambda,@LambdaEvaluator,lambda,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
functional.LambdaEvaluator,lambda,@LambdaEvaluator,lambda,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,isNIL,is:nil
functional.LambdaEvaluator,lambda,@LambdaEvaluator,lambda,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
functional.LambdaEvaluator,lambda,@LambdaEvaluator,lambda,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,functional.LambdaEvaluator,lambda,@LambdaEvaluator,lambda,expandArray,expand:array
functional.LambdaEvaluator,lambda,@LambdaEvaluator,lambda,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
functional.LambdaEvaluator,lambda,@LambdaEvaluator,lambda,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
functional.LambdaEvaluator,lambda,@LambdaEvaluator,lambda,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,isNIL,is:nil
functional.LambdaEvaluator,lambda,@LambdaEvaluator,lambda,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
functional.LambdaEvaluator,lambda,@LambdaEvaluator,lambda,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,functional.LambdaEvaluator,lambda,@LambdaEvaluator,lambda,expandArray,expand:array
functional.LambdaEvaluator,lambda,@LambdaEvaluator,lambda,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
functional.LambdaEvaluator,lambda,@LambdaEvaluator,lambda,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,main.lisp.evaluator.function.LambdaFactory,lambda:factory,main.lisp.evaluator.function.LambdaFactory,lambda:factory,newInstance,new:instance
functional.LambdaEvaluator,lambda,@LambdaEvaluator,lambda,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
functional.LambdaEvaluator,lambda,@LambdaEvaluator,lambda,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
functional.FunctionEvaluator,function,FunctionEvaluator,function,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
functional.FunctionEvaluator,function,FunctionEvaluator,function,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
functional.FunctionEvaluator,function,FunctionEvaluator,function,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
functional.FunctionEvaluator,function,FunctionEvaluator,function,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
functional.FunctionEvaluator,function,FunctionEvaluator,function,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,isAtom,is:atom
functional.FunctionEvaluator,function,FunctionEvaluator,function,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,isList,is:list
functional.FunctionEvaluator,function,FunctionEvaluator,function,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
functional.FunctionEvaluator,function,FunctionEvaluator,function,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
functional.FunctionEvaluator,function,FunctionEvaluator,function,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
functional.FunctionEvaluator,function,FunctionEvaluator,function,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
functional.FunctionEvaluator,function,FunctionEvaluator,function,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
functional.FunctionEvaluator,function,FunctionEvaluator,function,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,main.lisp.evaluator.function.LambdaFactory,lambda:factory,main.lisp.evaluator.function.LambdaFactory,lambda:factory,newInstance,new:instance
functional.FunctionEvaluator,function,FunctionEvaluator,function,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,main.lisp.evaluator.function.FunctionFactory,function:factory,main.lisp.evaluator.function.FunctionFactory,function:factory,newInstance,new:instance
functional.FunctionEvaluator,function,FunctionEvaluator,function,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,main.lisp.evaluator.function.LambdaFactory,lambda:factory,main.lisp.evaluator.function.LambdaFactory,lambda:factory,newInstance,new:instance
functional.FunctionEvaluator,function,FunctionEvaluator,function,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
functional.FunctionEvaluator,function,FunctionEvaluator,function,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
functional.FunctionEvaluator,function,FunctionEvaluator,function,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,main.lisp.evaluator.function.FunctionFactory,function:factory,main.lisp.evaluator.function.FunctionFactory,function:factory,newInstance,new:instance
functional.FunctionEvaluator,function,FunctionEvaluator,function,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,isNIL,is:nil
functional.FunctionEvaluator,function,FunctionEvaluator,function,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
functional.FunctionEvaluator,function,FunctionEvaluator,function,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
functional.FunctionEvaluator,function,FunctionEvaluator,function,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
functional.FunctionEvaluator,function,FunctionEvaluator,function,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,isNIL,is:nil
functional.FunctionEvaluator,function,FunctionEvaluator,function,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
functional.FunctionEvaluator,function,FunctionEvaluator,function,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
functional.FunctionEvaluator,function,FunctionEvaluator,function,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,main.lisp.evaluator.function.LambdaFactory,lambda:factory,main.lisp.evaluator.function.LambdaFactory,lambda:factory,newInstance,new:instance
functional.FunctionEvaluator,function,FunctionEvaluator,function,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
functional.FunctionEvaluator,function,FunctionEvaluator,function,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
functional.FunctionEvaluator,function,FunctionEvaluator,function,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getHead,get:head
functional.FunctionEvaluator,function,FunctionEvaluator,function,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,main.lisp.parser.terms.SExpression,expression,main.lisp.parser.terms.SExpression,expression,getTail,get:tail
functional.FunctionEvaluator,function,FunctionEvaluator,function,eval,none,Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:IdentifierAtom:AbstractAtom:AbstractSExpression:OperationRegisterer:BasicExpression:AbstractSExpression:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:Evaluator:AbstractEnvironment:BasicExpressionEvaluator:Evaluator:Evaluator,identifier:atom:abstract:atom:abstract:expression:operation:basic:expression:abstract:expression:abstract:environment:basic:expression,main.lisp.evaluator.function.FunctionFactory,function:factory,main.lisp.evaluator.function.FunctionFactory,function:factory,newInstance,new:instance
